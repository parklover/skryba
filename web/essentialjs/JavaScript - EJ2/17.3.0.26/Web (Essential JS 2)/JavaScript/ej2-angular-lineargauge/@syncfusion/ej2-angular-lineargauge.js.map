/*!
*  filename: ej2-angular-lineargauge.js.map
*  version : 17.3.27
*  Copyright Syncfusion Inc. 2001 - 2018. All rights reserved.
*  Use of this code is subject to the terms of our license.
*  A copy of the current license can be obtained at any time by e-mailing
*  licensing@syncfusion.com. Any infringement will be prosecuted under
*  applicable laws. 
*/

{"version":3,"file":"ej2-angular-lineargauge.js","sources":["~/@syncfusion/ej2-angular-lineargauge/ej2-angular-lineargauge.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/lineargauge-all.module.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/lineargauge.module.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/lineargauge.component.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/annotations.directive.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/axes.directive.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/pointers.directive.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/ranges.directive.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {RangeDirective,RangesDirective,PointerDirective,PointersDirective,AxisDirective,AxesDirective,AnnotationDirective,AnnotationsDirective,LinearGaugeComponent,LinearGaugeModule,LinearGaugeAllModule,GaugeTooltipService,AnnotationsService,LinearGauge,Font,Margin,Border,Annotation,Container,TooltipSettings,ILinearGaugeEventArgs,ILoadedEventArgs,ILoadEventArgs,IAnimationCompleteEventArgs,IAxisLabelRenderEventArgs,ITooltipRenderEventArgs,IAnnotationRenderEventArgs,IMouseEventArgs,IResizeEventArgs,IValueChangeEventArgs,IVisiblePointer,IMoveCursor,IThemeStyle,Line,Label,Range,Tick,Pointer,Axis,Position,Point,LinearGaugeTheme,MarkerType,Placement,Orientation,ContainerType,stringToNumber,measureText,withInRange,convertPixelToValue,getPathToRect,getElement,removeElement,isPointerDrag,valueToCoefficient,getFontStyle,textFormatter,formatValue,getLabelFormat,getTemplateFunction,getElementOffset,VisibleRange,GaugeLocation,Size,Rect,CustomizeOption,PathOption,RectOption,TextOption,VisibleLabels,Align,textElement,calculateNiceInterval,getActualDesiredIntervalsCount,getPointer,getRangeColor,getRangePalette,calculateShapes,getBox,Annotations,GaugeTooltip,LinearGaugeModel,LineModel,LabelModel,RangeModel,TickModel,PointerModel,AxisModel,FontModel,MarginModel,BorderModel,AnnotationModel,ContainerModel,TooltipSettingsModel} from './public_api';\n\nexport {inputs as ɵa,outputs as ɵb} from './src/linear-gauge/lineargauge.component';","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RangeDirective, RangesDirective } from './ranges.directive';\nimport { PointerDirective, PointersDirective } from './pointers.directive';\nimport { AxisDirective, AxesDirective } from './axes.directive';\nimport { AnnotationDirective, AnnotationsDirective } from './annotations.directive';\nimport { LinearGaugeComponent } from './lineargauge.component';\nimport { LinearGaugeModule } from './lineargauge.module';\nimport {GaugeTooltip, Annotations} from '@syncfusion/ej2-lineargauge';\n\n\nexport const /** @type {?} */ GaugeTooltipService: ValueProvider = { provide: 'LinearGaugeGaugeTooltip', useValue: GaugeTooltip};\nexport const /** @type {?} */ AnnotationsService: ValueProvider = { provide: 'LinearGaugeAnnotations', useValue: Annotations};\n/**\n * NgModule definition for the LinearGauge component with providers.\n */\nexport class LinearGaugeAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, LinearGaugeModule],\n    exports: [\n        LinearGaugeModule\n    ],\n    providers:[\n        GaugeTooltipService,\n        AnnotationsService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LinearGaugeAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLinearGaugeAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLinearGaugeAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RangeDirective, RangesDirective } from './ranges.directive';\nimport { PointerDirective, PointersDirective } from './pointers.directive';\nimport { AxisDirective, AxesDirective } from './axes.directive';\nimport { AnnotationDirective, AnnotationsDirective } from './annotations.directive';\nimport { LinearGaugeComponent } from './lineargauge.component';\n/**\n * NgModule definition for the LinearGauge component.\n */\nexport class LinearGaugeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        LinearGaugeComponent,\n        RangeDirective,\n        RangesDirective,\n        PointerDirective,\n        PointersDirective,\n        AxisDirective,\n        AxesDirective,\n        AnnotationDirective,\n        AnnotationsDirective\n    ],\n    exports: [\n        LinearGaugeComponent,\n        RangeDirective,\n        RangesDirective,\n        PointerDirective,\n        PointersDirective,\n        AxisDirective,\n        AxesDirective,\n        AnnotationDirective,\n        AnnotationsDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LinearGaugeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLinearGaugeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLinearGaugeModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { LinearGauge } from '@syncfusion/ej2-lineargauge';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { AxesDirective } from './axes.directive';\nimport { AnnotationsDirective } from './annotations.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['annotations','axes','background','border','container','description','enablePersistence','enableRtl','format','height','locale','margin','orientation','rangePalettes','tabIndex','theme','title','titleStyle','tooltip','useGroupingSeparator','width'];\nexport const /** @type {?} */ outputs: string[] = ['animationComplete','annotationRender','axisLabelRender','gaugeMouseDown','gaugeMouseLeave','gaugeMouseMove','gaugeMouseUp','load','loaded','resized','tooltipRender','valueChange'];\nexport const /** @type {?} */ twoWays: string[] = [''];\n/**\n * Linear Gauge Component\n * ```html\n * <ej-lineargauge></ej-lineargauge>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class LinearGaugeComponent extends LinearGauge implements IComponentBase {\npublic childAxes: any;\npublic childAnnotations: any;\npublic tags: string[] = ['axes', 'annotations'];\n\n    \n    @Template()\npublic tooltip_template: any;\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('LinearGaugeGaugeTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('LinearGaugeAnnotations');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-lineargauge',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childAxes: new ContentChild(AxesDirective), \n        childAnnotations: new ContentChild(AnnotationsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip_template': [{ type: ContentChild, args: ['tooltipTemplate', ] },],\n};\n}\n\nfunction LinearGaugeComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nLinearGaugeComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLinearGaugeComponent.ctorParameters;\n/** @type {?} */\nLinearGaugeComponent.propDecorators;\n/** @type {?} */\nLinearGaugeComponent.prototype.childAxes;\n/** @type {?} */\nLinearGaugeComponent.prototype.childAnnotations;\n/** @type {?} */\nLinearGaugeComponent.prototype.tags;\n/** @type {?} */\nLinearGaugeComponent.prototype.tooltip_template;\n/** @type {?} */\nLinearGaugeComponent.prototype.registerEvents;\n/** @type {?} */\nLinearGaugeComponent.prototype.addTwoWay;\n/** @type {?} */\nLinearGaugeComponent.prototype.ngEle;\n/** @type {?} */\nLinearGaugeComponent.prototype.srenderer;\n/** @type {?} */\nLinearGaugeComponent.prototype.viewContainerRef;\n/** @type {?} */\nLinearGaugeComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet /** @type {?} */ input: string[] = ['axisIndex', 'axisValue', 'content', 'font', 'horizontalAlignment', 'verticalAlignment', 'x', 'y', 'zIndex'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Annotation directive\n * ```html\n * <e-annotations><e-annotation></e-annotation></e-annotations>\n * ```\n */\nexport class AnnotationDirective extends ComplexBase<AnnotationDirective> {\n/**\n * Specifies the index of axis.\n */\npublic axisIndex: any;\n/**\n * Specifies the value of axis.\n */\npublic axisValue: any;\n/**\n * The font of the axis labels.\n */\npublic font: any;\n/**\n * Specifies the horizontal alignment of annotation.\n */\npublic horizontalAlignment: any;\n/**\n * Specifies the vertical alignment of annotation.\n */\npublic verticalAlignment: any;\n/**\n * Specifies the position of x.\n */\npublic x: any;\n/**\n * Specifies the position of y.\n */\npublic y: any;\n/**\n * Specifies the zIndex of the annotation.\n */\npublic zIndex: any;\n/**\n * Specifies the id of html element.\n */\n@Template()\n    public content: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-annotations>e-annotation',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: ContentChild, args: ['content', ] },],\n};\n}\n\nfunction AnnotationDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAnnotationDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAnnotationDirective.ctorParameters;\n/** @type {?} */\nAnnotationDirective.propDecorators;\n/**\n * Specifies the index of axis.\n * @type {?}\n */\nAnnotationDirective.prototype.axisIndex;\n/**\n * Specifies the value of axis.\n * @type {?}\n */\nAnnotationDirective.prototype.axisValue;\n/**\n * The font of the axis labels.\n * @type {?}\n */\nAnnotationDirective.prototype.font;\n/**\n * Specifies the horizontal alignment of annotation.\n * @type {?}\n */\nAnnotationDirective.prototype.horizontalAlignment;\n/**\n * Specifies the vertical alignment of annotation.\n * @type {?}\n */\nAnnotationDirective.prototype.verticalAlignment;\n/**\n * Specifies the position of x.\n * @type {?}\n */\nAnnotationDirective.prototype.x;\n/**\n * Specifies the position of y.\n * @type {?}\n */\nAnnotationDirective.prototype.y;\n/**\n * Specifies the zIndex of the annotation.\n * @type {?}\n */\nAnnotationDirective.prototype.zIndex;\n/**\n * Specifies the id of html element.\n * @type {?}\n */\nAnnotationDirective.prototype.content;\n/** @type {?} */\nAnnotationDirective.prototype.viewContainerRef;\n}\n\n/**\n * Annotation Array Directive\n */\nexport class AnnotationsDirective extends ArrayBase<AnnotationsDirective> {\nconstructor() {\n        super('annotations');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-linear-gauge>e-annotations',\n    queries: {\n        children: new ContentChildren(AnnotationDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AnnotationsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAnnotationsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAnnotationsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\nimport { RangesDirective } from './ranges.directive';\nimport { PointersDirective } from './pointers.directive';\n\nlet /** @type {?} */ input: string[] = ['isInversed', 'labelStyle', 'line', 'majorTicks', 'maximum', 'minimum', 'minorTicks', 'opposedPosition', 'pointers', 'ranges'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Axes directive\n * ```html\n * <e-axes><e-axis></e-axis></e-axes>\n * ```\n */\nexport class AxisDirective extends ComplexBase<AxisDirective> {\npublic childRanges: any;\npublic childPointers: any;\npublic tags: string[] = ['ranges', 'pointers'];\n/**\n * Specifies the axis rendering direction.\n */\npublic isInversed: any;\n/**\n * Options for customizing the axis label appearance.\n */\npublic labelStyle: any;\n/**\n * Options for customizing the axis line.\n */\npublic line: any;\n/**\n * Options for customizing the major tick lines.\n */\npublic majorTicks: any;\n/**\n * Specifies the maximum value of an axis.\n */\npublic maximum: any;\n/**\n * Specifies the minimum value of an axis.\n */\npublic minimum: any;\n/**\n * Options for customizing the minor tick lines.\n */\npublic minorTicks: any;\n/**\n * Specifies the axis rendering position.\n */\npublic opposedPosition: any;\n/**\n * Options for customizing the pointers of an axis\n */\npublic pointers: any;\n/**\n * Options for customizing the ranges of an axis\n */\npublic ranges: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-axes>e-axis',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n        childRanges: new ContentChild(RangesDirective), \n        childPointers: new ContentChild(PointersDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction AxisDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAxisDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAxisDirective.ctorParameters;\n/** @type {?} */\nAxisDirective.prototype.childRanges;\n/** @type {?} */\nAxisDirective.prototype.childPointers;\n/** @type {?} */\nAxisDirective.prototype.tags;\n/**\n * Specifies the axis rendering direction.\n * @type {?}\n */\nAxisDirective.prototype.isInversed;\n/**\n * Options for customizing the axis label appearance.\n * @type {?}\n */\nAxisDirective.prototype.labelStyle;\n/**\n * Options for customizing the axis line.\n * @type {?}\n */\nAxisDirective.prototype.line;\n/**\n * Options for customizing the major tick lines.\n * @type {?}\n */\nAxisDirective.prototype.majorTicks;\n/**\n * Specifies the maximum value of an axis.\n * @type {?}\n */\nAxisDirective.prototype.maximum;\n/**\n * Specifies the minimum value of an axis.\n * @type {?}\n */\nAxisDirective.prototype.minimum;\n/**\n * Options for customizing the minor tick lines.\n * @type {?}\n */\nAxisDirective.prototype.minorTicks;\n/**\n * Specifies the axis rendering position.\n * @type {?}\n */\nAxisDirective.prototype.opposedPosition;\n/**\n * Options for customizing the pointers of an axis\n * @type {?}\n */\nAxisDirective.prototype.pointers;\n/**\n * Options for customizing the ranges of an axis\n * @type {?}\n */\nAxisDirective.prototype.ranges;\n/** @type {?} */\nAxisDirective.prototype.viewContainerRef;\n}\n\n/**\n * Axis Array Directive\n */\nexport class AxesDirective extends ArrayBase<AxesDirective> {\nconstructor() {\n        super('axes');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-lineargauge>e-axes',\n    queries: {\n        children: new ContentChildren(AxisDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AxesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAxesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAxesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['animationDuration', 'border', 'color', 'description', 'enableDrag', 'height', 'imageUrl', 'markerType', 'offset', 'opacity', 'placement', 'roundedCornerRadius', 'type', 'value', 'width'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Pointers directive\n * ```html\n * <e-pointers><e-pointer></e-pointer></e-pointers>\n * ```\n */\nexport class PointerDirective extends ComplexBase<PointerDirective> {\n/**\n * Specifies the type of pointer.\n */\npublic type: any;\n/**\n * Specifies the animating duration of pointer in milliseconds.\n */\npublic animationDuration: any;\n/**\n * Specifies the border of pointer.\n */\npublic border: any;\n/**\n * Specifies the color of the pointer.\n */\npublic color: any;\n/**\n * Description of the pointer.\n */\npublic description: any;\n/**\n * Specifies the enable or disable the pointer drag.\n */\npublic enableDrag: any;\n/**\n * Specifies the height of pointer.\n */\npublic height: any;\n/**\n * Specifies the path of image.\n */\npublic imageUrl: any;\n/**\n * Specifies the marker shape in pointer.\n */\npublic markerType: any;\n/**\n * Specifies to move the pointer.\n */\npublic offset: any;\n/**\n * Specifies the opacity for pointer.\n */\npublic opacity: any;\n/**\n * Specifies the place of the pointer.\n */\npublic placement: any;\n/**\n * Specifies the corner radius for rounded rectangle.\n */\npublic roundedCornerRadius: any;\n/**\n * Specifies value of the pointer.\n */\npublic value: any;\n/**\n * Specifies the width of pointer.\n */\npublic width: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-pointers>e-pointer',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction PointerDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPointerDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPointerDirective.ctorParameters;\n/**\n * Specifies the type of pointer.\n * @type {?}\n */\nPointerDirective.prototype.type;\n/**\n * Specifies the animating duration of pointer in milliseconds.\n * @type {?}\n */\nPointerDirective.prototype.animationDuration;\n/**\n * Specifies the border of pointer.\n * @type {?}\n */\nPointerDirective.prototype.border;\n/**\n * Specifies the color of the pointer.\n * @type {?}\n */\nPointerDirective.prototype.color;\n/**\n * Description of the pointer.\n * @type {?}\n */\nPointerDirective.prototype.description;\n/**\n * Specifies the enable or disable the pointer drag.\n * @type {?}\n */\nPointerDirective.prototype.enableDrag;\n/**\n * Specifies the height of pointer.\n * @type {?}\n */\nPointerDirective.prototype.height;\n/**\n * Specifies the path of image.\n * @type {?}\n */\nPointerDirective.prototype.imageUrl;\n/**\n * Specifies the marker shape in pointer.\n * @type {?}\n */\nPointerDirective.prototype.markerType;\n/**\n * Specifies to move the pointer.\n * @type {?}\n */\nPointerDirective.prototype.offset;\n/**\n * Specifies the opacity for pointer.\n * @type {?}\n */\nPointerDirective.prototype.opacity;\n/**\n * Specifies the place of the pointer.\n * @type {?}\n */\nPointerDirective.prototype.placement;\n/**\n * Specifies the corner radius for rounded rectangle.\n * @type {?}\n */\nPointerDirective.prototype.roundedCornerRadius;\n/**\n * Specifies value of the pointer.\n * @type {?}\n */\nPointerDirective.prototype.value;\n/**\n * Specifies the width of pointer.\n * @type {?}\n */\nPointerDirective.prototype.width;\n/** @type {?} */\nPointerDirective.prototype.viewContainerRef;\n}\n\n/**\n * Pointer Array Directive\n */\nexport class PointersDirective extends ArrayBase<PointersDirective> {\nconstructor() {\n        super('pointers');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-linear-gauge>e-axes>e-axis>e-pointers',\n    queries: {\n        children: new ContentChildren(PointerDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PointersDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPointersDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPointersDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['border', 'color', 'end', 'endWidth', 'offset', 'position', 'start', 'startWidth'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Ranges directive\n * ```html\n * <e-ranges><e-range></e-range></e-ranges>\n * ```\n */\nexport class RangeDirective extends ComplexBase<RangeDirective> {\n/**\n * Specifies the border of axis range.\n */\npublic border: any;\n/**\n * Color of the axis range.\n */\npublic color: any;\n/**\n * End of the axis range.\n */\npublic end: any;\n/**\n * Ending width of axis range.\n */\npublic endWidth: any;\n/**\n * Specifies to move the axis range.\n */\npublic offset: any;\n/**\n * Specifies to position the axis range.\n */\npublic position: any;\n/**\n * Start of the axis range.\n */\npublic start: any;\n/**\n * Starting width of axis range.\n */\npublic startWidth: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-ranges>e-range',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction RangeDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nRangeDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangeDirective.ctorParameters;\n/**\n * Specifies the border of axis range.\n * @type {?}\n */\nRangeDirective.prototype.border;\n/**\n * Color of the axis range.\n * @type {?}\n */\nRangeDirective.prototype.color;\n/**\n * End of the axis range.\n * @type {?}\n */\nRangeDirective.prototype.end;\n/**\n * Ending width of axis range.\n * @type {?}\n */\nRangeDirective.prototype.endWidth;\n/**\n * Specifies to move the axis range.\n * @type {?}\n */\nRangeDirective.prototype.offset;\n/**\n * Specifies to position the axis range.\n * @type {?}\n */\nRangeDirective.prototype.position;\n/**\n * Start of the axis range.\n * @type {?}\n */\nRangeDirective.prototype.start;\n/**\n * Starting width of axis range.\n * @type {?}\n */\nRangeDirective.prototype.startWidth;\n/** @type {?} */\nRangeDirective.prototype.viewContainerRef;\n}\n\n/**\n * Range Array Directive\n */\nexport class RangesDirective extends ArrayBase<RangesDirective> {\nconstructor() {\n        super('ranges');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-lineargauge>e-axes>e-axis>e-ranges',\n    queries: {\n        children: new ContentChildren(RangeDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RangesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nRangesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["__metadata","__decorate","outputs","input"],"mappings":"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"}
