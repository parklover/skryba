/*!
*  filename: ej2-angular-lineargauge.umd.min.js.map
*  version : 17.3.27
*  Copyright Syncfusion Inc. 2001 - 2018. All rights reserved.
*  Use of this code is subject to the terms of our license.
*  A copy of the current license can be obtained at any time by e-mailing
*  licensing@syncfusion.com. Any infringement will be prosecuted under
*  applicable laws. 
*/

{"version":3,"file":"ej2-angular-lineargauge.umd.min.js","sources":["~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/ranges.directive.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/pointers.directive.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/axes.directive.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/annotations.directive.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/lineargauge.component.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/lineargauge.module.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/lineargauge-all.module.ts"],"sourcesContent":["import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['border', 'color', 'end', 'endWidth', 'offset', 'position', 'start', 'startWidth'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Ranges directive\n * ```html\n * <e-ranges><e-range></e-range></e-ranges>\n * ```\n */\nexport class RangeDirective extends ComplexBase<RangeDirective> {\n/**\n * Specifies the border of axis range.\n */\npublic border: any;\n/**\n * Color of the axis range.\n */\npublic color: any;\n/**\n * End of the axis range.\n */\npublic end: any;\n/**\n * Ending width of axis range.\n */\npublic endWidth: any;\n/**\n * Specifies to move the axis range.\n */\npublic offset: any;\n/**\n * Specifies to position the axis range.\n */\npublic position: any;\n/**\n * Start of the axis range.\n */\npublic start: any;\n/**\n * Starting width of axis range.\n */\npublic startWidth: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-ranges>e-range',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction RangeDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nRangeDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangeDirective.ctorParameters;\n/**\n * Specifies the border of axis range.\n * @type {?}\n */\nRangeDirective.prototype.border;\n/**\n * Color of the axis range.\n * @type {?}\n */\nRangeDirective.prototype.color;\n/**\n * End of the axis range.\n * @type {?}\n */\nRangeDirective.prototype.end;\n/**\n * Ending width of axis range.\n * @type {?}\n */\nRangeDirective.prototype.endWidth;\n/**\n * Specifies to move the axis range.\n * @type {?}\n */\nRangeDirective.prototype.offset;\n/**\n * Specifies to position the axis range.\n * @type {?}\n */\nRangeDirective.prototype.position;\n/**\n * Start of the axis range.\n * @type {?}\n */\nRangeDirective.prototype.start;\n/**\n * Starting width of axis range.\n * @type {?}\n */\nRangeDirective.prototype.startWidth;\n/** @type {?} */\nRangeDirective.prototype.viewContainerRef;\n}\n\n/**\n * Range Array Directive\n */\nexport class RangesDirective extends ArrayBase<RangesDirective> {\nconstructor() {\n        super('ranges');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-lineargauge>e-axes>e-axis>e-ranges',\n    queries: {\n        children: new ContentChildren(RangeDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RangesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nRangesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['animationDuration', 'border', 'color', 'description', 'enableDrag', 'height', 'imageUrl', 'markerType', 'offset', 'opacity', 'placement', 'roundedCornerRadius', 'type', 'value', 'width'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Pointers directive\n * ```html\n * <e-pointers><e-pointer></e-pointer></e-pointers>\n * ```\n */\nexport class PointerDirective extends ComplexBase<PointerDirective> {\n/**\n * Specifies the type of pointer.\n */\npublic type: any;\n/**\n * Specifies the animating duration of pointer in milliseconds.\n */\npublic animationDuration: any;\n/**\n * Specifies the border of pointer.\n */\npublic border: any;\n/**\n * Specifies the color of the pointer.\n */\npublic color: any;\n/**\n * Description of the pointer.\n */\npublic description: any;\n/**\n * Specifies the enable or disable the pointer drag.\n */\npublic enableDrag: any;\n/**\n * Specifies the height of pointer.\n */\npublic height: any;\n/**\n * Specifies the path of image.\n */\npublic imageUrl: any;\n/**\n * Specifies the marker shape in pointer.\n */\npublic markerType: any;\n/**\n * Specifies to move the pointer.\n */\npublic offset: any;\n/**\n * Specifies the opacity for pointer.\n */\npublic opacity: any;\n/**\n * Specifies the place of the pointer.\n */\npublic placement: any;\n/**\n * Specifies the corner radius for rounded rectangle.\n */\npublic roundedCornerRadius: any;\n/**\n * Specifies value of the pointer.\n */\npublic value: any;\n/**\n * Specifies the width of pointer.\n */\npublic width: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-pointers>e-pointer',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction PointerDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPointerDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPointerDirective.ctorParameters;\n/**\n * Specifies the type of pointer.\n * @type {?}\n */\nPointerDirective.prototype.type;\n/**\n * Specifies the animating duration of pointer in milliseconds.\n * @type {?}\n */\nPointerDirective.prototype.animationDuration;\n/**\n * Specifies the border of pointer.\n * @type {?}\n */\nPointerDirective.prototype.border;\n/**\n * Specifies the color of the pointer.\n * @type {?}\n */\nPointerDirective.prototype.color;\n/**\n * Description of the pointer.\n * @type {?}\n */\nPointerDirective.prototype.description;\n/**\n * Specifies the enable or disable the pointer drag.\n * @type {?}\n */\nPointerDirective.prototype.enableDrag;\n/**\n * Specifies the height of pointer.\n * @type {?}\n */\nPointerDirective.prototype.height;\n/**\n * Specifies the path of image.\n * @type {?}\n */\nPointerDirective.prototype.imageUrl;\n/**\n * Specifies the marker shape in pointer.\n * @type {?}\n */\nPointerDirective.prototype.markerType;\n/**\n * Specifies to move the pointer.\n * @type {?}\n */\nPointerDirective.prototype.offset;\n/**\n * Specifies the opacity for pointer.\n * @type {?}\n */\nPointerDirective.prototype.opacity;\n/**\n * Specifies the place of the pointer.\n * @type {?}\n */\nPointerDirective.prototype.placement;\n/**\n * Specifies the corner radius for rounded rectangle.\n * @type {?}\n */\nPointerDirective.prototype.roundedCornerRadius;\n/**\n * Specifies value of the pointer.\n * @type {?}\n */\nPointerDirective.prototype.value;\n/**\n * Specifies the width of pointer.\n * @type {?}\n */\nPointerDirective.prototype.width;\n/** @type {?} */\nPointerDirective.prototype.viewContainerRef;\n}\n\n/**\n * Pointer Array Directive\n */\nexport class PointersDirective extends ArrayBase<PointersDirective> {\nconstructor() {\n        super('pointers');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-linear-gauge>e-axes>e-axis>e-pointers',\n    queries: {\n        children: new ContentChildren(PointerDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PointersDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPointersDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPointersDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\nimport { RangesDirective } from './ranges.directive';\nimport { PointersDirective } from './pointers.directive';\n\nlet /** @type {?} */ input: string[] = ['isInversed', 'labelStyle', 'line', 'majorTicks', 'maximum', 'minimum', 'minorTicks', 'opposedPosition', 'pointers', 'ranges'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Axes directive\n * ```html\n * <e-axes><e-axis></e-axis></e-axes>\n * ```\n */\nexport class AxisDirective extends ComplexBase<AxisDirective> {\npublic childRanges: any;\npublic childPointers: any;\npublic tags: string[] = ['ranges', 'pointers'];\n/**\n * Specifies the axis rendering direction.\n */\npublic isInversed: any;\n/**\n * Options for customizing the axis label appearance.\n */\npublic labelStyle: any;\n/**\n * Options for customizing the axis line.\n */\npublic line: any;\n/**\n * Options for customizing the major tick lines.\n */\npublic majorTicks: any;\n/**\n * Specifies the maximum value of an axis.\n */\npublic maximum: any;\n/**\n * Specifies the minimum value of an axis.\n */\npublic minimum: any;\n/**\n * Options for customizing the minor tick lines.\n */\npublic minorTicks: any;\n/**\n * Specifies the axis rendering position.\n */\npublic opposedPosition: any;\n/**\n * Options for customizing the pointers of an axis\n */\npublic pointers: any;\n/**\n * Options for customizing the ranges of an axis\n */\npublic ranges: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-axes>e-axis',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n        childRanges: new ContentChild(RangesDirective), \n        childPointers: new ContentChild(PointersDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction AxisDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAxisDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAxisDirective.ctorParameters;\n/** @type {?} */\nAxisDirective.prototype.childRanges;\n/** @type {?} */\nAxisDirective.prototype.childPointers;\n/** @type {?} */\nAxisDirective.prototype.tags;\n/**\n * Specifies the axis rendering direction.\n * @type {?}\n */\nAxisDirective.prototype.isInversed;\n/**\n * Options for customizing the axis label appearance.\n * @type {?}\n */\nAxisDirective.prototype.labelStyle;\n/**\n * Options for customizing the axis line.\n * @type {?}\n */\nAxisDirective.prototype.line;\n/**\n * Options for customizing the major tick lines.\n * @type {?}\n */\nAxisDirective.prototype.majorTicks;\n/**\n * Specifies the maximum value of an axis.\n * @type {?}\n */\nAxisDirective.prototype.maximum;\n/**\n * Specifies the minimum value of an axis.\n * @type {?}\n */\nAxisDirective.prototype.minimum;\n/**\n * Options for customizing the minor tick lines.\n * @type {?}\n */\nAxisDirective.prototype.minorTicks;\n/**\n * Specifies the axis rendering position.\n * @type {?}\n */\nAxisDirective.prototype.opposedPosition;\n/**\n * Options for customizing the pointers of an axis\n * @type {?}\n */\nAxisDirective.prototype.pointers;\n/**\n * Options for customizing the ranges of an axis\n * @type {?}\n */\nAxisDirective.prototype.ranges;\n/** @type {?} */\nAxisDirective.prototype.viewContainerRef;\n}\n\n/**\n * Axis Array Directive\n */\nexport class AxesDirective extends ArrayBase<AxesDirective> {\nconstructor() {\n        super('axes');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-lineargauge>e-axes',\n    queries: {\n        children: new ContentChildren(AxisDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AxesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAxesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAxesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet /** @type {?} */ input: string[] = ['axisIndex', 'axisValue', 'content', 'font', 'horizontalAlignment', 'verticalAlignment', 'x', 'y', 'zIndex'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Annotation directive\n * ```html\n * <e-annotations><e-annotation></e-annotation></e-annotations>\n * ```\n */\nexport class AnnotationDirective extends ComplexBase<AnnotationDirective> {\n/**\n * Specifies the index of axis.\n */\npublic axisIndex: any;\n/**\n * Specifies the value of axis.\n */\npublic axisValue: any;\n/**\n * The font of the axis labels.\n */\npublic font: any;\n/**\n * Specifies the horizontal alignment of annotation.\n */\npublic horizontalAlignment: any;\n/**\n * Specifies the vertical alignment of annotation.\n */\npublic verticalAlignment: any;\n/**\n * Specifies the position of x.\n */\npublic x: any;\n/**\n * Specifies the position of y.\n */\npublic y: any;\n/**\n * Specifies the zIndex of the annotation.\n */\npublic zIndex: any;\n/**\n * Specifies the id of html element.\n */\n@Template()\n    public content: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-annotations>e-annotation',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: ContentChild, args: ['content', ] },],\n};\n}\n\nfunction AnnotationDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAnnotationDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAnnotationDirective.ctorParameters;\n/** @type {?} */\nAnnotationDirective.propDecorators;\n/**\n * Specifies the index of axis.\n * @type {?}\n */\nAnnotationDirective.prototype.axisIndex;\n/**\n * Specifies the value of axis.\n * @type {?}\n */\nAnnotationDirective.prototype.axisValue;\n/**\n * The font of the axis labels.\n * @type {?}\n */\nAnnotationDirective.prototype.font;\n/**\n * Specifies the horizontal alignment of annotation.\n * @type {?}\n */\nAnnotationDirective.prototype.horizontalAlignment;\n/**\n * Specifies the vertical alignment of annotation.\n * @type {?}\n */\nAnnotationDirective.prototype.verticalAlignment;\n/**\n * Specifies the position of x.\n * @type {?}\n */\nAnnotationDirective.prototype.x;\n/**\n * Specifies the position of y.\n * @type {?}\n */\nAnnotationDirective.prototype.y;\n/**\n * Specifies the zIndex of the annotation.\n * @type {?}\n */\nAnnotationDirective.prototype.zIndex;\n/**\n * Specifies the id of html element.\n * @type {?}\n */\nAnnotationDirective.prototype.content;\n/** @type {?} */\nAnnotationDirective.prototype.viewContainerRef;\n}\n\n/**\n * Annotation Array Directive\n */\nexport class AnnotationsDirective extends ArrayBase<AnnotationsDirective> {\nconstructor() {\n        super('annotations');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-linear-gauge>e-annotations',\n    queries: {\n        children: new ContentChildren(AnnotationDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AnnotationsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAnnotationsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAnnotationsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { LinearGauge } from '@syncfusion/ej2-lineargauge';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { AxesDirective } from './axes.directive';\nimport { AnnotationsDirective } from './annotations.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['annotations','axes','background','border','container','description','enablePersistence','enableRtl','format','height','locale','margin','orientation','rangePalettes','tabIndex','theme','title','titleStyle','tooltip','useGroupingSeparator','width'];\nexport const /** @type {?} */ outputs: string[] = ['animationComplete','annotationRender','axisLabelRender','gaugeMouseDown','gaugeMouseLeave','gaugeMouseMove','gaugeMouseUp','load','loaded','resized','tooltipRender','valueChange'];\nexport const /** @type {?} */ twoWays: string[] = [''];\n/**\n * Linear Gauge Component\n * ```html\n * <ej-lineargauge></ej-lineargauge>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class LinearGaugeComponent extends LinearGauge implements IComponentBase {\npublic childAxes: any;\npublic childAnnotations: any;\npublic tags: string[] = ['axes', 'annotations'];\n\n    \n    @Template()\npublic tooltip_template: any;\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('LinearGaugeGaugeTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('LinearGaugeAnnotations');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-lineargauge',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childAxes: new ContentChild(AxesDirective), \n        childAnnotations: new ContentChild(AnnotationsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip_template': [{ type: ContentChild, args: ['tooltipTemplate', ] },],\n};\n}\n\nfunction LinearGaugeComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nLinearGaugeComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLinearGaugeComponent.ctorParameters;\n/** @type {?} */\nLinearGaugeComponent.propDecorators;\n/** @type {?} */\nLinearGaugeComponent.prototype.childAxes;\n/** @type {?} */\nLinearGaugeComponent.prototype.childAnnotations;\n/** @type {?} */\nLinearGaugeComponent.prototype.tags;\n/** @type {?} */\nLinearGaugeComponent.prototype.tooltip_template;\n/** @type {?} */\nLinearGaugeComponent.prototype.registerEvents;\n/** @type {?} */\nLinearGaugeComponent.prototype.addTwoWay;\n/** @type {?} */\nLinearGaugeComponent.prototype.ngEle;\n/** @type {?} */\nLinearGaugeComponent.prototype.srenderer;\n/** @type {?} */\nLinearGaugeComponent.prototype.viewContainerRef;\n/** @type {?} */\nLinearGaugeComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RangeDirective, RangesDirective } from './ranges.directive';\nimport { PointerDirective, PointersDirective } from './pointers.directive';\nimport { AxisDirective, AxesDirective } from './axes.directive';\nimport { AnnotationDirective, AnnotationsDirective } from './annotations.directive';\nimport { LinearGaugeComponent } from './lineargauge.component';\n/**\n * NgModule definition for the LinearGauge component.\n */\nexport class LinearGaugeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        LinearGaugeComponent,\n        RangeDirective,\n        RangesDirective,\n        PointerDirective,\n        PointersDirective,\n        AxisDirective,\n        AxesDirective,\n        AnnotationDirective,\n        AnnotationsDirective\n    ],\n    exports: [\n        LinearGaugeComponent,\n        RangeDirective,\n        RangesDirective,\n        PointerDirective,\n        PointersDirective,\n        AxisDirective,\n        AxesDirective,\n        AnnotationDirective,\n        AnnotationsDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LinearGaugeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLinearGaugeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLinearGaugeModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RangeDirective, RangesDirective } from './ranges.directive';\nimport { PointerDirective, PointersDirective } from './pointers.directive';\nimport { AxisDirective, AxesDirective } from './axes.directive';\nimport { AnnotationDirective, AnnotationsDirective } from './annotations.directive';\nimport { LinearGaugeComponent } from './lineargauge.component';\nimport { LinearGaugeModule } from './lineargauge.module';\nimport {GaugeTooltip, Annotations} from '@syncfusion/ej2-lineargauge';\n\n\nexport const /** @type {?} */ GaugeTooltipService: ValueProvider = { provide: 'LinearGaugeGaugeTooltip', useValue: GaugeTooltip};\nexport const /** @type {?} */ AnnotationsService: ValueProvider = { provide: 'LinearGaugeAnnotations', useValue: Annotations};\n/**\n * NgModule definition for the LinearGauge component with providers.\n */\nexport class LinearGaugeAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, LinearGaugeModule],\n    exports: [\n        LinearGaugeModule\n    ],\n    providers:[\n        GaugeTooltipService,\n        AnnotationsService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LinearGaugeAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLinearGaugeAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLinearGaugeAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["outputs","RangeDirective","_super","viewContainerRef","_this","call","this","setValue","registerEvents","__extends","ComplexBase","decorators","type","Directive","args","selector","inputs","queries","ctorParameters","ViewContainerRef","RangesDirective","ArrayBase","children","ContentChildren","PointerDirective","PointersDirective","AxisDirective","tags","childRanges","ContentChild","childPointers","AxesDirective","AnnotationDirective","propDecorators","content","__decorate","Template","prototype","AnnotationsDirective","twoWays","exports","LinearGaugeComponent","ngEle","srenderer","injector","element","nativeElement","injectedModules","mod","get","indexOf","push","_a","_b","addTwoWay","ngOnInit","ngAfterViewInit","ngOnDestroy","ngAfterContentChecked","LinearGauge","Component","template","changeDetection","ChangeDetectionStrategy","OnPush","childAxes","childAnnotations","ElementRef","Renderer2","Injector","tooltip_template","ComponentMixins","ComponentBase","__metadata","LinearGaugeModule","NgModule","imports","CommonModule","declarations","GaugeTooltipService","provide","useValue","GaugeTooltip","AnnotationsService","Annotations","LinearGaugeAllModule","providers"],"mappings":"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"}
