/*!
*  filename: ej2-angular-querybuilder.umd.js.map
*  version : 17.3.27
*  Copyright Syncfusion Inc. 2001 - 2018. All rights reserved.
*  Use of this code is subject to the terms of our license.
*  A copy of the current license can be obtained at any time by e-mailing
*  licensing@syncfusion.com. Any infringement will be prosecuted under
*  applicable laws. 
*/

{"version":3,"file":"ej2-angular-querybuilder.umd.js","sources":["~/@syncfusion/ej2-angular-querybuilder/src/query-builder/querybuilder-all.module.ts","~/@syncfusion/ej2-angular-querybuilder/src/query-builder/querybuilder.module.ts","~/@syncfusion/ej2-angular-querybuilder/src/query-builder/querybuilder.component.ts","~/@syncfusion/ej2-angular-querybuilder/src/query-builder/columns.directive.ts"],"sourcesContent":["import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColumnDirective, ColumnsDirective } from './columns.directive';\nimport { QueryBuilderComponent } from './querybuilder.component';\nimport { QueryBuilderModule } from './querybuilder.module';\n/**\n * NgModule definition for the QueryBuilder component with providers.\n */\nexport class QueryBuilderAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, QueryBuilderModule],\n    exports: [\n        QueryBuilderModule\n    ],\n    providers:[\n        \n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction QueryBuilderAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryBuilderAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nQueryBuilderAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColumnDirective, ColumnsDirective } from './columns.directive';\nimport { QueryBuilderComponent } from './querybuilder.component';\n/**\n * NgModule definition for the QueryBuilder component.\n */\nexport class QueryBuilderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        QueryBuilderComponent,\n        ColumnDirective,\n        ColumnsDirective\n    ],\n    exports: [\n        QueryBuilderComponent,\n        ColumnDirective,\n        ColumnsDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction QueryBuilderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryBuilderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nQueryBuilderModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { QueryBuilder } from '@syncfusion/ej2-querybuilder';\n\nimport { ColumnsDirective } from './columns.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['allowValidation','columns','cssClass','dataSource','displayMode','enablePersistence','enableRtl','height','immediateModeDelay','locale','matchCase','maxGroupCount','rule','showButtons','sortDirection','summaryView','width'];\nexport const /** @type {?} */ outputs: string[] = ['beforeChange','change','created','ruleChange'];\nexport const /** @type {?} */ twoWays: string[] = [''];\n/**\n * Represents the EJ2 Angular QueryBuilder Component.\n * ```html\n * <ejs-querybuilder></ejs-querybuilder>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class QueryBuilderComponent extends QueryBuilder implements IComponentBase {\npublic childColumns: any;\npublic tags: string[] = ['columns'];\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-querybuilder',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childColumns: new ContentChild(ColumnsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\n}\n\nfunction QueryBuilderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryBuilderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nQueryBuilderComponent.ctorParameters;\n/** @type {?} */\nQueryBuilderComponent.prototype.childColumns;\n/** @type {?} */\nQueryBuilderComponent.prototype.tags;\n/** @type {?} */\nQueryBuilderComponent.prototype.registerEvents;\n/** @type {?} */\nQueryBuilderComponent.prototype.addTwoWay;\n/** @type {?} */\nQueryBuilderComponent.prototype.ngEle;\n/** @type {?} */\nQueryBuilderComponent.prototype.srenderer;\n/** @type {?} */\nQueryBuilderComponent.prototype.viewContainerRef;\n/** @type {?} */\nQueryBuilderComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['category', 'field', 'format', 'label', 'operators', 'step', 'template', 'type', 'validation', 'value', 'values'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * `e-column` directive represent a column of the Angular QueryBuilder. \n * It must be contained in a QueryBuilder component(`ejs-querybuilder`). \n * ```html\n * <ejs-querybuilder [dataSource]='data'> \n *   <e-columns>\n *    <e-column field='ID' label='ID' type='number'></e-column>\n *    <e-column field='Date' label='Date' type='date' format='dd/MM/yyyy'></e-column>\n *   </e-columns>\n * </ejs-querybuilder>\n * ```\n */\nexport class ColumnDirective extends ComplexBase<ColumnDirective> {\n/**\n * Specifies the types in columns field\n */\npublic type: any;\n/**\n * Specifies the category for columns.\n */\npublic category: any;\n/**\n * Specifies the fields in columns.\n */\npublic field: any;\n/**\n * Specifies the date format for columns.\n */\npublic format: any;\n/**\n * Specifies the labels name in columns\n */\npublic label: any;\n/**\n * Specifies the operators in columns.\n */\npublic operators: any;\n/**\n * Specifies the step value(numeric textbox) for columns.\n */\npublic step: any;\n/**\n * Specifies the template for value field such as slider or any other widgets.\n */\npublic template: any;\n/**\n * Specifies the validation for columns (text, number and date).\n */\npublic validation: any;\n/**\n * Specifies the default value for columns.\n */\npublic value: any;\n/**\n * Specifies the values in columns or bind the values from sub controls.\n */\npublic values: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-querybuilder>e-columns>e-column',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction ColumnDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnDirective.ctorParameters;\n/**\n * Specifies the types in columns field\n * @type {?}\n */\nColumnDirective.prototype.type;\n/**\n * Specifies the category for columns.\n * @type {?}\n */\nColumnDirective.prototype.category;\n/**\n * Specifies the fields in columns.\n * @type {?}\n */\nColumnDirective.prototype.field;\n/**\n * Specifies the date format for columns.\n * @type {?}\n */\nColumnDirective.prototype.format;\n/**\n * Specifies the labels name in columns\n * @type {?}\n */\nColumnDirective.prototype.label;\n/**\n * Specifies the operators in columns.\n * @type {?}\n */\nColumnDirective.prototype.operators;\n/**\n * Specifies the step value(numeric textbox) for columns.\n * @type {?}\n */\nColumnDirective.prototype.step;\n/**\n * Specifies the template for value field such as slider or any other widgets.\n * @type {?}\n */\nColumnDirective.prototype.template;\n/**\n * Specifies the validation for columns (text, number and date).\n * @type {?}\n */\nColumnDirective.prototype.validation;\n/**\n * Specifies the default value for columns.\n * @type {?}\n */\nColumnDirective.prototype.value;\n/**\n * Specifies the values in columns or bind the values from sub controls.\n * @type {?}\n */\nColumnDirective.prototype.values;\n/** @type {?} */\nColumnDirective.prototype.viewContainerRef;\n}\n\n/**\n * Column Array Directive\n */\nexport class ColumnsDirective extends ArrayBase<ColumnsDirective> {\nconstructor() {\n        super('columns');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-querybuilder>e-columns',\n    queries: {\n        children: new ContentChildren(ColumnDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColumnsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["CommonModule","NgModule","QueryBuilderComponent","Injector","ViewContainerRef","Renderer2","ElementRef","ComponentMixins","ComponentBase","ContentChild","ChangeDetectionStrategy","outputs","Component","QueryBuilder","setValue","ContentChildren","Directive","ArrayBase","ComplexBase"],"mappings":"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"}
