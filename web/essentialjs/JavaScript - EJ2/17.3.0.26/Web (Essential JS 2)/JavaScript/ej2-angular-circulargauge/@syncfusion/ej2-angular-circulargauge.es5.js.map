/*!
*  filename: ej2-angular-circulargauge.es5.js.map
*  version : 17.3.27
*  Copyright Syncfusion Inc. 2001 - 2018. All rights reserved.
*  Use of this code is subject to the terms of our license.
*  A copy of the current license can be obtained at any time by e-mailing
*  licensing@syncfusion.com. Any infringement will be prosecuted under
*  applicable laws. 
*/

{"version":3,"file":"ej2-angular-circulargauge.es5.js","sources":["~/@syncfusion/ej2-angular-circulargauge/ej2-angular-circulargauge.ts","~/@syncfusion/ej2-angular-circulargauge/src/circular-gauge/circulargauge-all.module.ts","~/@syncfusion/ej2-angular-circulargauge/src/circular-gauge/circulargauge.module.ts","~/@syncfusion/ej2-angular-circulargauge/src/circular-gauge/circulargauge.component.ts","~/@syncfusion/ej2-angular-circulargauge/src/circular-gauge/axes.directive.ts","~/@syncfusion/ej2-angular-circulargauge/src/circular-gauge/pointers.directive.ts","~/@syncfusion/ej2-angular-circulargauge/src/circular-gauge/ranges.directive.ts","~/@syncfusion/ej2-angular-circulargauge/src/circular-gauge/annotations.directive.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {AnnotationDirective,AnnotationsDirective,RangeDirective,RangesDirective,PointerDirective,PointersDirective,AxisDirective,AxesDirective,CircularGaugeComponent,CircularGaugeModule,CircularGaugeAllModule,GaugeTooltipService,AnnotationsService,LegendService,CircularGauge,Annotations,Line,Label,Range,Tick,Cap,NeedleTail,Animation,Annotation,Pointer,Axis,VisibleRangeModel,Border,Font,RangeTooltip,AnnotationTooltip,Margin,TooltipSettings,ICircularGaugeEventArgs,ILoadedEventArgs,IAnimationCompleteEventArgs,IAxisLabelRenderEventArgs,IRadiusCalculateEventArgs,ITooltipRenderEventArgs,IAnnotationRenderEventArgs,IPointerDragEventArgs,IResizeEventArgs,IMouseEventArgs,IVisiblePointer,IFontMapping,IThemeStyle,ILegendRenderEventArgs,ILegendRegions,GaugeTooltip,Position,PointerType,GaugeDirection,GaugeTheme,HiddenLabel,GaugeShape,LegendPosition,Alignment,measureText,toPixel,getFontStyle,setStyles,measureElementRect,stringToNumber,textElement,appendPath,calculateSum,linear,getAngleFromValue,getDegree,getValueFromAngle,isCompleteAngle,getAngleFromLocation,getLocationFromAngle,getPathArc,getRangePath,getRoundedPathArc,getRoundedPath,getCompleteArc,getCirclePath,getCompletePath,getElement,getTemplateFunction,removeElement,getPointer,getElementSize,getMousePosition,getLabelFormat,calculateShapes,getRangeColor,CustomizeOption,PathOption,RectOption,Size,GaugeLocation,Rect,textTrim,showTooltip,TextOption,VisibleLabels,CircularGaugeModel,LineModel,LabelModel,RangeModel,TickModel,CapModel,NeedleTailModel,AnimationModel,AnnotationModel,PointerModel,AxisModel,BorderModel,FontModel,RangeTooltipModel,AnnotationTooltipModel,MarginModel,TooltipSettingsModel,Location,LegendSettings,Legend,Index,LegendOptions} from './public_api';\n\nexport {inputs as ɵa,outputs as ɵb} from './src/circular-gauge/circulargauge.component';","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AnnotationDirective, AnnotationsDirective } from './annotations.directive';\nimport { RangeDirective, RangesDirective } from './ranges.directive';\nimport { PointerDirective, PointersDirective } from './pointers.directive';\nimport { AxisDirective, AxesDirective } from './axes.directive';\nimport { CircularGaugeComponent } from './circulargauge.component';\nimport { CircularGaugeModule } from './circulargauge.module';\nimport {GaugeTooltip, Annotations, Legend} from '@syncfusion/ej2-circulargauge';\n\n\nexport const /** @type {?} */ GaugeTooltipService: ValueProvider = { provide: 'CircularGaugeGaugeTooltip', useValue: GaugeTooltip};\nexport const /** @type {?} */ AnnotationsService: ValueProvider = { provide: 'CircularGaugeAnnotations', useValue: Annotations};\nexport const /** @type {?} */ LegendService: ValueProvider = { provide: 'CircularGaugeLegend', useValue: Legend};\n/**\n * NgModule definition for the CircularGauge component with providers.\n */\nexport class CircularGaugeAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, CircularGaugeModule],\n    exports: [\n        CircularGaugeModule\n    ],\n    providers:[\n        GaugeTooltipService,\n        AnnotationsService,\n        LegendService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CircularGaugeAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCircularGaugeAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCircularGaugeAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AnnotationDirective, AnnotationsDirective } from './annotations.directive';\nimport { RangeDirective, RangesDirective } from './ranges.directive';\nimport { PointerDirective, PointersDirective } from './pointers.directive';\nimport { AxisDirective, AxesDirective } from './axes.directive';\nimport { CircularGaugeComponent } from './circulargauge.component';\n/**\n * NgModule definition for the CircularGauge component.\n */\nexport class CircularGaugeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        CircularGaugeComponent,\n        AnnotationDirective,\n        AnnotationsDirective,\n        RangeDirective,\n        RangesDirective,\n        PointerDirective,\n        PointersDirective,\n        AxisDirective,\n        AxesDirective\n    ],\n    exports: [\n        CircularGaugeComponent,\n        AnnotationDirective,\n        AnnotationsDirective,\n        RangeDirective,\n        RangesDirective,\n        PointerDirective,\n        PointersDirective,\n        AxisDirective,\n        AxesDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CircularGaugeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCircularGaugeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCircularGaugeModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { CircularGauge } from '@syncfusion/ej2-circulargauge';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { AxesDirective } from './axes.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['axes','background','border','centerX','centerY','description','enablePersistence','enablePointerDrag','enableRtl','height','legendSettings','locale','margin','moveToCenter','tabIndex','theme','title','titleStyle','tooltip','useGroupingSeparator','width'];\nexport const /** @type {?} */ outputs: string[] = ['animationComplete','annotationRender','axisLabelRender','dragEnd','dragMove','dragStart','gaugeMouseDown','gaugeMouseLeave','gaugeMouseMove','gaugeMouseUp','legendRender','load','loaded','radiusCalculate','resized','tooltipRender'];\nexport const /** @type {?} */ twoWays: string[] = [''];\n/**\n * Circular Gauge Component\n * ```html\n * <ej-circulargauge></ej-circulargauge>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class CircularGaugeComponent extends CircularGauge implements IComponentBase {\npublic childAxes: any;\npublic tags: string[] = ['axes'];\n\n    \n    @Template()\npublic tooltip_template: any;\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('CircularGaugeGaugeTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('CircularGaugeAnnotations');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('CircularGaugeLegend');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-circulargauge',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childAxes: new ContentChild(AxesDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip_template': [{ type: ContentChild, args: ['tooltipTemplate', ] },],\n};\n}\n\nfunction CircularGaugeComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCircularGaugeComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCircularGaugeComponent.ctorParameters;\n/** @type {?} */\nCircularGaugeComponent.propDecorators;\n/** @type {?} */\nCircularGaugeComponent.prototype.childAxes;\n/** @type {?} */\nCircularGaugeComponent.prototype.tags;\n/** @type {?} */\nCircularGaugeComponent.prototype.tooltip_template;\n/** @type {?} */\nCircularGaugeComponent.prototype.registerEvents;\n/** @type {?} */\nCircularGaugeComponent.prototype.addTwoWay;\n/** @type {?} */\nCircularGaugeComponent.prototype.ngEle;\n/** @type {?} */\nCircularGaugeComponent.prototype.srenderer;\n/** @type {?} */\nCircularGaugeComponent.prototype.viewContainerRef;\n/** @type {?} */\nCircularGaugeComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\nimport { AnnotationsDirective } from './annotations.directive';\nimport { RangesDirective } from './ranges.directive';\nimport { PointersDirective } from './pointers.directive';\n\nlet /** @type {?} */ input: string[] = ['annotations', 'background', 'direction', 'endAngle', 'hideIntersectingLabel', 'labelStyle', 'lineStyle', 'majorTicks', 'maximum', 'minimum', 'minorTicks', 'pointers', 'radius', 'rangeGap', 'ranges', 'roundingPlaces', 'showLastLabel', 'startAndEndRangeGap', 'startAngle'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Axes directive\n * ```html\n * <e-axes><e-axis></e-axis></e-axes>\n * ```\n */\nexport class AxisDirective extends ComplexBase<AxisDirective> {\npublic childAnnotations: any;\npublic childRanges: any;\npublic childPointers: any;\npublic tags: string[] = ['annotations', 'ranges', 'pointers'];\n/**\n * ‘Annotation’ module is used to handle annotation action for an axis.\n */\npublic annotations: any;\n/**\n * The background color of the axis, which accepts value in hex, rgba as a valid CSS color string.\n */\npublic background: any;\n/**\n * Specifies the direction of an axis. They are \n * * clockWise -  Renders the axis in clock wise direction. \n * * antiClockWise - Renders the axis in anti-clock wise direction.\n */\npublic direction: any;\n/**\n * The end angle of an axis\n */\npublic endAngle: any;\n/**\n * Specifies to hide the intersecting axis labels\n */\npublic hideIntersectingLabel: any;\n/**\n * Options to customize the axis label.\n */\npublic labelStyle: any;\n/**\n * Options for customizing the axis lines.\n */\npublic lineStyle: any;\n/**\n * Options for customizing the major tick lines.\n */\npublic majorTicks: any;\n/**\n * Specifies the maximum value of an axis.\n */\npublic maximum: any;\n/**\n * Specifies the minimum value of an axis.\n */\npublic minimum: any;\n/**\n * Options for customizing the minor tick lines.\n */\npublic minorTicks: any;\n/**\n * Options for customizing the pointers of an axis\n */\npublic pointers: any;\n/**\n * Radius of an axis in pixels or in percentage.\n */\npublic radius: any;\n/**\n * Specifies the range gap property by pixel value.\n */\npublic rangeGap: any;\n/**\n * Options for customizing the ranges of an axis\n */\npublic ranges: any;\n/**\n * Specifies the rounding Off value in the label\n */\npublic roundingPlaces: any;\n/**\n * Specifies the last label to be shown\n */\npublic showLastLabel: any;\n/**\n * Specifies the start and end range gap.\n */\npublic startAndEndRangeGap: any;\n/**\n * The start angle of an axis\n */\npublic startAngle: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-axes>e-axis',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n        childAnnotations: new ContentChild(AnnotationsDirective), \n        childRanges: new ContentChild(RangesDirective), \n        childPointers: new ContentChild(PointersDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction AxisDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAxisDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAxisDirective.ctorParameters;\n/** @type {?} */\nAxisDirective.prototype.childAnnotations;\n/** @type {?} */\nAxisDirective.prototype.childRanges;\n/** @type {?} */\nAxisDirective.prototype.childPointers;\n/** @type {?} */\nAxisDirective.prototype.tags;\n/**\n * ‘Annotation’ module is used to handle annotation action for an axis.\n * @type {?}\n */\nAxisDirective.prototype.annotations;\n/**\n * The background color of the axis, which accepts value in hex, rgba as a valid CSS color string.\n * @type {?}\n */\nAxisDirective.prototype.background;\n/**\n * Specifies the direction of an axis. They are \n * * clockWise -  Renders the axis in clock wise direction. \n * * antiClockWise - Renders the axis in anti-clock wise direction.\n * @type {?}\n */\nAxisDirective.prototype.direction;\n/**\n * The end angle of an axis\n * @type {?}\n */\nAxisDirective.prototype.endAngle;\n/**\n * Specifies to hide the intersecting axis labels\n * @type {?}\n */\nAxisDirective.prototype.hideIntersectingLabel;\n/**\n * Options to customize the axis label.\n * @type {?}\n */\nAxisDirective.prototype.labelStyle;\n/**\n * Options for customizing the axis lines.\n * @type {?}\n */\nAxisDirective.prototype.lineStyle;\n/**\n * Options for customizing the major tick lines.\n * @type {?}\n */\nAxisDirective.prototype.majorTicks;\n/**\n * Specifies the maximum value of an axis.\n * @type {?}\n */\nAxisDirective.prototype.maximum;\n/**\n * Specifies the minimum value of an axis.\n * @type {?}\n */\nAxisDirective.prototype.minimum;\n/**\n * Options for customizing the minor tick lines.\n * @type {?}\n */\nAxisDirective.prototype.minorTicks;\n/**\n * Options for customizing the pointers of an axis\n * @type {?}\n */\nAxisDirective.prototype.pointers;\n/**\n * Radius of an axis in pixels or in percentage.\n * @type {?}\n */\nAxisDirective.prototype.radius;\n/**\n * Specifies the range gap property by pixel value.\n * @type {?}\n */\nAxisDirective.prototype.rangeGap;\n/**\n * Options for customizing the ranges of an axis\n * @type {?}\n */\nAxisDirective.prototype.ranges;\n/**\n * Specifies the rounding Off value in the label\n * @type {?}\n */\nAxisDirective.prototype.roundingPlaces;\n/**\n * Specifies the last label to be shown\n * @type {?}\n */\nAxisDirective.prototype.showLastLabel;\n/**\n * Specifies the start and end range gap.\n * @type {?}\n */\nAxisDirective.prototype.startAndEndRangeGap;\n/**\n * The start angle of an axis\n * @type {?}\n */\nAxisDirective.prototype.startAngle;\n/** @type {?} */\nAxisDirective.prototype.viewContainerRef;\n}\n\n/**\n * Axis Array Directive\n */\nexport class AxesDirective extends ArrayBase<AxesDirective> {\nconstructor() {\n        super('axes');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-circulargauge>e-axes',\n    queries: {\n        children: new ContentChildren(AxisDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AxesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAxesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAxesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['animation', 'border', 'cap', 'color', 'description', 'imageUrl', 'markerHeight', 'markerShape', 'markerWidth', 'needleTail', 'pointerWidth', 'radius', 'roundedCornerRadius', 'type', 'value'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Pointers directive\n * ```html\n * <e-pointers><e-pointer></e-pointer></e-pointers>\n * ```\n */\nexport class PointerDirective extends ComplexBase<PointerDirective> {\n/**\n * Specifies the type of pointer for an axis. \n * * needle -  Renders a needle. \n * * marker - Renders a marker. \n * * rangeBar - Renders a rangeBar.\n */\npublic type: any;\n/**\n * Configures the animation of pointers.\n */\npublic animation: any;\n/**\n * Options for customizing the border of the needle.\n */\npublic border: any;\n/**\n * Options for customizing the cap\n */\npublic cap: any;\n/**\n * The color of the pointer.\n */\npublic color: any;\n/**\n * Information about pointer for assistive technology.\n */\npublic description: any;\n/**\n * The URL for the Image that is to be displayed as pointer. \n * It requires marker shape value to be Image.\n */\npublic imageUrl: any;\n/**\n * The height of the marker in pixels.\n */\npublic markerHeight: any;\n/**\n * Specifies the shape of the marker. They are \n * * circle - Renders a circle. \n * * rectangle - Renders a rectangle. \n * * triangle - Renders a triangle. \n * * diamond - Renders a diamond. \n * * invertedTriangle - Renders a invertedTriangle. \n * * image - Renders a image.\n */\npublic markerShape: any;\n/**\n * The width of the marker in pixels.\n */\npublic markerWidth: any;\n/**\n * Options for customizing the back needle.\n */\npublic needleTail: any;\n/**\n * Width of the pointer in pixels.\n */\npublic pointerWidth: any;\n/**\n * Length of the pointer in pixels or in percentage.\n */\npublic radius: any;\n/**\n * Specifies the rounded corner radius for pointer.\n */\npublic roundedCornerRadius: any;\n/**\n * Specifies the value of the pointer.\n */\npublic value: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-pointers>e-pointer',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction PointerDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPointerDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPointerDirective.ctorParameters;\n/**\n * Specifies the type of pointer for an axis. \n * * needle -  Renders a needle. \n * * marker - Renders a marker. \n * * rangeBar - Renders a rangeBar.\n * @type {?}\n */\nPointerDirective.prototype.type;\n/**\n * Configures the animation of pointers.\n * @type {?}\n */\nPointerDirective.prototype.animation;\n/**\n * Options for customizing the border of the needle.\n * @type {?}\n */\nPointerDirective.prototype.border;\n/**\n * Options for customizing the cap\n * @type {?}\n */\nPointerDirective.prototype.cap;\n/**\n * The color of the pointer.\n * @type {?}\n */\nPointerDirective.prototype.color;\n/**\n * Information about pointer for assistive technology.\n * @type {?}\n */\nPointerDirective.prototype.description;\n/**\n * The URL for the Image that is to be displayed as pointer. \n * It requires marker shape value to be Image.\n * @type {?}\n */\nPointerDirective.prototype.imageUrl;\n/**\n * The height of the marker in pixels.\n * @type {?}\n */\nPointerDirective.prototype.markerHeight;\n/**\n * Specifies the shape of the marker. They are \n * * circle - Renders a circle. \n * * rectangle - Renders a rectangle. \n * * triangle - Renders a triangle. \n * * diamond - Renders a diamond. \n * * invertedTriangle - Renders a invertedTriangle. \n * * image - Renders a image.\n * @type {?}\n */\nPointerDirective.prototype.markerShape;\n/**\n * The width of the marker in pixels.\n * @type {?}\n */\nPointerDirective.prototype.markerWidth;\n/**\n * Options for customizing the back needle.\n * @type {?}\n */\nPointerDirective.prototype.needleTail;\n/**\n * Width of the pointer in pixels.\n * @type {?}\n */\nPointerDirective.prototype.pointerWidth;\n/**\n * Length of the pointer in pixels or in percentage.\n * @type {?}\n */\nPointerDirective.prototype.radius;\n/**\n * Specifies the rounded corner radius for pointer.\n * @type {?}\n */\nPointerDirective.prototype.roundedCornerRadius;\n/**\n * Specifies the value of the pointer.\n * @type {?}\n */\nPointerDirective.prototype.value;\n/** @type {?} */\nPointerDirective.prototype.viewContainerRef;\n}\n\n/**\n * Pointer Array Directive\n */\nexport class PointersDirective extends ArrayBase<PointersDirective> {\nconstructor() {\n        super('pointers');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-circulargauge>e-axes>e-axis>e-pointers',\n    queries: {\n        children: new ContentChildren(PointerDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PointersDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPointersDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPointersDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['color', 'end', 'endWidth', 'legendText', 'opacity', 'radius', 'roundedCornerRadius', 'start', 'startWidth'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Ranges directive\n * ```html\n * <e-ranges><e-range></e-range></e-ranges>\n * ```\n */\nexport class RangeDirective extends ComplexBase<RangeDirective> {\n/**\n * Specifies the color of the ranges\n */\npublic color: any;\n/**\n * Specifies the maximum value of the range.\n */\npublic end: any;\n/**\n * Specifies the end width of the ranges\n */\npublic endWidth: any;\n/**\n * Specifies the text for legend.\n */\npublic legendText: any;\n/**\n * Specifies the opacity for ranges.\n */\npublic opacity: any;\n/**\n * The radius of the range in pixels or in percentage.\n */\npublic radius: any;\n/**\n * Specifies the rounded corner radius for ranges.\n */\npublic roundedCornerRadius: any;\n/**\n * Specifies the minimum value of the range.\n */\npublic start: any;\n/**\n * Specifies the start width of the ranges\n */\npublic startWidth: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-ranges>e-range',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction RangeDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nRangeDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangeDirective.ctorParameters;\n/**\n * Specifies the color of the ranges\n * @type {?}\n */\nRangeDirective.prototype.color;\n/**\n * Specifies the maximum value of the range.\n * @type {?}\n */\nRangeDirective.prototype.end;\n/**\n * Specifies the end width of the ranges\n * @type {?}\n */\nRangeDirective.prototype.endWidth;\n/**\n * Specifies the text for legend.\n * @type {?}\n */\nRangeDirective.prototype.legendText;\n/**\n * Specifies the opacity for ranges.\n * @type {?}\n */\nRangeDirective.prototype.opacity;\n/**\n * The radius of the range in pixels or in percentage.\n * @type {?}\n */\nRangeDirective.prototype.radius;\n/**\n * Specifies the rounded corner radius for ranges.\n * @type {?}\n */\nRangeDirective.prototype.roundedCornerRadius;\n/**\n * Specifies the minimum value of the range.\n * @type {?}\n */\nRangeDirective.prototype.start;\n/**\n * Specifies the start width of the ranges\n * @type {?}\n */\nRangeDirective.prototype.startWidth;\n/** @type {?} */\nRangeDirective.prototype.viewContainerRef;\n}\n\n/**\n * Range Array Directive\n */\nexport class RangesDirective extends ArrayBase<RangesDirective> {\nconstructor() {\n        super('ranges');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-circulargauge>e-axes>e-axis>e-ranges',\n    queries: {\n        children: new ContentChildren(RangeDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RangesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nRangesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet /** @type {?} */ input: string[] = ['angle', 'autoAngle', 'content', 'description', 'radius', 'textStyle', 'zIndex'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Annotation directive\n * ```html\n * <e-annotations><e-annotation></e-annotation></e-annotations>\n * ```\n */\nexport class AnnotationDirective extends ComplexBase<AnnotationDirective> {\n/**\n * Angle for annotation with respect to axis.\n */\npublic angle: any;\n/**\n * Rotates the annotation along the axis.\n */\npublic autoAngle: any;\n/**\n * Information about annotation for assistive technology.\n */\npublic description: any;\n/**\n * Radius for annotation with respect to axis.\n */\npublic radius: any;\n/**\n * Options for customizing the annotation text.\n */\npublic textStyle: any;\n/**\n * Order of an annotation in an axis.\n */\npublic zIndex: any;\n/**\n * Content of the annotation, which accepts the id of the custom element.\n */\n@Template()\n    public content: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-annotations>e-annotation',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: ContentChild, args: ['content', ] },],\n};\n}\n\nfunction AnnotationDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAnnotationDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAnnotationDirective.ctorParameters;\n/** @type {?} */\nAnnotationDirective.propDecorators;\n/**\n * Angle for annotation with respect to axis.\n * @type {?}\n */\nAnnotationDirective.prototype.angle;\n/**\n * Rotates the annotation along the axis.\n * @type {?}\n */\nAnnotationDirective.prototype.autoAngle;\n/**\n * Information about annotation for assistive technology.\n * @type {?}\n */\nAnnotationDirective.prototype.description;\n/**\n * Radius for annotation with respect to axis.\n * @type {?}\n */\nAnnotationDirective.prototype.radius;\n/**\n * Options for customizing the annotation text.\n * @type {?}\n */\nAnnotationDirective.prototype.textStyle;\n/**\n * Order of an annotation in an axis.\n * @type {?}\n */\nAnnotationDirective.prototype.zIndex;\n/**\n * Content of the annotation, which accepts the id of the custom element.\n * @type {?}\n */\nAnnotationDirective.prototype.content;\n/** @type {?} */\nAnnotationDirective.prototype.viewContainerRef;\n}\n\n/**\n * Annotation Array Directive\n */\nexport class AnnotationsDirective extends ArrayBase<AnnotationsDirective> {\nconstructor() {\n        super('annotations');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-circulargauge>e-axes>e-axis>e-annotations',\n    queries: {\n        children: new ContentChildren(AnnotationDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AnnotationsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAnnotationsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAnnotationsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["__metadata","__decorate","outputs","input"],"mappings":"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"}
