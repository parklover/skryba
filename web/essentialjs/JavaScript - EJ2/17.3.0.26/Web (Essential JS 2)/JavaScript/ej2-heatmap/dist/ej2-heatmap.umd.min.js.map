{"version":3,"file":"ej2-heatmap.umd.min.js","sources":["../src/heatmap/utils/helper.js","../src/heatmap/model/theme.js","../src/heatmap/model/base.js","../src/heatmap/utils/colorMapping.js","../src/heatmap/axis/axis.js","../src/heatmap/axis/axis-helpers.js","../src/heatmap/series/series.js","../src/heatmap/utils/tooltip.js","../src/heatmap/datasource/twodimensional.js","../src/heatmap/legend/legend.js","../src/heatmap/datasource/adaptor.js","../src/heatmap/heatmap.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { remove, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { RgbColor } from '../utils/colorMapping';\n/**\n * Helper method for heatmap\n */\n/** @private */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to measure the height and width of the text.\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('heatmapmeasuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'heatmapmeasuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    htmlObject.innerText = text;\n    htmlObject.style.position = 'absolute';\n    htmlObject.style.visibility = 'hidden';\n    htmlObject.style.fontSize = (font.size).indexOf('px') !== -1 ? font.size : font.size + 'px';\n    htmlObject.style.fontWeight = font.fontWeight;\n    htmlObject.style.fontStyle = font.fontStyle;\n    htmlObject.style.fontFamily = font.fontFamily;\n    htmlObject.style.top = '-100';\n    htmlObject.style.left = '0';\n    htmlObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    htmlObject.style.lineHeight = 'normal';\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/** @private */\nvar TextElement = /** @class */ (function () {\n    function TextElement(fontModel, fontColor) {\n        this['font-size'] = fontModel.size;\n        this['font-style'] = fontModel.fontStyle.toLowerCase();\n        this['font-family'] = fontModel.fontFamily;\n        this['font-weight'] = fontModel.fontWeight.toLowerCase();\n        this.fill = fontColor ? fontColor : '';\n    }\n    return TextElement;\n}());\nexport { TextElement };\nexport function titlePositionX(width, leftPadding, rightPadding, titleStyle) {\n    var positionX;\n    if (titleStyle.textAlignment === 'Near') {\n        positionX = leftPadding;\n    }\n    else if (titleStyle.textAlignment === 'Center') {\n        positionX = leftPadding + width / 2;\n    }\n    else {\n        positionX = width + leftPadding;\n    }\n    return positionX;\n}\n/**\n * Internal class size for height and width\n * @private\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color ? color : '';\n        _this['stroke-width'] = parseFloat(width.toString());\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/**\n * Class to define currentRect private property.\n * @private\n */\nvar CurrentRect = /** @class */ (function () {\n    function CurrentRect(x, y, width, height, value, id, xIndex, yIndex, xValue, yValue, visible, displayText, textId, allowCollection) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.value = value;\n        this.id = id;\n        this.xIndex = xIndex;\n        this.yIndex = yIndex;\n        this.xValue = xValue;\n        this.yValue = yValue;\n        this.visible = visible;\n        this.displayText = displayText;\n        this.textId = textId;\n        /** @private */\n        this.allowCollection = allowCollection;\n    }\n    return CurrentRect;\n}());\nexport { CurrentRect };\n/**\n * Class to define the details of selected cell.\n * @private\n */\nvar SelectedCellDetails = /** @class */ (function () {\n    function SelectedCellDetails(value, xLabel, yLabel, xValue, yValue, cellElement, xPosition, yPosition, width, height, x, y) {\n        this.value = value;\n        this.xLabel = xLabel;\n        this.yLabel = yLabel;\n        this.xValue = xValue;\n        this.yValue = yValue;\n        this.cellElement = cellElement;\n        this.xPosition = xPosition;\n        this.yPosition = yPosition;\n        this.width = width;\n        this.height = height;\n        this.x = x;\n        this.y = y;\n    }\n    return SelectedCellDetails;\n}());\nexport { SelectedCellDetails };\n/**\n * Class to define property to draw rectangle.\n * @private\n */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect, borderColor, rx, ry, transform, dashArray) {\n        var _this = _super.call(this, id, fill, border.width, borderColor, opacity, dashArray) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height > 0 ? rect.height : 0;\n        _this.width = rect.width > 0 ? rect.width : 0;\n        _this.rx = rx ? rx : 0;\n        _this.ry = ry ? ry : 0;\n        _this.transform = transform ? transform : '';\n        return _this;\n    }\n    return RectOption;\n}(PathOption));\nexport { RectOption };\n/**\n * Class to define property to draw circle.\n * @private\n */\nvar CircleOption = /** @class */ (function (_super) {\n    __extends(CircleOption, _super);\n    function CircleOption(id, fill, border, opacity, borderColor, cx, cy, r) {\n        var _this = _super.call(this, id, fill, border.width, borderColor, opacity) || this;\n        _this.cx = cx ? cx : 0;\n        _this.cy = cy ? cy : 0;\n        _this.r = r ? r : 0;\n        return _this;\n    }\n    return CircleOption;\n}(PathOption));\nexport { CircleOption };\n/**\n * Helper Class to define property to draw rectangle.\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Class to define property to draw text.\n * @private\n */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, basic, element, fontColor) {\n        var _this = _super.call(this, element, fontColor) || this;\n        _this.transform = '';\n        _this['dominant-baseline'] = 'auto';\n        _this.labelRotation = 0;\n        _this.baseline = 'auto';\n        _this.id = id;\n        _this.x = basic.x;\n        _this.y = basic.y;\n        _this['text-anchor'] = basic['text-anchor'];\n        _this.text = basic.text;\n        _this.transform = basic.transform;\n        _this.labelRotation = basic.labelRotation;\n        _this['dominant-baseline'] = basic['dominant-baseline'];\n        _this.baseline = basic.baseline;\n        _this.dy = basic.dy;\n        return _this;\n    }\n    return TextOption;\n}(TextElement));\nexport { TextOption };\n/**\n * Helper Class to define property to draw text.\n * @private\n */\nvar TextBasic = /** @class */ (function () {\n    function TextBasic(x, y, anchor, text, labelRotation, transform, baseLine, dy) {\n        this.transform = '';\n        this['dominant-baseline'] = 'auto';\n        this.labelRotation = 0;\n        this.baseline = 'auto';\n        this.x = x ? x : 0;\n        this.y = y ? y : 0;\n        this['text-anchor'] = anchor ? anchor : 'start';\n        this.text = text ? text : '';\n        this.transform = transform ? transform : '';\n        this.labelRotation = labelRotation;\n        this['dominant-baseline'] = baseLine ? baseLine : 'auto';\n        this.baseline = baseLine ? baseLine : '';\n        this.dy = dy ? dy : '';\n    }\n    return TextBasic;\n}());\nexport { TextBasic };\n/**\n * Class to define property to draw line.\n * @private\n */\nvar Line = /** @class */ (function () {\n    function Line(x1, y1, x2, y2) {\n        this.x1 = x1;\n        this.y1 = y1;\n        this.x2 = x2;\n        this.y2 = y2;\n    }\n    return Line;\n}());\nexport { Line };\n/**\n * Class to define property to draw line.\n * @private\n */\nvar LineOption = /** @class */ (function (_super) {\n    __extends(LineOption, _super);\n    function LineOption(id, line, stroke, strokewidth, opacity, dasharray) {\n        var _this = _super.call(this, id, null, strokewidth, stroke, opacity, dasharray, null) || this;\n        _this.x1 = line.x1;\n        _this.y1 = line.y1;\n        _this.x2 = line.x2;\n        _this.y2 = line.y2;\n        return _this;\n    }\n    return LineOption;\n}(PathOption));\nexport { LineOption };\n/**\n * Properties required to render path.\n * @private\n */\nvar PathAttributes = /** @class */ (function (_super) {\n    __extends(PathAttributes, _super);\n    function PathAttributes(id, path, fill, border, borderWidth, opacity, borderColor) {\n        var _this = _super.call(this, id, fill, borderWidth, borderColor, opacity, null) || this;\n        _this.d = path.d;\n        _this.x = path.x;\n        _this.y = path.y;\n        return _this;\n    }\n    return PathAttributes;\n}(PathOption));\nexport { PathAttributes };\n/**\n * Helper Class to define property to path.\n * @private\n */\nvar Path = /** @class */ (function () {\n    function Path(d, innerR, x, y, x1, y1, cx, cy, start, end, radius, counterClockWise) {\n        this.d = d;\n        this.innerR = innerR;\n        this.cx = cx;\n        this.cy = cy;\n        this.x = x;\n        this.y = y;\n        this.x1 = x1;\n        this.y1 = y1;\n        this.start = start;\n        this.end = end;\n        this.radius = radius;\n        this.counterClockWise = counterClockWise;\n    }\n    return Path;\n}());\nexport { Path };\n/** @private */\nexport function sum(values) {\n    var sum = 0;\n    for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n        var value = values_1[_i];\n        sum += value;\n    }\n    return sum;\n}\n/** @private */\nexport function titlePositionY(heatmapSize, topPadding, bottomPadding, titleStyle) {\n    var positionY;\n    if (titleStyle.textAlignment === 'Near') {\n        positionY = heatmapSize.height - bottomPadding;\n    }\n    else if (titleStyle.textAlignment === 'Center') {\n        positionY = heatmapSize.height / 2;\n    }\n    else {\n        positionY = topPadding;\n    }\n    return positionY;\n}\n/** @private */\nexport function rotateTextSize(font, text, angle) {\n    var renderer = new SvgRenderer('heatmapMeasureRotateText');\n    var svgObject = renderer.createSvg({ id: 'heatmapMeasureRotateText_svg', width: 100, height: 100 });\n    var box;\n    var options;\n    var htmlObject;\n    options = {\n        'font-size': font.size,\n        'font-style': font.fontStyle.toLowerCase(),\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight.toLowerCase(),\n        'transform': 'rotate(' + angle + ', 0, 0)',\n        'text-anchor': 'middle'\n    };\n    htmlObject = renderer.createText(options, text);\n    svgObject.appendChild(htmlObject);\n    document.body.appendChild(svgObject);\n    box = htmlObject.getBoundingClientRect();\n    remove(svgObject);\n    return new Size((box.right - box.left), (box.bottom - box.top));\n}\n/**\n * Class to draw SVG and Canvas Rectangle & Text.\n * @private\n */\nvar DrawSvgCanvas = /** @class */ (function () {\n    function DrawSvgCanvas(heatmap) {\n        this.heatMap = heatmap;\n    }\n    //Svg & Canvas Rectangle Part\n    DrawSvgCanvas.prototype.drawRectangle = function (properties, parentElement, isFromSeries) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.d;\n            parentElement.appendChild(this.heatMap.renderer.drawRectangle(properties));\n        }\n        else {\n            this.drawCanvasRectangle(this.heatMap.canvasRenderer, properties, isFromSeries);\n        }\n    };\n    //Svg & Canvas Bubble Part\n    DrawSvgCanvas.prototype.drawCircle = function (properties, parentElement) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.d;\n            parentElement.appendChild(this.heatMap.renderer.drawCircle(properties));\n        }\n        else {\n            this.drawCanvasCircle(this.heatMap.canvasRenderer, properties);\n        }\n    };\n    //Svg & Canvas Pie Part\n    DrawSvgCanvas.prototype.drawPath = function (properties, options, parentElement) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.x;\n            delete properties.y;\n            parentElement.appendChild(this.heatMap.renderer.drawPath(properties));\n        }\n        else {\n            this.drawCanvasPath(this.heatMap.canvasRenderer, properties, options);\n        }\n    };\n    //Svg & Canvas Text Part\n    DrawSvgCanvas.prototype.createText = function (properties, parentElement, text) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.labelRotation;\n            delete properties.baseline;\n            delete properties.text;\n            parentElement.appendChild(this.heatMap.renderer.createText(properties, text));\n            properties.text = text;\n        }\n        else {\n            this.canvasDrawText(properties, text);\n        }\n    };\n    //Draw the wrapped text for both SVG & canvas\n    DrawSvgCanvas.prototype.createWrapText = function (options, font, parentElement) {\n        var renderOptions = {};\n        var htmlObject;\n        var tspanElement;\n        var text;\n        var height;\n        renderOptions = {\n            'id': options.id,\n            'x': options.x,\n            'y': options.y,\n            'fill': options.fill,\n            'font-size': font.size,\n            'font-style': font.fontStyle,\n            'font-family': font.fontFamily,\n            'font-weight': font.fontWeight.toLowerCase(),\n            'text-anchor': options['text-anchor'],\n            'transform': options.transform,\n            'dominant-baseline': options['dominant-baseline']\n        };\n        text = options.text[0];\n        if (!this.heatMap.enableCanvasRendering) {\n            htmlObject = this.heatMap.renderer.createText(renderOptions, text);\n        }\n        else {\n            this.heatMap.canvasRenderer.createText(options, text);\n        }\n        if (typeof options.text !== 'string' && options.text.length > 1) {\n            for (var i = 1, len = options.text.length; i < len; i++) {\n                height = (measureText(options.text[i], font).height);\n                if (!this.heatMap.enableCanvasRendering) {\n                    tspanElement = this.heatMap.renderer.createTSpan({\n                        'x': options.x, 'id': options.id + i,\n                        'y': (options.y) + (i * height)\n                    }, options.text[i]);\n                    htmlObject.appendChild(tspanElement);\n                }\n                else {\n                    options.id = options.id + i;\n                    options.y += height;\n                    this.heatMap.canvasRenderer.createText(options, options.text[i]);\n                }\n            }\n        }\n        if (!this.heatMap.enableCanvasRendering) {\n            parentElement.appendChild(htmlObject);\n        }\n    };\n    DrawSvgCanvas.prototype.drawLine = function (properties, parentElement) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.d;\n            parentElement.appendChild(this.heatMap.renderer.drawLine(properties));\n        }\n        else {\n            this.heatMap.canvasRenderer.drawLine(properties);\n        }\n    };\n    //Canvas Text Part\n    DrawSvgCanvas.prototype.canvasDrawText = function (options, label, translateX, translateY) {\n        var ctx = this.heatMap.canvasRenderer.ctx;\n        if (!translateX) {\n            translateX = options.x;\n        }\n        if (!translateY) {\n            translateY = options.y;\n        }\n        var fontWeight = this.getOptionValue(options, 'font-weight');\n        if (!isNullOrUndefined(fontWeight) && fontWeight.toLowerCase() === 'regular') {\n            fontWeight = 'normal';\n        }\n        var fontFamily = this.getOptionValue(options, 'font-family');\n        var fontSize = (options['font-size'].toString()).indexOf('px') === -1 ? options['font-size'] + 'px' : options['font-size'];\n        var anchor = this.getOptionValue(options, 'text-anchor');\n        var fontStyle = this.getOptionValue(options, 'font-style').toLowerCase();\n        var font = (fontStyle + ' ' + fontWeight + ' ' + fontSize + ' ' + fontFamily);\n        if (anchor === 'middle') {\n            anchor = 'center';\n        }\n        ctx.save();\n        ctx.fillStyle = options.fill;\n        ctx.font = font;\n        ctx.textAlign = anchor;\n        if (options.baseline) {\n            ctx.textBaseline = options.baseline;\n        }\n        ctx.translate(translateX, translateY);\n        ctx.rotate(options.labelRotation * Math.PI / 180);\n        ctx.fillText(label, options.x - translateX, options.y - translateY);\n        ctx.restore();\n    };\n    // method to get the attributes value\n    /* tslint:disable */\n    DrawSvgCanvas.prototype.getOptionValue = function (options, key) {\n        return options[key];\n    };\n    DrawSvgCanvas.prototype.setAttributes = function (canvas, options) {\n        canvas.ctx.lineWidth = options['stroke-width'];\n        var dashArray = options['stroke-dasharray'];\n        if (!isNullOrUndefined(dashArray)) {\n            var dashArrayString = dashArray.split(',');\n            canvas.ctx.setLineDash([parseInt(dashArrayString[0], 10), parseInt(dashArrayString[1], 10)]);\n        }\n        canvas.ctx.strokeStyle = options['stroke'];\n    };\n    ;\n    DrawSvgCanvas.prototype.drawCanvasRectangle = function (canvas, options, isFromSeries) {\n        var canvasCtx = canvas.ctx;\n        var cornerRadius = options.rx;\n        canvas.ctx.save();\n        canvas.ctx.beginPath();\n        canvas.ctx.globalAlpha = options['opacity'];\n        this.setAttributes(canvas, options);\n        this.drawCornerRadius(canvas, options);\n        if ((options['stroke-width'] && options['stroke-width'] != 0) || isFromSeries) {\n            canvas.ctx.stroke();\n        }\n        canvas.ctx.restore();\n        canvas.ctx = canvasCtx;\n    };\n    ;\n    // To draw the corner of a rectangle\n    DrawSvgCanvas.prototype.drawCornerRadius = function (canvas, options) {\n        var cornerRadius = options.rx;\n        var x = options.x;\n        var y = options.y;\n        var width = options.width;\n        var height = options.height;\n        if (options.fill === 'none') {\n            options.fill = 'transparent';\n        }\n        canvas.ctx.fillStyle = options.fill;\n        if (width < 2 * cornerRadius) {\n            cornerRadius = width / 2;\n        }\n        if (height < 2 * cornerRadius) {\n            cornerRadius = height / 2;\n        }\n        canvas.ctx.beginPath();\n        canvas.ctx.moveTo(x + width - cornerRadius, y);\n        canvas.ctx.arcTo(x + width, y, x + width, y + height, cornerRadius);\n        canvas.ctx.arcTo(x + width, y + height, x, y + height, cornerRadius);\n        canvas.ctx.arcTo(x, y + height, x, y, cornerRadius);\n        canvas.ctx.arcTo(x, y, x + width, y, cornerRadius);\n        canvas.ctx.closePath();\n        canvas.ctx.fill();\n    };\n    ;\n    DrawSvgCanvas.prototype.drawCanvasCircle = function (canvas, options) {\n        canvas.ctx.save();\n        canvas.ctx.beginPath();\n        canvas.ctx.arc(options.cx, options.cy, options.r, 0, 2 * Math.PI);\n        canvas.ctx.fillStyle = options.fill;\n        canvas.ctx.globalAlpha = options.opacity;\n        canvas.ctx.fill();\n        this.setAttributes(canvas, options);\n        if (options['stroke-width'] && options['stroke-width'] !== 0) {\n            canvas.ctx.stroke();\n        }\n        canvas.ctx.restore();\n    };\n    ;\n    DrawSvgCanvas.prototype.drawCanvasPath = function (canvas, properties, options) {\n        var path = properties.d;\n        var dataSplit = path.split(' ');\n        var borderWidth = this.getOptionValue(options, 'stroke-width');\n        canvas.ctx.save();\n        canvas.ctx.beginPath();\n        canvas.ctx.globalAlpha = properties.opacity;\n        canvas.ctx.fillStyle = properties.fill;\n        this.setAttributes(canvas, properties);\n        for (var i = 0; i < dataSplit.length; i = i + 3) {\n            var x1 = parseFloat(dataSplit[i + 1]);\n            var y1 = parseFloat(dataSplit[i + 2]);\n            switch (dataSplit[i]) {\n                case 'M':\n                    canvas.ctx.moveTo(x1, y1);\n                    break;\n                case 'L':\n                    canvas.ctx.lineTo(x1, y1);\n                    break;\n                case 'A':\n                case 'a':\n                    canvas.ctx.arc(options.x, options.y, options.radius, (options.start * 0.0174533), (options.end * 0.0174533), false);\n                    i = dataSplit[i] === 'a' ? i + 13 : i + 5;\n                    break;\n                case 'Z':\n                    canvas.ctx.closePath();\n                    break;\n            }\n        }\n        canvas.ctx.fill();\n        if (properties['stroke-width'] && properties['stroke-width'] !== 0) {\n            canvas.ctx.stroke();\n        }\n        canvas.ctx.restore();\n    };\n    ;\n    return DrawSvgCanvas;\n}());\nexport { DrawSvgCanvas };\nexport function getTitle(title, style, width) {\n    var titleCollection = [];\n    switch (style.textOverflow) {\n        case 'Wrap':\n            titleCollection = textWrap(title, width, style);\n            break;\n        case 'Trim':\n            titleCollection.push(textTrim(width, title, style));\n            break;\n        default:\n            titleCollection.push(textNone(width, title, style));\n            break;\n    }\n    return titleCollection;\n}\nexport function textWrap(currentLabel, maximumWidth, font) {\n    var textCollection = currentLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\n/** @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var index = textLength - 1; index >= 0; --index) {\n            label = text.substring(0, index) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/** @private */\nexport function textNone(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i);\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/** @private */\nvar Gradient = /** @class */ (function () {\n    function Gradient(x, x1, x2, y1, y2) {\n        this.id = x;\n        this.x1 = x1;\n        this.x2 = x2;\n        this.y1 = y1;\n        this.y2 = y2;\n    }\n    return Gradient;\n}());\nexport { Gradient };\nvar GradientColor = /** @class */ (function () {\n    function GradientColor(color, colorStop) {\n        this.color = color;\n        this.colorStop = colorStop;\n    }\n    return GradientColor;\n}());\nexport { GradientColor };\n/** @private */\nexport function showTooltip(text, x, y, areaWidth, id, element, isTouch, heatmap) {\n    var tooltip = document.getElementById(id);\n    var initialClip = heatmap.initialClipRect;\n    var size = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    });\n    var width = size.width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    x = x < 0 ? 5 : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            id: id,\n            styles: 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: Segoe UI'\n        });\n        tooltip.innerText = text;\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerText = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n    if (text === heatmap.titleSettings.text) {\n        tooltip.style.width = (x + 15) + size.width + 7 > heatmap.availableSize.width ?\n            (heatmap.availableSize.width - (x + 15)).toString() + 'px' : '';\n    }\n    else {\n        tooltip.style.left = (x + 15) + size.width + 7 > heatmap.availableSize.width ?\n            (heatmap.availableSize.width - (size.width + 7)).toString() + 'px' : x.toString() + 'px';\n        tooltip.style.top = (y + 15) + size.height + 6 > heatmap.availableSize.height ?\n            (y - (size.height + 6) - 10).toString() + 'px' : tooltip.style.top; // 6 and 7 are padding and border width\n    }\n    if (isTouch) {\n        setTimeout(function () { removeElement(id); }, 1500);\n    }\n}\n/** @private */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/** @private */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/** @private */\nexport function increaseDateTimeInterval(value, interval, intervalType, increment) {\n    var result = new Date(value);\n    interval = Math.ceil(interval * increment);\n    switch (intervalType) {\n        case 'Years':\n            result.setFullYear(result.getFullYear() + interval);\n            break;\n        case 'Months':\n            result.setMonth(result.getMonth() + interval);\n            break;\n        case 'Days':\n            result.setDate(result.getDate() + interval);\n            break;\n        case 'Hours':\n            result.setHours(result.getHours() + interval);\n            break;\n        case 'Minutes':\n            result.setMinutes(result.getMinutes() + interval);\n            break;\n    }\n    return result;\n}\n/* private */\nvar CanvasTooltip = /** @class */ (function () {\n    function CanvasTooltip(text, rect) {\n        this.region = new Rect(0, 0, 0, 0);\n        this.text = text;\n        this.region = rect;\n    }\n    return CanvasTooltip;\n}());\nexport { CanvasTooltip };\n/* private*/\n/* Method to get the tool tip text in canvas based on region. */\nexport function getTooltipText(tooltipCollection, xPosition, yPosition) {\n    var length = tooltipCollection.length;\n    var tooltip;\n    var region;\n    var text;\n    for (var i = 0; i < length; i++) {\n        tooltip = tooltipCollection[i];\n        region = tooltip.region;\n        if (xPosition >= region.x && xPosition <= (region.x + region.width) && yPosition >= region.y && yPosition <= (region.y + region.height)) {\n            text = tooltip.text;\n            break;\n        }\n    }\n    return text;\n}\n/**\n * @private\n */\nvar PaletterColor = /** @class */ (function () {\n    function PaletterColor() {\n    }\n    return PaletterColor;\n}());\nexport { PaletterColor };\n/**\n * @private\n */\nvar GradientPointer = /** @class */ (function () {\n    function GradientPointer(pathX1, pathY1, pathX2, pathY2, pathX3, pathY3) {\n        this.pathX1 = pathX1;\n        this.pathY1 = pathY1;\n        this.pathX2 = pathX2;\n        this.pathY2 = pathY2;\n        this.pathX3 = pathX3;\n        this.pathY3 = pathY3;\n    }\n    return GradientPointer;\n}());\nexport { GradientPointer };\n/**\n * Class to define currentRect private property.\n * @private\n */\nvar CurrentLegendRect = /** @class */ (function () {\n    function CurrentLegendRect(x, y, width, height, label, id) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.label = label;\n        this.id = id;\n    }\n    return CurrentLegendRect;\n}());\nexport { CurrentLegendRect };\n/** @private */\nvar LegendRange = /** @class */ (function () {\n    function LegendRange(x, y, width, height, value, visible, currentPage) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.value = value;\n        this.visible = visible;\n        this.currentPage = currentPage;\n    }\n    return LegendRange;\n}());\nexport { LegendRange };\n/** @private */\nvar ToggleVisibility = /** @class */ (function () {\n    function ToggleVisibility(visible, value) {\n        this.visible = visible;\n        this.value = value;\n    }\n    return ToggleVisibility;\n}());\nexport { ToggleVisibility };\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('heatmapmeasuretext');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new RgbColor(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.R) + componentToHex(value.G) + componentToHex(value.B);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new RgbColor(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new RgbColor(255, 255, 255);\n}\n/** @private */\nexport function formatValue(isCustom, format, tempInterval, formatFun) {\n    return isCustom ? format.replace('{value}', formatFun(tempInterval))\n        : formatFun(tempInterval);\n}\n/** @private */\nvar MultiLevelPosition = /** @class */ (function () {\n    function MultiLevelPosition(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return MultiLevelPosition;\n}());\nexport { MultiLevelPosition };\n","/**\n * Specifies HeatMaps Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.heatMapTitleFont = {\n        size: '15px',\n        fontWeight: '500',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.axisTitleFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n    /** @private */\n    Theme.rectLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n    /** @private */\n    Theme.tooltipFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n})(Theme || (Theme = {}));\n/** @private */\nexport function getThemeColor(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'highcontrastlight':\n        case 'highcontrast':\n            style = {\n                heatMapTitle: '#ffffff',\n                axisTitle: '#ffffff',\n                axisLabel: '#ffffff',\n                cellBorder: '#EEEEEE',\n                background: '#000000',\n                cellTextColor: '#000000',\n                toggledColor: '#000000',\n                emptyCellColor: '#EEEEEE',\n                legendLabel: '#ffffff',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                heatMapTitle: '#ffffff',\n                axisTitle: '#ffffff',\n                axisLabel: '#DADADA',\n                cellBorder: '#EEEEEE',\n                background: '#000000',\n                cellTextColor: '#000000',\n                toggledColor: '#000000',\n                emptyCellColor: '#EEEEEE',\n                legendLabel: '#ffffff',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                heatMapTitle: '#212529',\n                axisTitle: '#212529',\n                axisLabel: '#212529',\n                cellBorder: '#E9ECEF',\n                background: '#FFFFFF',\n                cellTextColor: '#212529',\n                toggledColor: '#ffffff',\n                emptyCellColor: '#E9ECEF',\n                legendLabel: '#212529',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n        default:\n            style = {\n                heatMapTitle: '#424242',\n                axisTitle: '#424242',\n                axisLabel: '#686868',\n                cellBorder: '#EEEEEE',\n                cellTextColor: '#000000',\n                toggledColor: '#ffffff',\n                background: '#FFFFFF',\n                emptyCellColor: '#EEEEEE',\n                legendLabel: '#353535',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Theme } from './theme';\n/**\n * Configures the fonts in heat map.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], Font.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('Trim')\n    ], Font.prototype, \"textOverflow\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Configures the heat map margins.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the borders in the heat map.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Border.prototype, \"radius\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the tooltip borders in the heat map.\n */\nvar TooltipBorder = /** @class */ (function (_super) {\n    __extends(TooltipBorder, _super);\n    function TooltipBorder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], TooltipBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], TooltipBorder.prototype, \"width\", void 0);\n    return TooltipBorder;\n}(ChildProperty));\nexport { TooltipBorder };\n/**\n * Configures the mapping name for size and color in SizeAndColor type.\n */\nvar BubbleData = /** @class */ (function (_super) {\n    __extends(BubbleData, _super);\n    function BubbleData() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], BubbleData.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], BubbleData.prototype, \"color\", void 0);\n    return BubbleData;\n}(ChildProperty));\nexport { BubbleData };\n/**\n * class used to maintain Title styles.\n */\nvar Title = /** @class */ (function (_super) {\n    __extends(Title, _super);\n    function Title() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Title.prototype, \"text\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Title.prototype, \"textStyle\", void 0);\n    return Title;\n}(ChildProperty));\nexport { Title };\n/**\n * class used to maintain palette information.\n */\nvar PaletteCollection = /** @class */ (function (_super) {\n    __extends(PaletteCollection, _super);\n    function PaletteCollection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"label\", void 0);\n    return PaletteCollection;\n}(ChildProperty));\nexport { PaletteCollection };\n/**\n * label border properties.\n */\nvar AxisLabelBorder = /** @class */ (function (_super) {\n    __extends(AxisLabelBorder, _super);\n    function AxisLabelBorder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#b5b5b5')\n    ], AxisLabelBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], AxisLabelBorder.prototype, \"width\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], AxisLabelBorder.prototype, \"type\", void 0);\n    return AxisLabelBorder;\n}(ChildProperty));\nexport { AxisLabelBorder };\nvar BubbleSize = /** @class */ (function (_super) {\n    __extends(BubbleSize, _super);\n    function BubbleSize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], BubbleSize.prototype, \"minimum\", void 0);\n    __decorate([\n        Property('100%')\n    ], BubbleSize.prototype, \"maximum\", void 0);\n    return BubbleSize;\n}(ChildProperty));\nexport { BubbleSize };\n/**\n * categories for multi level labels\n */\nvar MultiLevelCategories = /** @class */ (function (_super) {\n    __extends(MultiLevelCategories, _super);\n    function MultiLevelCategories() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], MultiLevelCategories.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], MultiLevelCategories.prototype, \"end\", void 0);\n    __decorate([\n        Property('')\n    ], MultiLevelCategories.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], MultiLevelCategories.prototype, \"maximumTextWidth\", void 0);\n    return MultiLevelCategories;\n}(ChildProperty));\nexport { MultiLevelCategories };\n/**\n * MultiLevelLabels properties\n */\nvar MultiLevelLabels = /** @class */ (function (_super) {\n    __extends(MultiLevelLabels, _super);\n    function MultiLevelLabels() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Center')\n    ], MultiLevelLabels.prototype, \"alignment\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], MultiLevelLabels.prototype, \"overflow\", void 0);\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], MultiLevelLabels.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({ color: '#b5b5b5', width: 1, type: 'Rectangle' }, AxisLabelBorder)\n    ], MultiLevelLabels.prototype, \"border\", void 0);\n    __decorate([\n        Collection([], MultiLevelCategories)\n    ], MultiLevelLabels.prototype, \"categories\", void 0);\n    return MultiLevelLabels;\n}(ChildProperty));\nexport { MultiLevelLabels };\n/**\n * Internal class used to maintain colorcollection.\n */\nvar ColorCollection = /** @class */ (function () {\n    function ColorCollection(value, color, label) {\n        this.value = value;\n        this.color = color;\n        this.label = label;\n    }\n    return ColorCollection;\n}());\nexport { ColorCollection };\n/**\n * class used to maintain color and value collection.\n */\nvar BubbleTooltipData = /** @class */ (function () {\n    function BubbleTooltipData(mappingName, bubbleData, valueType) {\n        this.mappingName = mappingName;\n        this.bubbleData = bubbleData;\n        this.valueType = valueType;\n    }\n    return BubbleTooltipData;\n}());\nexport { BubbleTooltipData };\n/**\n * Internal class used to maintain legend colorcollection.\n */\nvar LegendColorCollection = /** @class */ (function () {\n    function LegendColorCollection(value, color, label, isHidden) {\n        this.value = value;\n        this.color = color;\n        this.label = label;\n        this.isHidden = isHidden;\n    }\n    return LegendColorCollection;\n}());\nexport { LegendColorCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, extend, ChildProperty, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { ColorCollection, LegendColorCollection, PaletteCollection } from '../model/base';\nimport { PaletterColor } from './helper';\n/**\n * Configures the color property in Heatmap.\n */\nvar PaletteSettings = /** @class */ (function (_super) {\n    __extends(PaletteSettings, _super);\n    function PaletteSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([{}], PaletteCollection)\n    ], PaletteSettings.prototype, \"palette\", void 0);\n    __decorate([\n        Property('Gradient')\n    ], PaletteSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], PaletteSettings.prototype, \"emptyPointColor\", void 0);\n    __decorate([\n        Property('Table')\n    ], PaletteSettings.prototype, \"colorGradientMode\", void 0);\n    return PaletteSettings;\n}(ChildProperty));\nexport { PaletteSettings };\n/**\n * Helper class for colormapping\n */\nvar RgbColor = /** @class */ (function () {\n    function RgbColor(r, g, b) {\n        this.R = r;\n        this.G = g;\n        this.B = b;\n    }\n    return RgbColor;\n}());\nexport { RgbColor };\nvar CellColor = /** @class */ (function () {\n    function CellColor(heatMap) {\n        this.heatMap = heatMap;\n    }\n    /**\n     * To convert hexa color to RGB.\n     * @return {RGB}\n     * @private\n     */\n    CellColor.prototype.convertToRGB = function (value, colorMapping) {\n        var previousOffset = colorMapping[0].value;\n        var nextOffset = 0;\n        for (var i = 1; i < colorMapping.length; i++) {\n            var offset = Number(colorMapping[i].value);\n            if (value <= offset) {\n                nextOffset = offset;\n                break;\n            }\n            else {\n                nextOffset = offset;\n                previousOffset = offset;\n            }\n        }\n        var percent = 0;\n        var full = nextOffset - previousOffset;\n        percent = (value - previousOffset) / full;\n        percent = isNaN(percent) ? 0 : percent;\n        var previousColor = this.getEqualColor(colorMapping, previousOffset);\n        var nextColor = this.getEqualColor(colorMapping, nextOffset);\n        return this.getPercentageColor(percent, previousColor, nextColor);\n    };\n    /**\n     * To convert RGB to HEX.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.rgbToHex = function (r, g, b) {\n        return '#' + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\n    };\n    /**\n     * To convert Component to HEX.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.componentToHex = function (c) {\n        var hex = c.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    };\n    /**\n     * To get similar color.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.getEqualColor = function (list, offset) {\n        for (var i = 0; i < list.length; i++) {\n            if (Number(list[i].value) === offset) {\n                var color = list[i].color;\n                if (color.indexOf('rgb') !== -1) {\n                    color = this.convertToHex(color);\n                }\n                else if (color.indexOf('#') === -1) {\n                    color = '#FFFFFF';\n                }\n                return color;\n            }\n        }\n        return '#00000';\n    };\n    /**\n     * To convert RGB to HEX.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.convertToHex = function (color) {\n        var itemColor = color.substr(3);\n        itemColor = itemColor.split('(')[1].split(')')[0];\n        var colorSplit = itemColor.split(',');\n        itemColor = this.rgbToHex(parseInt(colorSplit[0], 10), parseInt(colorSplit[1], 10), parseInt(colorSplit[2], 10));\n        return itemColor;\n    };\n    /**\n     * To get RGB for percentage value.\n     * @return {RGB}\n     * @private\n     */\n    CellColor.prototype.getPercentageColor = function (percent, previous, next) {\n        var nextColor = next.split('#')[1];\n        var prevColor = previous.split('#')[1];\n        var r = this.getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n        var g = this.getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n        var b = this.getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n        return new RgbColor(r, g, b);\n    };\n    /**\n     * To convert numbet to percentage.\n     * @return {RGB}\n     * @private\n     */\n    CellColor.prototype.getPercentage = function (percent, previous, next) {\n        var full = next - previous;\n        return Math.round((previous + (full * percent)));\n    };\n    /**\n     * To get complete color Collection.\n     * @private\n     */\n    CellColor.prototype.getColorCollection = function () {\n        var heatMap = this.heatMap;\n        heatMap.colorCollection = [];\n        heatMap.legendColorCollection = [];\n        var range;\n        var minValue = heatMap.bubbleSizeWithColor ? heatMap.minColorValue : heatMap.dataSourceMinValue;\n        var maxValue = heatMap.bubbleSizeWithColor ? heatMap.maxColorValue : heatMap.dataSourceMaxValue;\n        heatMap.emptyPointColor = heatMap.paletteSettings.emptyPointColor ? heatMap.paletteSettings.emptyPointColor :\n            heatMap.themeStyle.emptyCellColor;\n        var tempcolorMapping = this.orderbyOffset(heatMap.paletteSettings.palette && heatMap.paletteSettings.palette.length > 1 ?\n            heatMap.paletteSettings.palette : heatMap.themeStyle.palette);\n        if (!tempcolorMapping.isCompact) {\n            if (heatMap.paletteSettings.type === 'Gradient') {\n                range = (maxValue - minValue) / (tempcolorMapping.offsets.length - 1);\n            }\n            else {\n                range = (maxValue - minValue) / (tempcolorMapping.offsets.length);\n            }\n            if (tempcolorMapping.offsets.length >= 2) {\n                for (var index = 0; index < tempcolorMapping.offsets.length; index++) {\n                    heatMap.colorCollection.push(new ColorCollection(Math.round(((minValue) + (index * range)) * 100) / 100, tempcolorMapping.offsets[index].color, tempcolorMapping.offsets[index].label));\n                    heatMap.legendColorCollection.push(new LegendColorCollection(Math.round(((minValue) + (index * range)) * 100) / 100, tempcolorMapping.offsets[index].color, tempcolorMapping.offsets[index].label, false));\n                }\n            }\n        }\n        else {\n            heatMap.colorCollection = tempcolorMapping.offsets;\n            heatMap.legendColorCollection = extend([], tempcolorMapping.offsets, null, true);\n        }\n        this.updateLegendColorCollection(minValue, maxValue, tempcolorMapping);\n    };\n    /**\n     * To update legend color Collection.\n     * @private\n     */\n    CellColor.prototype.updateLegendColorCollection = function (minValue, maxValue, tempcolorMapping) {\n        if (this.heatMap.paletteSettings.type === 'Fixed' && (tempcolorMapping.isCompact || tempcolorMapping.isLabel)) {\n            return;\n        }\n        if (Math.round(minValue * 100) / 100 < this.heatMap.legendColorCollection[0].value) {\n            this.heatMap.legendColorCollection.unshift(new LegendColorCollection(Math.round(minValue * 100) / 100, this.heatMap.legendColorCollection[0].color, this.heatMap.legendColorCollection[0].label, true));\n        }\n        if (Math.round(maxValue * 100) / 100 > this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].value) {\n            this.heatMap.legendColorCollection.push(new LegendColorCollection(Math.round(maxValue * 100) / 100, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].color, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].label, true));\n        }\n    };\n    /**\n     * To get ordered palette color collection.\n     * @private\n     */\n    CellColor.prototype.orderbyOffset = function (offsets) {\n        var returnCollection = new PaletterColor();\n        var key = 'value';\n        var label = 'label';\n        returnCollection.isCompact = true;\n        returnCollection.isLabel = true;\n        // tslint:disable-next-line:no-any\n        returnCollection.offsets = offsets.sort(function (a, b) {\n            if (isNullOrUndefined(a[label]) && isNullOrUndefined(b[label])) {\n                returnCollection.isLabel = false;\n            }\n            if (!isNullOrUndefined(a[key]) && !isNullOrUndefined(b[key])) {\n                return a[key] - b[key];\n            }\n            else {\n                returnCollection.isCompact = false;\n                return a;\n            }\n        });\n        if (!returnCollection.isCompact) {\n            returnCollection.offsets = this.heatMap.paletteSettings.palette && this.heatMap.paletteSettings.palette.length > 1 ?\n                this.heatMap.paletteSettings.palette : this.heatMap.themeStyle.palette;\n        }\n        return returnCollection;\n    };\n    /**\n     * To get color depends to value.\n     * @private\n     */\n    CellColor.prototype.getColorByValue = function (text) {\n        var color = '';\n        var rbg;\n        var compareValue = 0;\n        if (text.toString() !== '') {\n            if (this.heatMap.cellSettings.tileType === 'Bubble' &&\n                (this.heatMap.cellSettings.bubbleType === 'Size' || this.heatMap.cellSettings.bubbleType === 'Sector')) {\n                color = this.heatMap.colorCollection[0].color;\n            }\n            else if (this.heatMap.paletteSettings.type === 'Fixed') {\n                for (var y = 0; y < this.heatMap.colorCollection.length; y++) {\n                    compareValue = this.heatMap.colorCollection[y + 1] ? this.heatMap.colorCollection[y + 1].value :\n                        this.heatMap.colorCollection[y].value;\n                    var singleValue = this.heatMap.dataSourceMinValue === this.heatMap.dataSourceMaxValue;\n                    if ((text <= compareValue && y === 0 && singleValue) || text < compareValue ||\n                        (text >= compareValue && y === this.heatMap.colorCollection.length - 1)) {\n                        var legendRange = void 0;\n                        if (this.heatMap.legendVisibilityByCellType) {\n                            legendRange = this.heatMap.legendModule.legendRange;\n                        }\n                        color = (this.heatMap.legendVisibilityByCellType && legendRange[y] && !legendRange[y].visible) ?\n                            this.heatMap.themeStyle.toggledColor : this.heatMap.colorCollection[y].color;\n                        break;\n                    }\n                }\n            }\n            else {\n                if (this.heatMap.paletteSettings.colorGradientMode !== 'Table') {\n                    this.getColorCollection();\n                }\n                if (text < this.heatMap.colorCollection[0].value) {\n                    color = this.heatMap.colorCollection[0].color;\n                }\n                else if (text > this.heatMap.colorCollection[this.heatMap.colorCollection.length - 1].value) {\n                    color = this.heatMap.colorCollection[this.heatMap.colorCollection.length - 1].color;\n                }\n                else {\n                    rbg = this.convertToRGB(text, this.heatMap.colorCollection);\n                    color = this.rgbToHex(rbg.R, rbg.G, rbg.B);\n                }\n            }\n        }\n        else {\n            color = this.heatMap.emptyPointColor;\n        }\n        return color;\n    };\n    return CellColor;\n}());\nexport { CellColor };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * HeatMap Axis file\n */\nimport { Property, Complex, ChildProperty, isNullOrUndefined, Collection } from '@syncfusion/ej2-base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { Font, Title, AxisLabelBorder, MultiLevelLabels } from '../model/base';\nimport { Theme } from '../model/theme';\nimport { Rect, measureText, Size, rotateTextSize, increaseDateTimeInterval, formatValue } from '../utils/helper';\nimport { MultiLevelPosition, textWrap } from '../utils/helper';\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.rect = new Rect(undefined, undefined, 0, 0);\n        /** @private */\n        _this.nearSizes = [];\n        /** @private */\n        _this.farSizes = [];\n        /** @private */\n        _this.maxLabelSize = new Size(0, 0);\n        /** @private */\n        _this.titleSize = new Size(0, 0);\n        /** @private */\n        _this.axisLabels = [];\n        /** @private */\n        _this.tooltipLabels = [];\n        /** @private */\n        _this.labelValue = [];\n        /** @private */\n        _this.axisLabelSize = 0;\n        /** @private */\n        _this.axisLabelInterval = 0;\n        /** @private */\n        _this.dateTimeAxisLabelInterval = [];\n        /** @private */\n        _this.maxLength = 0;\n        /** @private */\n        _this.min = 0;\n        /** @private */\n        _this.max = 0;\n        /** @private */\n        _this.isIntersect = false;\n        /** @private */\n        _this.jsonCellLabel = [];\n        _this.multiLevelSize = [];\n        /** @private */\n        _this.xAxisMultiLabelHeight = [];\n        /** @private */\n        _this.yAxisMultiLabelHeight = [];\n        /** @private */\n        _this.multiLevelPosition = [];\n        return _this;\n    }\n    /**\n     * measure the axis title and label size\n     * @param axis\n     * @param heatmap\n     * @private\n     */\n    Axis.prototype.computeSize = function (axis, heatmap, rect) {\n        var size = new Size(0, 0);\n        var innerPadding = 10;\n        this.titleSize = axis.getTitleSize(axis, innerPadding);\n        this.maxLabelSize = axis.getMaxLabelSize(axis, heatmap);\n        this.getMultilevelLabelsHeight(axis, rect, heatmap);\n        for (var i = 0; i < this.multiLevelLabels.length; i++) {\n            size = axis.multiLevelLabelSize(innerPadding, i);\n            this.multiLevelSize.push(size);\n        }\n    };\n    /**\n     * calculating x, y position of multi level labels\n     * @private\n     */\n    Axis.prototype.multiPosition = function (axis, index) {\n        var innerPadding = axis.orientation === 'Horizontal' ? 10 : 20;\n        var multiPosition = new MultiLevelPosition(0, 0);\n        if (axis.orientation === 'Horizontal') {\n            var level0 = axis.maxLabelSize.height + innerPadding;\n            var level1 = this.xAxisMultiLabelHeight[index - 1];\n            multiPosition.x = (axis.isInversed ? axis.rect.x + axis.rect.width : axis.rect.x);\n            multiPosition.y = index === 0 ? axis.rect.y + (axis.opposedPosition ? -level0 : level0) :\n                axis.multiLevelPosition[index - 1].y + (axis.opposedPosition ? -level1 : level1);\n        }\n        else {\n            var level0 = axis.maxLabelSize.width + innerPadding;\n            var level1 = index !== 0 && (this.multiLevelSize[index - 1].width);\n            multiPosition.x = index === 0 ? axis.rect.x - (axis.opposedPosition ? -level0 : level0) :\n                axis.multiLevelPosition[index - 1].x - (axis.opposedPosition ? -(level1 + innerPadding) : level1 + innerPadding);\n            multiPosition.y = axis.isInversed ? axis.rect.y : axis.rect.y + axis.rect.height;\n        }\n        return multiPosition;\n    };\n    Axis.prototype.multiLevelLabelSize = function (innerPadding, index) {\n        var labelSize = new Size(0, 0);\n        var multiLevel = this.multiLevelLabels;\n        var categoryLabel = multiLevel[index].categories;\n        for (var i = 0; i < categoryLabel.length; i++) {\n            var size_1 = measureText(categoryLabel[i].text, multiLevel[index].textStyle);\n            labelSize.width = (labelSize.width > size_1.width) ? labelSize.width : size_1.width;\n            labelSize.height = (labelSize.height > size_1.height) ? labelSize.height : size_1.height;\n        }\n        var size = (this.orientation === 'Horizontal') ? this.xAxisMultiLabelHeight[index] : this.yAxisMultiLabelHeight[index];\n        if (this.opposedPosition) {\n            this.farSizes.push(size);\n        }\n        else {\n            this.nearSizes.push(size);\n        }\n        return labelSize;\n    };\n    Axis.prototype.getMultilevelLabelsHeight = function (axis, rect, heatmap) {\n        var labelSize;\n        var gap;\n        var height;\n        var multiLevelLabelsHeight = [];\n        var start;\n        var end;\n        var startPosition;\n        var endPosition;\n        var isVertical = axis.orientation === 'Vertical';\n        var axisValue = (isVertical ? rect.height : rect.width) / axis.axisLabelSize;\n        var padding = axis.orientation === 'Vertical' ? 20 : 10;\n        this.multiLevelLabels.map(function (multiLevel, index) {\n            multiLevel.categories.map(function (categoryLabel) {\n                start = typeof categoryLabel.start === 'number' ? categoryLabel.start : Number(new Date(categoryLabel.start));\n                end = typeof categoryLabel.end === 'number' ? categoryLabel.end : Number(new Date(categoryLabel.end));\n                if (categoryLabel.text !== '' && categoryLabel.start !== null && categoryLabel.end !== null) {\n                    labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                    height = isVertical ? labelSize.width : labelSize.height;\n                    startPosition = heatmap.heatMapAxis.calculateLeftPosition(axis, start, categoryLabel.start, rect);\n                    endPosition = heatmap.heatMapAxis.calculateWidth(axis, categoryLabel.end, end, rect);\n                    labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                    gap = ((categoryLabel.maximumTextWidth === null) ? Math.abs(endPosition - startPosition) :\n                        categoryLabel.maximumTextWidth);\n                    if ((labelSize.width > gap - padding) && (multiLevel.overflow === 'Wrap') && !isVertical) {\n                        height = (height * (textWrap(categoryLabel.text, gap - padding, multiLevel.textStyle).length));\n                    }\n                    multiLevelLabelsHeight[index] = !multiLevelLabelsHeight[index] ? height + padding :\n                        ((multiLevelLabelsHeight[index] < height) ? height + padding : multiLevelLabelsHeight[index]);\n                }\n            });\n        });\n        if (isVertical) {\n            this.yAxisMultiLabelHeight = multiLevelLabelsHeight;\n        }\n        else {\n            this.xAxisMultiLabelHeight = multiLevelLabelsHeight;\n        }\n    };\n    Axis.prototype.getTitleSize = function (axis, innerPadding) {\n        var titleSize = new Size(0, 0);\n        if (this.title.text) {\n            titleSize = measureText(this.title.text, this.title.textStyle);\n            titleSize.height += innerPadding;\n        }\n        if (axis.opposedPosition) {\n            this.farSizes.push(titleSize.height);\n        }\n        else {\n            this.nearSizes.push(titleSize.height);\n        }\n        return titleSize;\n    };\n    Axis.prototype.getMaxLabelSize = function (axis, heatmap) {\n        var labelSize = new Size(0, 0);\n        var labels = this.axisLabels;\n        var padding = (axis.border.width > 0 || axis.multiLevelLabels.length > 0) ? 10 : 0;\n        axis.angle = axis.labelRotation;\n        axis.isIntersect = false;\n        if (axis.orientation === 'Horizontal' && (axis.labelIntersectAction === 'Rotate45' ||\n            (axis.labelRotation % 180 === 0 && axis.labelIntersectAction === 'Trim'))) {\n            var interval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                heatmap.initialClipRect.width / axis.axisLabelSize : heatmap.initialClipRect.width / axis.axisLabels.length;\n            var startX = heatmap.initialClipRect.x + ((!axis.isInversed) ? 0 : heatmap.initialClipRect.width);\n            var previousEnd = void 0;\n            var previousStart = void 0;\n            for (var i = 0, len = labels.length; i < len; i++) {\n                var label = labels[i];\n                var elementSize = measureText(label, axis.textStyle);\n                var axisInterval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                    axis.dateTimeAxisLabelInterval[i] * interval : interval;\n                var startPoint = startX + (!axis.isInversed ?\n                    ((interval - elementSize.width) / 2) : -((interval + elementSize.width) / 2));\n                startPoint = startPoint < heatmap.initialClipRect.x ? heatmap.initialClipRect.x : startPoint;\n                var endPoint = startPoint + elementSize.width;\n                if (!axis.isInversed) {\n                    if (isNullOrUndefined(previousEnd)) {\n                        previousEnd = endPoint;\n                    }\n                    else if ((startPoint < previousEnd)) {\n                        if (axis.labelIntersectAction === 'Rotate45') {\n                            axis.angle = 45;\n                        }\n                        else {\n                            axis.isIntersect = true;\n                        }\n                        break;\n                    }\n                    previousEnd = endPoint;\n                }\n                else {\n                    if (isNullOrUndefined(previousStart)) {\n                        previousStart = startPoint;\n                    }\n                    else if ((previousStart < endPoint)) {\n                        if (axis.labelIntersectAction === 'Rotate45') {\n                            axis.angle = 45;\n                        }\n                        else {\n                            axis.isIntersect = true;\n                        }\n                        break;\n                    }\n                    previousStart = startPoint;\n                }\n                startX += axis.isInversed ? -axisInterval : axisInterval;\n            }\n        }\n        for (var i = 0; i < labels.length; i++) {\n            var size = (axis.angle % 180 === 0) ?\n                measureText(labels[i], axis.textStyle) : rotateTextSize(axis.textStyle, labels[i], axis.angle);\n            labelSize.width = (labelSize.width > size.width) ? labelSize.width : size.width;\n            labelSize.height = (labelSize.height > size.height) ? labelSize.height : size.height;\n        }\n        if (axis.opposedPosition) {\n            this.farSizes.push((axis.orientation === 'Horizontal') ? labelSize.height : labelSize.width + padding);\n        }\n        else {\n            this.nearSizes.push((axis.orientation === 'Horizontal') ? labelSize.height : labelSize.width + padding);\n        }\n        return labelSize;\n    };\n    /**\n     * Generate the axis lables for numeric axis\n     * @param heatmap\n     * @private\n     */\n    Axis.prototype.calculateNumericAxisLabels = function (heatmap) {\n        //Axis Min\n        var min = 0;\n        var max = 0;\n        var interval = this.interval ? this.interval : 1;\n        var adaptorMin;\n        var adaptorMax;\n        if (heatmap.adaptorModule && heatmap.isCellData) {\n            adaptorMin = this.orientation === 'Horizontal' ?\n                heatmap.adaptorModule.adaptiveXMinMax.min : heatmap.adaptorModule.adaptiveYMinMax.min;\n            adaptorMax = this.orientation === 'Horizontal' ?\n                heatmap.adaptorModule.adaptiveXMinMax.max : heatmap.adaptorModule.adaptiveYMinMax.max;\n        }\n        min = !isNullOrUndefined(this.minimum) ? this.minimum : ((adaptorMin) ? adaptorMin : 0);\n        max = !isNullOrUndefined(this.maximum) ? this.maximum :\n            ((adaptorMax) ? adaptorMax : (this.maxLength * this.increment));\n        var temp;\n        if (this.minimum && this.maximum && min > max) {\n            temp = min;\n            min = max;\n            max = temp;\n        }\n        max = !isNullOrUndefined(this.maximum) ? max : (adaptorMax ? adaptorMax : (max + min));\n        var format = this.labelFormat;\n        var isCustom = format.match('{value}') !== null;\n        this.format = heatmap.intl.getNumberFormat({\n            format: isCustom ? '' : format\n        });\n        for (var i = min; i <= max; i = i + (interval * this.increment)) {\n            var value = formatValue(isCustom, format, i, this.format);\n            this.axisLabels.push(value);\n        }\n        this.min = 0;\n        this.axisLabelSize = Math.floor(((max - min) / this.increment) + 1);\n        this.max = this.axisLabelSize - 1;\n        this.axisLabelInterval = interval;\n        for (var i = min; i <= max; i = i + this.increment) {\n            var value = formatValue(isCustom, format, i, this.format);\n            this.tooltipLabels.push(value);\n            this.labelValue.push(i);\n        }\n        this.labelValue = this.isInversed ? this.labelValue.reverse() : this.labelValue;\n    };\n    /**\n     * Generate the axis lables for category axis\n     * @private\n     */\n    Axis.prototype.calculateCategoryAxisLabels = function () {\n        var labels = this.labels ? this.labels : [];\n        labels = (labels.length > 0) ? labels : this.jsonCellLabel;\n        var min = !isNullOrUndefined(this.minimum) ? this.minimum : 0;\n        var max = !isNullOrUndefined(this.maximum) ? this.maximum : this.maxLength;\n        var interval = this.interval ? this.interval : 1;\n        var temp;\n        if (!isNullOrUndefined(this.minimum) && !isNullOrUndefined(this.maximum) && min > max) {\n            temp = min;\n            min = max;\n            max = temp;\n        }\n        if (labels && labels.length > 0) {\n            for (var i = min; i <= max; i = i + interval) {\n                var value = labels[i] ? labels[i].toString() : i.toString();\n                this.axisLabels.push(value);\n            }\n        }\n        else {\n            for (var i = min; i <= max; i = i + interval) {\n                this.axisLabels.push(i.toString());\n            }\n        }\n        for (var i = min; i <= max; i++) {\n            this.tooltipLabels.push(labels[i] ? labels[i].toString() : i.toString());\n            this.labelValue.push(labels[i] ? labels[i].toString() : i.toString());\n        }\n        this.min = min;\n        this.max = max;\n        this.axisLabelSize = max - min + 1;\n        this.axisLabelInterval = interval;\n        this.labelValue = this.isInversed ? this.labelValue.reverse() : this.labelValue;\n    };\n    /**\n     * Generate the axis labels for date time axis.\n     * @param heatmap\n     * @private\n     */\n    Axis.prototype.calculateDateTimeAxisLabel = function (heatmap) {\n        var interval = this.interval ? this.interval : 1;\n        var option = {\n            skeleton: 'full',\n            type: 'dateTime'\n        };\n        var dateParser = heatmap.intl.getDateParser(option);\n        var dateFormatter = heatmap.intl.getDateFormat(option);\n        var min;\n        var max;\n        var adaptorMin = null;\n        var adaptorMax = null;\n        if (heatmap.adaptorModule && heatmap.isCellData) {\n            adaptorMin = this.orientation === 'Horizontal' ? heatmap.adaptorModule.adaptiveXMinMax.min :\n                heatmap.adaptorModule.adaptiveYMinMax.min;\n            adaptorMax = this.orientation === 'Horizontal' ? heatmap.adaptorModule.adaptiveXMinMax.max :\n                heatmap.adaptorModule.adaptiveYMinMax.max;\n        }\n        var minimum = this.minimum ? this.minimum : (adaptorMin ? adaptorMin : null);\n        var maximum = this.maximum ? this.maximum : (adaptorMax ? adaptorMax : null);\n        if (minimum === null && maximum === null) {\n            min = 0;\n            max = this.maxLength * this.increment;\n            for (var i = min; i <= max; i = i + (interval * this.increment)) {\n                this.axisLabels.push(i.toString());\n                this.tooltipLabels.push(i.toString());\n                this.labelValue.push(i.toString());\n            }\n            this.min = 0;\n            this.max = this.maxLength;\n            this.axisLabelSize = (max - min) / this.increment + 1;\n            this.axisLabelInterval = interval;\n        }\n        else {\n            if (minimum !== null && maximum === null) {\n                min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: minimum }).val))));\n                max = increaseDateTimeInterval(min, this.maxLength, this.intervalType, this.increment).getTime();\n            }\n            else if (minimum === null && maximum !== null) {\n                max = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: maximum }).val))));\n                min = increaseDateTimeInterval(max, -this.maxLength, this.intervalType, this.increment).getTime();\n            }\n            else {\n                min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: minimum }).val))));\n                max = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: maximum }).val))));\n            }\n            this.format = heatmap.intl.getDateFormat({\n                format: this.labelFormat, skeleton: this.getSkeleton()\n            });\n            var tempInterval = min;\n            while (tempInterval <= max) {\n                var value = this.format(new Date(tempInterval));\n                this.axisLabels.push(value);\n                if (this.showLabelOn !== 'None') {\n                    interval = this.calculateLabelInterval(tempInterval);\n                    this.dateTimeAxisLabelInterval.push(interval);\n                }\n                tempInterval = increaseDateTimeInterval(tempInterval, interval, this.intervalType, this.increment).getTime();\n            }\n            this.min = 0;\n            this.axisLabelInterval = interval;\n            this.axisLabelSize = this.getTotalLabelLength(min, max); // this.tooltipLabels.length;\n            this.max = this.axisLabelSize - 1;\n            tempInterval = min;\n            while (tempInterval <= max) {\n                var value = this.format(new Date(tempInterval));\n                this.tooltipLabels.push(value);\n                this.labelValue.push(new Date(tempInterval));\n                tempInterval = increaseDateTimeInterval(tempInterval, 1, this.intervalType, this.increment).getTime();\n            }\n        }\n        this.labelValue = this.isInversed ? this.labelValue.reverse() : this.labelValue;\n    };\n    Axis.prototype.calculateLabelInterval = function (interval) {\n        var year = new Date(interval).getFullYear();\n        var month = new Date(interval).getMonth() + 1;\n        var day = new Date(interval).getDate();\n        var numberOfDays;\n        var tempInterval;\n        if (this.showLabelOn === 'Years' || this.showLabelOn === 'Months') {\n            if (this.showLabelOn === 'Years' && this.intervalType === 'Months') {\n                tempInterval = Math.ceil(12 / this.increment);\n            }\n            else {\n                numberOfDays = this.showLabelOn === 'Years' ? year % 4 === 0 ? 366 : 365 : new Date(year, month, 0).getDate();\n                numberOfDays += 1 - day;\n                tempInterval = this.intervalType === 'Days' ? Math.ceil(numberOfDays / this.increment) : this.intervalType === 'Hours' ?\n                    Math.ceil((numberOfDays * 24) / this.increment) : this.intervalType === 'Minutes' ?\n                    Math.ceil((numberOfDays * 24 * 60) / this.increment) : 1;\n            }\n        }\n        else if (this.showLabelOn === 'Days') {\n            tempInterval = this.intervalType === 'Hours' ? Math.ceil(24 / this.increment) : this.intervalType === 'Minutes' ?\n                Math.ceil((24 * 60) / this.increment) : 1;\n        }\n        else if (this.showLabelOn === 'Hours') {\n            var minutes = new Date(interval).getMinutes();\n            tempInterval = this.intervalType === 'Minutes' ? Math.ceil((60 - minutes) / this.increment) : 1;\n        }\n        else {\n            tempInterval = 1;\n        }\n        return tempInterval;\n    };\n    /**\n     * @private\n     */\n    Axis.prototype.getSkeleton = function () {\n        var skeleton;\n        if (this.intervalType === 'Years') {\n            skeleton = 'yMMM';\n        }\n        else if (this.intervalType === 'Months') {\n            skeleton = 'MMMd';\n        }\n        else if (this.intervalType === 'Days') {\n            skeleton = 'yMd';\n        }\n        else if (this.intervalType === 'Hours') {\n            skeleton = 'EHm';\n        }\n        else if (this.intervalType === 'Minutes') {\n            skeleton = 'Hms';\n        }\n        else {\n            skeleton = 'Hms';\n        }\n        return skeleton;\n    };\n    /** @private */\n    Axis.prototype.getTotalLabelLength = function (min, max) {\n        var length = 0;\n        var minimum = new Date(min);\n        var maximum = new Date(max);\n        var difference;\n        var days;\n        switch (this.intervalType) {\n            case 'Years':\n                var years = ((maximum.getFullYear() - minimum.getFullYear()) / this.increment) + 1;\n                length = Math.floor(years);\n                break;\n            case 'Months':\n                var months = (maximum.getFullYear() - minimum.getFullYear()) * 12;\n                months -= minimum.getMonth();\n                months += maximum.getMonth();\n                length = months <= 0 ? 1 : Math.floor((months / this.increment) + 1);\n                break;\n            case 'Days':\n                difference = Math.abs(minimum.getTime() - maximum.getTime());\n                days = Math.floor(difference / (1000 * 3600 * 24));\n                length = Math.floor((days / this.increment) + 1);\n                break;\n            case 'Hours':\n                difference = Math.abs(minimum.getTime() - maximum.getTime());\n                var hours = Math.floor(difference / (1000 * 3600));\n                length = Math.floor(hours / this.increment) + 1;\n                break;\n            case 'Minutes':\n                difference = Math.abs(minimum.getTime() - maximum.getTime());\n                var minutes = Math.floor(difference / (1000 * 60));\n                length = Math.floor(minutes / this.increment) + 1;\n                break;\n        }\n        return length;\n    };\n    /**\n     * Clear the axis label collection\n     * @private\n     */\n    Axis.prototype.clearAxisLabel = function () {\n        this.axisLabels = [];\n        this.tooltipLabels = [];\n        this.dateTimeAxisLabelInterval = [];\n        this.labelValue = [];\n    };\n    __decorate([\n        Complex({ text: '', textStyle: Theme.axisTitleFont }, Title)\n    ], Axis.prototype, \"title\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"opposedPosition\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"labels\", void 0);\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Axis.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(0)\n    ], Axis.prototype, \"labelRotation\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"isInversed\", void 0);\n    __decorate([\n        Property('Category')\n    ], Axis.prototype, \"valueType\", void 0);\n    __decorate([\n        Property(1)\n    ], Axis.prototype, \"increment\", void 0);\n    __decorate([\n        Property('None')\n    ], Axis.prototype, \"showLabelOn\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"interval\", void 0);\n    __decorate([\n        Property('')\n    ], Axis.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('Days')\n    ], Axis.prototype, \"intervalType\", void 0);\n    __decorate([\n        Property('Trim')\n    ], Axis.prototype, \"labelIntersectAction\", void 0);\n    __decorate([\n        Complex({ color: '#b5b5b5', width: 0, type: 'Rectangle' }, AxisLabelBorder)\n    ], Axis.prototype, \"border\", void 0);\n    __decorate([\n        Collection([], MultiLevelLabels)\n    ], Axis.prototype, \"multiLevelLabels\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","import { Rect, measureText, TextOption, rotateTextSize, textTrim, CanvasTooltip, PathOption, textWrap } from '../utils/helper';\nimport { sum, titlePositionX, LineOption, Line, DrawSvgCanvas, TextBasic, titlePositionY } from '../utils/helper';\nimport { extend, Browser } from '@syncfusion/ej2-base';\nvar AxisHelper = /** @class */ (function () {\n    function AxisHelper(heatMap) {\n        this.heatMap = heatMap;\n        this.padding = 10;\n        this.drawSvgCanvas = new DrawSvgCanvas(heatMap);\n    }\n    /**\n     * To render the x and y axis.\n     *  @private\n     */\n    AxisHelper.prototype.renderAxes = function () {\n        this.initialClipRect = this.heatMap.initialClipRect;\n        var heatMap = this.heatMap;\n        var axisElement;\n        var element;\n        if (!heatMap.enableCanvasRendering) {\n            axisElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'AxisCollection' });\n        }\n        var axes = this.heatMap.axisCollections;\n        for (var i = 0, len = axes.length; i < len; i++) {\n            var axis = axes[i];\n            var optionsLine = {};\n            if (axis.orientation === 'Horizontal') {\n                if (!heatMap.enableCanvasRendering) {\n                    element = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'XAxisGroup' });\n                }\n                this.drawXAxisLine(element, axis);\n                this.drawXAxisTitle(axis, element, axis.rect);\n                this.drawXAxisLabels(axis, element, axis.rect);\n            }\n            else {\n                element = heatMap.renderer.createGroup({ id: heatMap.element.id + 'YAxisGroup' });\n                this.drawYAxisLine(element, axis);\n                this.drawYAxisTitle(axis, element, axis.rect);\n                this.drawYAxisLabels(axis, element, axis.rect);\n            }\n            if (axis.multiLevelLabels.length > 0) {\n                this.drawMultiLevels(element, axis);\n            }\n            if (!heatMap.enableCanvasRendering) {\n                axisElement.appendChild(element);\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            this.heatMap.svgObject.appendChild(axisElement);\n        }\n    };\n    AxisHelper.prototype.drawXAxisLine = function (parent, axis) {\n        var y = this.initialClipRect.y + (!axis.opposedPosition ? this.initialClipRect.height : 0);\n        var line = new LineOption(this.heatMap.element.id + '_XAxisLine', new Line(this.initialClipRect.x, y, this.initialClipRect.x + this.initialClipRect.width, y), 'transparent', 0);\n        this.drawSvgCanvas.drawLine(line, parent);\n    };\n    AxisHelper.prototype.drawYAxisLine = function (parent, axis) {\n        var x = this.initialClipRect.x + ((!axis.opposedPosition) ? 0 : this.initialClipRect.width);\n        var line = new LineOption(this.heatMap.element.id + '_YAxisLine', new Line(x, this.initialClipRect.y, x, this.initialClipRect.height + this.initialClipRect.y), 'transparent', 0);\n        this.drawSvgCanvas.drawLine(line, parent);\n    };\n    AxisHelper.prototype.drawXAxisTitle = function (axis, parent, rect) {\n        var titlepadding = (axis.textStyle.size === '0px' ? 0 : 10);\n        var y = rect.y + (!axis.opposedPosition ? (axis.maxLabelSize.height + titlepadding +\n            sum(axis.xAxisMultiLabelHeight)) : -(axis.maxLabelSize.height + titlepadding + sum(axis.xAxisMultiLabelHeight)));\n        if (axis.title.text) {\n            var heatMap = this.heatMap;\n            var title = axis.title;\n            var elementSize = measureText(title.text, title.textStyle);\n            var padding = this.padding;\n            var anchor = title.textStyle.textAlignment === 'Near' ? 'start' :\n                title.textStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            padding = axis.opposedPosition ? -(padding + elementSize.height / 4) : (padding + (3 * elementSize.height / 4));\n            var options = new TextOption(heatMap.element.id + '_XAxisTitle', new TextBasic(rect.x + titlePositionX(rect.width, 0, 0, title.textStyle), y + padding, anchor, title.text), title.textStyle, title.textStyle.color || heatMap.themeStyle.axisTitle);\n            this.drawSvgCanvas.createText(options, parent, title.text);\n        }\n    };\n    AxisHelper.prototype.drawYAxisTitle = function (axis, parent, rect) {\n        if (axis.title.text) {\n            var title = axis.title;\n            var heatMap = this.heatMap;\n            var labelRotation = (axis.opposedPosition) ? 90 : -90;\n            var elementSize = measureText(title.text, title.textStyle);\n            var anchor = title.textStyle.textAlignment === 'Near' ? 'start' :\n                title.textStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            var padding = 10;\n            padding = axis.opposedPosition ? padding : -padding;\n            var titlepadding = (axis.textStyle.size === '0px' ? 0 : padding);\n            var x = rect.x + titlepadding + ((axis.opposedPosition) ? axis.maxLabelSize.width + sum(axis.yAxisMultiLabelHeight) :\n                -(axis.maxLabelSize.width + sum(axis.yAxisMultiLabelHeight)));\n            var y = rect.y + titlePositionY(rect, 0, 0, title.textStyle) + (axis.opposedPosition ? this.padding : -this.padding);\n            var options = new TextOption(heatMap.element.id + '_YAxisTitle', new TextBasic(x, y - this.padding, anchor, title.text, labelRotation, 'rotate(' + labelRotation + ',' + (x) + ',' + (y) + ')', 'auto'), title.textStyle, title.textStyle.color || heatMap.themeStyle.axisTitle);\n            if (!this.heatMap.enableCanvasRendering) {\n                this.drawSvgCanvas.createText(options, parent, title.text);\n            }\n            else {\n                this.drawSvgCanvas.canvasDrawText(options, title.text, x, y);\n            }\n        }\n    };\n    /**\n     * Get the visible labels for both x and y axis\n     * @private\n     */\n    AxisHelper.prototype.calculateVisibleLabels = function () {\n        var heatmap = this.heatMap;\n        var axis;\n        var axisCollection = heatmap.axisCollections;\n        var data = this.heatMap.dataSourceSettings;\n        var processLabels = !(data && data.isJsonData && data.adaptorType === 'Cell');\n        for (var i = 0, len = axisCollection.length; i < len; i++) {\n            axis = axisCollection[i];\n            if (axis.valueType === 'Numeric' && processLabels) {\n                axis.clearAxisLabel();\n                axis.calculateNumericAxisLabels(this.heatMap);\n            }\n            else if (axis.valueType === 'DateTime' && processLabels) {\n                axis.clearAxisLabel();\n                axis.calculateDateTimeAxisLabel(this.heatMap);\n            }\n            else if (axis.valueType === 'Category') {\n                axis.clearAxisLabel();\n                axis.calculateCategoryAxisLabels();\n            }\n            axis.tooltipLabels = axis.isInversed ? axis.tooltipLabels.reverse() : axis.tooltipLabels;\n        }\n    };\n    /**\n     * Measure the title and labels rendering position for both X and Y axis.\n     * @param rect\n     * @private\n     */\n    AxisHelper.prototype.measureAxis = function (rect) {\n        var heatmap = this.heatMap;\n        var axis;\n        var axisCollection = heatmap.axisCollections;\n        for (var i = axisCollection.length - 1; i >= 0; i--) {\n            axis = axisCollection[i];\n            var padding = axis.textStyle.size === '0px' ? 0 : this.padding;\n            axis.nearSizes = [];\n            axis.farSizes = [];\n            axis.computeSize(axis, heatmap, rect);\n            if (!axis.opposedPosition) {\n                if (axis.orientation === 'Horizontal') {\n                    rect.height -= (sum(axis.nearSizes) + padding);\n                }\n                else {\n                    rect.x += sum(axis.nearSizes) + padding;\n                    rect.width -= sum(axis.nearSizes) + padding;\n                }\n            }\n            else {\n                if (axis.orientation === 'Horizontal') {\n                    rect.y += sum(axis.farSizes) + padding;\n                    rect.height -= sum(axis.farSizes) + padding;\n                }\n                else {\n                    rect.width -= sum(axis.farSizes) + padding;\n                }\n            }\n        }\n    };\n    /**\n     * Calculate the X and Y axis line position\n     * @param rect\n     * @private\n     */\n    AxisHelper.prototype.calculateAxisSize = function (rect) {\n        var heatmap = this.heatMap;\n        var axis;\n        var axisCollection = heatmap.axisCollections;\n        for (var i = 0, len = axisCollection.length; i < len; i++) {\n            var axis_1 = axisCollection[i];\n            axis_1.rect = extend({}, rect, null, true);\n            if (axis_1.orientation === 'Horizontal' && !axis_1.opposedPosition) {\n                axis_1.rect.y = rect.y + rect.height;\n                axis_1.rect.height = 0;\n            }\n            if (axis_1.orientation === 'Vertical' && axis_1.opposedPosition) {\n                axis_1.rect.x = rect.x + rect.width;\n                axis_1.rect.width = 0;\n            }\n            axis_1.multiLevelPosition = [];\n            for (var i_1 = 0; i_1 < axis_1.multiLevelLabels.length; i_1++) {\n                var multiPosition = axis_1.multiPosition(axis_1, i_1);\n                axis_1.multiLevelPosition.push(multiPosition);\n            }\n        }\n    };\n    AxisHelper.prototype.drawXAxisLabels = function (axis, parent, rect) {\n        var heatMap = this.heatMap;\n        var labels = axis.axisLabels;\n        var interval = rect.width / axis.axisLabelSize;\n        var compactInterval = 0;\n        var axisInterval = axis.interval ? axis.interval : 1;\n        var tempintervel = rect.width / (axis.axisLabelSize / axis.axisLabelInterval);\n        var temp = axis.axisLabelInterval;\n        if (tempintervel > 0) {\n            while (tempintervel < parseInt(axis.textStyle.size, 10)) {\n                temp = temp + 1;\n                tempintervel = rect.width / (axis.axisLabelSize / temp);\n            }\n        }\n        else {\n            temp = axis.tooltipLabels.length;\n        }\n        if (axis.axisLabelInterval < temp) {\n            compactInterval = temp;\n            labels = axis.tooltipLabels;\n            axisInterval = temp;\n        }\n        var padding = 10;\n        var lableStrtX = rect.x + (!axis.isInversed ? 0 : rect.width);\n        var labelPadding;\n        var angle = axis.angle;\n        padding = this.padding;\n        var labelElement;\n        var borderElement;\n        if (!heatMap.enableCanvasRendering) {\n            labelElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'XAxisLabels' });\n            borderElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'XAxisLabelBorder' });\n        }\n        for (var i = 0, len = labels.length; i < len; i++) {\n            var lableRect = new Rect(lableStrtX, rect.y, interval, rect.height);\n            var label = (axis.labelIntersectAction === 'Trim' && axis.isIntersect) ? axis.valueType !== 'DateTime' ||\n                axis.showLabelOn === 'None' ? textTrim(interval * axisInterval, labels[i], axis.textStyle) :\n                textTrim(axis.dateTimeAxisLabelInterval[i] * interval, labels[i], axis.textStyle) : labels[i];\n            var elementSize = measureText(label, axis.textStyle);\n            var transform = void 0;\n            labelPadding = (axis.opposedPosition) ?\n                -(padding)\n                : (padding + ((angle % 360) === 0 ? (elementSize.height / 2) : 0));\n            var x = lableRect.x + ((!axis.isInversed) ?\n                (lableRect.width / 2) - (elementSize.width / 2) : -((lableRect.width / 2) + (elementSize.width / 2)));\n            if (axis.labelIntersectAction === 'Trim') {\n                x = (!axis.isInversed) ? (x >= lableRect.x ? x : lableRect.x) : (x > (lableStrtX - interval) ? x : (lableStrtX - interval));\n            }\n            else if (angle % 180 === 0) {\n                x = x < rect.x ? rect.x : x;\n                x = ((x + elementSize.width) > (rect.x + rect.width)) ? (rect.x + rect.width - elementSize.width) : x;\n            }\n            var y = rect.y + labelPadding;\n            this.drawXAxisBorder(axis, borderElement, axis.rect, x, elementSize.width, i);\n            if (angle % 360 !== 0) {\n                angle = (angle > 360) ? angle % 360 : angle;\n                var rotateSize = rotateTextSize(axis.textStyle, label, angle);\n                var diffHeight = axis.maxLabelSize.height - Math.ceil(rotateSize.height - elementSize.height);\n                var yLocation = axis.opposedPosition ? diffHeight / 2 : -diffHeight / 2;\n                x = lableRect.x + (axis.isInversed ? -(lableRect.width / 2) : (lableRect.width / 2));\n                y = y + (axis.opposedPosition ? -(rotateSize.height / 2) :\n                    (((angle % 360) === 180 || (angle % 360) === -180) ? 0 : (rotateSize.height) / 2));\n                transform = 'rotate(' + angle + ',' + x + ','\n                    + y + ')';\n            }\n            var options = new TextOption(heatMap.element.id + '_XAxis_Label' + i, new TextBasic(x, y, (angle % 360 === 0) ? 'start' : 'middle', label, angle, transform), axis.textStyle, axis.textStyle.color || heatMap.themeStyle.axisLabel);\n            if (angle !== 0 && this.heatMap.enableCanvasRendering) {\n                this.drawSvgCanvas.canvasDrawText(options, label);\n            }\n            else {\n                this.drawSvgCanvas.createText(options, labelElement, label);\n            }\n            if (compactInterval === 0) {\n                var labelInterval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                    axis.dateTimeAxisLabelInterval[i] : axis.axisLabelInterval;\n                lableStrtX = lableStrtX + (!axis.isInversed ? (labelInterval * interval) :\n                    -(labelInterval * interval));\n            }\n            else {\n                lableStrtX = lableStrtX + (!axis.isInversed ? (compactInterval * interval) : -(compactInterval * interval));\n            }\n            if (label.indexOf('...') !== -1) {\n                this.heatMap.tooltipCollection.push(new CanvasTooltip(labels[i], new Rect(x, y - elementSize.height, elementSize.width, elementSize.height)));\n            }\n            if (compactInterval !== 0) {\n                i = i + (compactInterval - 1);\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n            parent.appendChild(borderElement);\n        }\n    };\n    AxisHelper.prototype.drawYAxisLabels = function (axis, parent, rect) {\n        var heatMap = this.heatMap;\n        var labels = axis.axisLabels;\n        var interval = rect.height / axis.axisLabelSize;\n        var compactInterval = 0;\n        var tempintervel = rect.height / (axis.axisLabelSize / axis.axisLabelInterval);\n        var temp = axis.axisLabelInterval;\n        if (tempintervel > 0) {\n            while (tempintervel < parseInt(axis.textStyle.size, 10)) {\n                temp = temp + 1;\n                tempintervel = rect.height / (axis.axisLabelSize / temp);\n            }\n        }\n        else {\n            temp = axis.tooltipLabels.length;\n        }\n        if (axis.axisLabelInterval < temp) {\n            compactInterval = temp;\n            labels = axis.tooltipLabels;\n        }\n        var padding = 10;\n        var lableStartY = rect.y + (axis.isInversed ? 0 : rect.height);\n        var anchor = axis.opposedPosition ? 'start' : 'end';\n        padding = axis.opposedPosition ? padding : -padding;\n        var labelElement;\n        var borderElement;\n        if (!heatMap.enableCanvasRendering) {\n            labelElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'YAxisLabels' });\n            borderElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'YAxisLabelBorder' });\n        }\n        for (var i = 0, len = labels.length; i < len; i++) {\n            var labelRect = new Rect(rect.x, lableStartY, rect.width, interval);\n            var position = labelRect.height / 2; //titlePositionY(lableRect, 0, 0, axis.textStyle);\n            var x = labelRect.x + padding;\n            var y = labelRect.y + (axis.isInversed ? position : -position);\n            var options = new TextOption(heatMap.element.id + '_YAxis_Label' + i, new TextBasic(x, y, anchor, labels[i], 0, 'rotate(' + 0 + ',' + (x) + ',' + (y) + ')', 'middle'), axis.textStyle, axis.textStyle.color || heatMap.themeStyle.axisLabel);\n            if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                options.dy = '1ex';\n            }\n            this.drawSvgCanvas.createText(options, labelElement, labels[i]);\n            if (compactInterval === 0) {\n                var labelInterval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                    axis.dateTimeAxisLabelInterval[i] : axis.axisLabelInterval;\n                lableStartY = lableStartY + (axis.isInversed ? (labelInterval * interval) :\n                    -(labelInterval * interval));\n            }\n            else {\n                lableStartY = lableStartY + (axis.isInversed ? (compactInterval * interval) : -(compactInterval * interval));\n                i = i + (compactInterval - 1);\n            }\n            var elementSize = measureText(labels[i], axis.textStyle);\n            this.drawYAxisBorder(axis, borderElement, axis.rect, y, elementSize.height, i);\n        }\n        if (!heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n            parent.appendChild(borderElement);\n        }\n    };\n    AxisHelper.prototype.drawXAxisBorder = function (axis, parent, rect, lableX, width, index) {\n        var interval = rect.width / axis.axisLabelSize;\n        var path = '';\n        var padding = 10;\n        var axisInterval = axis.interval ? axis.interval : 1;\n        var startX = axis.isInversed ? rect.x + rect.width - (interval * index * axisInterval) :\n            rect.x + (interval * index * axisInterval);\n        var startY = rect.y;\n        var endX;\n        var endY;\n        endY = startY + (axis.opposedPosition ? -(axis.maxLabelSize.height + padding) : axis.maxLabelSize.height + padding);\n        endX = axis.isInversed ? startX - interval : startX + interval;\n        switch (axis.border.type) {\n            case 'Rectangle':\n                path = ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY);\n                break;\n            case 'WithoutTopBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path = 'M' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                var padding_1 = 3;\n                endY = startY + ((endY - startY) / 2) + (axis.opposedPosition ? 0 : 5);\n                var endY1 = axis.isInversed ? (lableX + width + padding_1) : (lableX - padding_1);\n                var endY2 = axis.isInversed ? (lableX - padding_1) : (lableX + width + padding_1);\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endY1 + ' ' + endY + ' ' + 'M' + ' ' + endY2 +\n                    ' ' + endY + ' ' + 'L' +\n                    ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n        }\n        if (axis.border.width > 0 && axis.border.type !== 'WithoutBorder') {\n            this.createAxisBorderElement(axis, path, parent, index);\n        }\n    };\n    AxisHelper.prototype.drawYAxisBorder = function (axis, parent, rect, lableY, height, index) {\n        var interval = rect.height / axis.axisLabelSize;\n        var path = '';\n        var padding = 20;\n        var axisInterval = axis.interval ? axis.interval : 1;\n        var startX = rect.x;\n        var startY = axis.isInversed ? rect.y + (interval * index * axisInterval) :\n            rect.y + rect.height - (interval * index * axisInterval);\n        var endX;\n        var endY;\n        endX = startX + (!axis.opposedPosition ? -(axis.maxLabelSize.width + padding) : axis.maxLabelSize.width + padding);\n        endY = axis.isInversed ? startY + interval : startY - interval;\n        switch (axis.border.type) {\n            case 'Rectangle':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY;\n                break;\n            case 'WithoutTopBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path = 'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'M' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                endX = startX - (startX - endX) / 2;\n                var endY1 = axis.isInversed ? lableY - height / 2 : lableY + height / 2;\n                var endY2 = axis.isInversed ? lableY + height / 2 : lableY - height / 2;\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY1 + ' ' + 'M' + ' ' +\n                    endX + ' ' + endY2 + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ' +\n                    'L' + ' ' + startX + ' ' + endY;\n                break;\n        }\n        if (axis.border.width > 0 && axis.border.type !== 'WithoutBorder') {\n            this.createAxisBorderElement(axis, path, parent, index);\n        }\n    };\n    /**\n     * To create border element for axis.\n     * @return {void}\n     * @private\n     */\n    AxisHelper.prototype.createAxisBorderElement = function (axis, labelBorder, parent, index) {\n        var canvasTranslate;\n        var id = axis.orientation === 'Horizontal' ? '_XAxis_Label_Border' : '_YAxis_Label_Border';\n        var pathOptions = new PathOption(this.heatMap.element.id + id + index, 'transparent', axis.border.width, axis.border.color, 1, 'none', labelBorder);\n        if (!this.heatMap.enableCanvasRendering) {\n            var borderElement = this.heatMap.renderer.drawPath(pathOptions);\n            parent.appendChild(borderElement);\n        }\n        else {\n            this.heatMap.canvasRenderer.drawPath(pathOptions, canvasTranslate);\n        }\n    };\n    AxisHelper.prototype.drawMultiLevels = function (parent, axis) {\n        var element;\n        if (!this.heatMap.enableCanvasRendering) {\n            element = this.heatMap.renderer.createGroup({ id: this.heatMap.element.id + '_' + axis.orientation + '_MultiLevelLabel' });\n        }\n        axis.orientation === 'Horizontal' ? this.renderXAxisMultiLevelLabels(axis, element, axis.rect) :\n            this.renderYAxisMultiLevelLabels(axis, element, axis.rect);\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(element);\n        }\n    };\n    /**\n     * render x axis multi level labels\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderXAxisMultiLevelLabels = function (axis, parent, rect) {\n        var _this = this;\n        var x = 0;\n        var y;\n        var padding = 10;\n        var startX;\n        var startY;\n        var endX = 0;\n        var tooltip;\n        var start;\n        var end;\n        var labelSize;\n        var anchor;\n        var isInversed = axis.isInversed;\n        var labelElement;\n        var opposedPosition = axis.opposedPosition;\n        var pathRect = '';\n        var gap;\n        var width;\n        var textLength;\n        var position = (isInversed ? axis.rect.width : 0) + axis.rect.x;\n        axis.multiLevelLabels.map(function (multiLevel, level) {\n            labelElement = _this.heatMap.renderer.createGroup({ id: _this.heatMap.element.id + '_XAxisMultiLevelLabel' + level });\n            multiLevel.categories.map(function (categoryLabel, i) {\n                tooltip = false;\n                start = typeof categoryLabel.start === 'number' ? categoryLabel.start : Number(new Date(categoryLabel.start));\n                end = typeof categoryLabel.end === 'number' ? categoryLabel.end : Number(new Date(categoryLabel.end));\n                startX = position + _this.calculateLeftPosition(axis, start, categoryLabel.start, axis.rect);\n                startY = axis.multiLevelPosition[level].y;\n                endX = position + _this.calculateWidth(axis, categoryLabel.end, end, axis.rect);\n                labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                gap = ((categoryLabel.maximumTextWidth === null) ? Math.abs(endX - startX) : categoryLabel.maximumTextWidth) - padding;\n                y = startY + (opposedPosition ? -((axis.xAxisMultiLabelHeight[level] - labelSize.height)) : labelSize.height);\n                width = categoryLabel.maximumTextWidth ? categoryLabel.maximumTextWidth : labelSize.width;\n                x = !isInversed ? startX + padding : startX - gap;\n                if (multiLevel.alignment === 'Center') {\n                    x = ((endX - startX) / 2) + startX;\n                    x -= (labelSize.width > gap ? gap : labelSize.width) / 2;\n                }\n                else if (multiLevel.alignment === 'Far') {\n                    x = !isInversed ? endX - padding : startX - padding;\n                    x -= (labelSize.width > gap ? gap : labelSize.width);\n                }\n                else {\n                    x = !isInversed ? startX + padding : endX + padding;\n                }\n                if (multiLevel.overflow === 'None' && labelSize.width > Math.abs(endX - startX)) {\n                    x = !isInversed ? startX + padding : startX - labelSize.width - padding;\n                    anchor = 'start';\n                }\n                var textBasic = new TextBasic(x, y, anchor, categoryLabel.text, 0, 'translate(0,0)');\n                var options = new TextOption(_this.heatMap.element.id + '_XAxis_MultiLevel' + level + '_Text' + i, textBasic, multiLevel.textStyle, multiLevel.textStyle.color || _this.heatMap.themeStyle.axisLabel);\n                if (multiLevel.overflow === 'Wrap') {\n                    options.text = textWrap(categoryLabel.text, gap, multiLevel.textStyle);\n                    textLength = options.text.length;\n                }\n                else if (multiLevel.overflow === 'Trim') {\n                    options.text = textTrim(gap, categoryLabel.text, multiLevel.textStyle);\n                    textLength = 1;\n                }\n                if (multiLevel.overflow === 'Wrap' && options.text.length > 1) {\n                    _this.drawSvgCanvas.createWrapText(options, multiLevel.textStyle, labelElement);\n                    for (var i_2 = 0; i_2 < options.text.length; i_2++) {\n                        if (options.text[i_2].indexOf('...') !== -1) {\n                            tooltip = true;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    _this.drawSvgCanvas.createText(options, labelElement, options.text);\n                }\n                if (!_this.heatMap.enableCanvasRendering) {\n                    parent.appendChild(labelElement);\n                }\n                if (options.text.indexOf('...') !== -1 || options.text[0].indexOf('...') !== -1 || tooltip) {\n                    _this.heatMap.tooltipCollection.push(new CanvasTooltip(categoryLabel.text, new Rect(x, y - labelSize.height, gap, labelSize.height * textLength)));\n                }\n                if (multiLevel.border.width > 0 && multiLevel.border.type !== 'WithoutBorder') {\n                    pathRect = _this.renderXAxisLabelBorder(level, axis, startX, startY, endX, pathRect, level, labelSize, gap, x);\n                }\n            });\n            if (pathRect !== '') {\n                _this.createBorderElement(level, axis, pathRect, parent);\n                pathRect = '';\n            }\n        });\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n        }\n    };\n    /**\n     * render x axis multi level labels border\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderXAxisLabelBorder = function (labelIndex, axis, startX, startY, endX, path, level, labelSize, gap, x) {\n        var path1;\n        var path2;\n        var endY = startY + (axis.opposedPosition ? -(axis.xAxisMultiLabelHeight[labelIndex]) :\n            axis.xAxisMultiLabelHeight[labelIndex]);\n        switch (axis.multiLevelLabels[level].border.type) {\n            case 'Rectangle':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ';\n                break;\n            case 'WithoutTopBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path += 'M' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                var padding = 3;\n                path1 = axis.isInversed ? (labelSize.width > gap ? gap : labelSize.width) + x + padding : x - padding;\n                path2 = axis.isInversed ? x - padding : (labelSize.width > gap ? gap : labelSize.width) + x + padding;\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + (startY + (endY - startY) / 2) + ' ' +\n                    'L' + ' ' + path1 + ' ' + (startY + (endY - startY) / 2) + ' ' + 'M' + ' ' + path2 + ' ' + (startY +\n                    (endY - startY) / 2) + ' ' + 'L' + ' ' + endX + ' ' + (startY + (endY - startY) / 2) +\n                    ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n        }\n        return path;\n    };\n    /**\n     * render y axis multi level labels\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderYAxisMultiLevelLabels = function (axis, parent, rect) {\n        var _this = this;\n        var x = 0;\n        var y;\n        var padding = 10;\n        var startX;\n        var startY;\n        var startY2;\n        var endY;\n        var start;\n        var end;\n        var labelSize;\n        var anchor;\n        var isInversed = axis.isInversed;\n        var labelElement;\n        var opposedPosition = axis.opposedPosition;\n        var pathRect = '';\n        var gap;\n        var interval = (axis.rect.height / axis.axisLabelSize) / axis.increment;\n        var text;\n        var position = (!isInversed ? axis.rect.height : 0) + axis.rect.y;\n        axis.multiLevelLabels.map(function (multiLevel, level) {\n            startY2 = axis.multiLevelPosition[level].y;\n            labelElement = _this.heatMap.renderer.createGroup({ id: _this.heatMap.element.id + '_YAxisMultiLevelLabel' + level });\n            multiLevel.categories.map(function (categoryLabel, i) {\n                start = typeof categoryLabel.start === 'number' ? categoryLabel.start : Number(new Date(categoryLabel.start));\n                end = typeof categoryLabel.end === 'number' ? categoryLabel.end : Number(new Date(categoryLabel.end));\n                startY = position + _this.calculateLeftPosition(axis, start, categoryLabel.start, axis.rect);\n                startX = axis.multiLevelPosition[level].x;\n                endY = position + _this.calculateWidth(axis, categoryLabel.start, end, axis.rect);\n                labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                gap = ((categoryLabel.maximumTextWidth === null) ? Math.abs(startX) : categoryLabel.maximumTextWidth) - padding;\n                var maxWidth = Math.abs(startX - (startX - axis.multiLevelSize[level].width - 2 * padding)) / 2 -\n                    (labelSize.width / 2);\n                x = (axis.opposedPosition ? startX : startX - axis.multiLevelSize[level].width - 2 * padding) + maxWidth;\n                y = startY + padding;\n                if (multiLevel.overflow !== 'None') {\n                    if (multiLevel.overflow === 'Wrap') {\n                        text = textWrap(categoryLabel.text, gap, multiLevel.textStyle);\n                    }\n                    else {\n                        text = textTrim(gap, categoryLabel.text, multiLevel.textStyle);\n                    }\n                }\n                if (multiLevel.alignment === 'Center') {\n                    y += ((endY - startY) / 2 - (text.length * labelSize.height) / 2);\n                }\n                else if (multiLevel.alignment === 'Far') {\n                    y = isInversed ? endY - labelSize.height / 2 : y - labelSize.height;\n                }\n                else {\n                    y = isInversed ? y + labelSize.height / 2 : endY + labelSize.height;\n                }\n                if (multiLevel.border.width > 0 && multiLevel.border.type !== 'WithoutBorder') {\n                    pathRect = _this.renderYAxisLabelBorder(level, axis, startX, startY, endY, pathRect, level, labelSize, gap, y);\n                }\n                var textBasic = new TextBasic(x, y, 'start', categoryLabel.text, 0, 'translate(0,0)');\n                var options = new TextOption(_this.heatMap.element.id + '_YAxis_MultiLevel' + level + '_Text' + i, textBasic, multiLevel.textStyle, multiLevel.textStyle.color || _this.heatMap.themeStyle.axisLabel);\n                options.text = text;\n                _this.drawSvgCanvas.createText(options, labelElement, options.text);\n                if (options.text.indexOf('...') !== -1) {\n                    _this.heatMap.tooltipCollection.push(new CanvasTooltip(categoryLabel.text, new Rect(x, y - labelSize.height, gap, labelSize.height)));\n                }\n                if (!_this.heatMap.enableCanvasRendering) {\n                    parent.appendChild(labelElement);\n                }\n            });\n            if (pathRect !== '') {\n                _this.createBorderElement(level, axis, pathRect, parent);\n                pathRect = '';\n            }\n        });\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n        }\n    };\n    /**\n     * render x axis multi level labels border\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderYAxisLabelBorder = function (labelIndex, axis, startX, startY, endY, path, level, labelSize, gap, y) {\n        var padding = 20;\n        var path1;\n        var path2;\n        var endX = startX - (axis.opposedPosition ? -(axis.multiLevelSize[labelIndex].width + padding) :\n            (axis.multiLevelSize[labelIndex].width + padding));\n        switch (axis.multiLevelLabels[level].border.type) {\n            case 'Rectangle':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ';\n                break;\n            case 'WithoutTopBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path += 'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'M' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                var padding_2 = 10;\n                path1 = axis.isInversed ? (y - padding_2 - 5) : (y + (labelSize.height) - padding_2);\n                path2 = axis.isInversed ? (y + (labelSize.height) - padding_2) : (y - padding_2 - 5);\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + (startX + (endX - startX) / 2) + ' ' + startY + ' ' +\n                    'L' + ' ' + (startX + (endX - startX) / 2) + ' ' + path1 + ' ' + 'M' + ' ' + (startX + (endX - startX) / 2) +\n                    ' ' + path2 + ' ' + 'L' + ' ' + (startX + (endX - startX) / 2) + ' ' +\n                    endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n        }\n        return path;\n    };\n    /**\n     * create borer element\n     * @return {void}\n     * @private\n     */\n    AxisHelper.prototype.createBorderElement = function (borderIndex, axis, path, parent) {\n        var canvasTranslate;\n        var id = axis.orientation === 'Horizontal' ? 'XAxis' : 'YAxis';\n        var pathOptions = new PathOption(this.heatMap.element.id + '_' + id + '_MultiLevel_Rect_' + borderIndex, 'Transparent', axis.multiLevelLabels[borderIndex].border.width, axis.multiLevelLabels[borderIndex].border.color, 1, '', path);\n        var borderElement = this.heatMap.renderer.drawPath(pathOptions);\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(borderElement);\n        }\n        else {\n            this.heatMap.canvasRenderer.drawPath(pathOptions, canvasTranslate);\n        }\n    };\n    /**\n     * calculate left position of border element\n     * @private\n     */\n    AxisHelper.prototype.calculateLeftPosition = function (axis, start, label, rect) {\n        var value;\n        var interval;\n        if (typeof label === 'number') {\n            if (axis.valueType === 'Numeric' && (axis.minimum || axis.maximum)) {\n                var min = axis.minimum ? axis.minimum : 0;\n                start -= min;\n            }\n            var size = axis.orientation === 'Horizontal' ? rect.width : rect.height;\n            interval = size / (axis.axisLabelSize * axis.increment);\n            value = (axis.isInversed ? -1 : 1) * start * interval;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        else {\n            interval = this.calculateNumberOfDays(start, axis, true, rect);\n            value = axis.isInversed ? -interval : interval;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        return value;\n    };\n    /**\n     * calculate width of border element\n     * @private\n     */\n    AxisHelper.prototype.calculateWidth = function (axis, label, end, rect) {\n        var interval;\n        var value;\n        if (typeof label === 'number') {\n            if (axis.valueType === 'Numeric' && (axis.minimum || axis.maximum)) {\n                var min = axis.minimum ? axis.minimum : 0;\n                end -= min;\n            }\n            var size = axis.orientation === 'Horizontal' ? rect.width : rect.height;\n            interval = size / (axis.axisLabelSize * axis.increment);\n            value = (axis.isInversed ? -1 : 1) * (end + 1) * interval;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        else {\n            interval = this.calculateNumberOfDays(end, axis, false, rect);\n            value = interval;\n            value = axis.isInversed ? -value : value;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        return value;\n    };\n    AxisHelper.prototype.calculateNumberOfDays = function (date, axis, start, rect) {\n        var oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n        var oneMinute = 60 * 1000;\n        var oneHour = 60 * 60 * 1000;\n        var firstDate;\n        var secondDate;\n        var labels = axis.labelValue;\n        var position;\n        var interval = (axis.orientation === 'Horizontal' ? rect.width : rect.height) / axis.axisLabelSize;\n        var givenDate = new Date(Number(date));\n        var days = 0;\n        for (var index = 0; index < axis.axisLabelSize; index++) {\n            firstDate = new Date(Number(labels[index]));\n            secondDate = axis.isInversed ? new Date(Number(labels[index - 1])) : new Date(Number(labels[index + 1]));\n            if (index === (axis.isInversed ? 0 : axis.axisLabelSize - 1)) {\n                secondDate = new Date(Number(labels[index]));\n                if (axis.intervalType === 'Hours') {\n                    secondDate = new Date(Number(secondDate.setHours(secondDate.getHours() + 1)));\n                }\n                else if ((axis.intervalType === 'Minutes')) {\n                    secondDate = new Date(Number(secondDate.setMinutes(secondDate.getMinutes() + 1)));\n                }\n                else if ((axis.intervalType === 'Days')) {\n                    secondDate = new Date(Number(secondDate.setDate(secondDate.getDate() + 1)));\n                }\n                else {\n                    var numberOfDays = axis.intervalType === 'Months' ?\n                        new Date(secondDate.getFullYear(), secondDate.getMonth() + 1, 0).getDate() :\n                        secondDate.getFullYear() % 4 === 0 ? 366 : 365;\n                    secondDate = new Date(Number(secondDate.setDate(secondDate.getDate() + numberOfDays)));\n                }\n            }\n            if (Number(firstDate) <= date && Number(secondDate) >= date) {\n                if (axis.intervalType === 'Minutes' || axis.intervalType === 'Hours') {\n                    var totalMinutes = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / (oneMinute)));\n                    var minutesInHours = Math.abs((firstDate.getTime() - givenDate.getTime()) / (oneMinute));\n                    days = (interval / totalMinutes) * minutesInHours;\n                    index = axis.isInversed ? axis.axisLabelSize - 1 - index : index;\n                    position = index * interval + days;\n                    break;\n                }\n                else {\n                    var numberOfDays = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / (oneDay)));\n                    start ? givenDate.getDate() : givenDate.setDate(givenDate.getDate() + 1);\n                    if (numberOfDays !== 0) {\n                        days = (interval / numberOfDays) * (Math.abs((firstDate.getTime() - givenDate.getTime()) / (oneDay)));\n                    }\n                    index = axis.isInversed ? axis.axisLabelSize - 1 - index : index;\n                    position = index * interval + days;\n                    break;\n                }\n            }\n        }\n        return position;\n    };\n    return AxisHelper;\n}());\nexport { AxisHelper };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, extend, merge, Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Rect, TextBasic, Path, PathAttributes, RectOption, CircleOption, TextOption, CurrentRect, DrawSvgCanvas } from '../utils/helper';\nimport { convertHexToColor, colorNameToHex, formatValue } from '../utils/helper';\nimport { CellColor } from '../utils/colorMapping';\nimport { Border, Font, BubbleTooltipData, BubbleSize } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the CellSettings property in the Heatmap.\n */\nvar CellSettings = /** @class */ (function (_super) {\n    __extends(CellSettings, _super);\n    function CellSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], CellSettings.prototype, \"showLabel\", void 0);\n    __decorate([\n        Property('')\n    ], CellSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(true)\n    ], CellSettings.prototype, \"enableCellHighlighting\", void 0);\n    __decorate([\n        Complex({}, BubbleSize)\n    ], CellSettings.prototype, \"bubbleSize\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], CellSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex(Theme.rectLabelFont, Font)\n    ], CellSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Rect')\n    ], CellSettings.prototype, \"tileType\", void 0);\n    __decorate([\n        Property('Color')\n    ], CellSettings.prototype, \"bubbleType\", void 0);\n    __decorate([\n        Property(false)\n    ], CellSettings.prototype, \"isInversedBubbleSize\", void 0);\n    return CellSettings;\n}(ChildProperty));\nexport { CellSettings };\nvar Series = /** @class */ (function () {\n    function Series(heatMap) {\n        this.heatMap = heatMap;\n        this.drawSvgCanvas = new DrawSvgCanvas(this.heatMap);\n        this.cellColor = new CellColor(this.heatMap);\n    }\n    /**\n     * To render rect series.\n     * @return {void}\n     * @private\n     */\n    // tslint:disable-next-line:max-func-body-length\n    Series.prototype.renderRectSeries = function () {\n        this.createSeriesGroup();\n        var heatMap = this.heatMap;\n        var isValueInRange = false;\n        heatMap.xLength = heatMap.axisCollections[0].axisLabelSize;\n        heatMap.yLength = heatMap.axisCollections[1].axisLabelSize; // Series Part\n        var tempX = Math.round(heatMap.initialClipRect.x * 100) / 100;\n        var tempY = Math.round(heatMap.initialClipRect.y * 100) / 100;\n        var dataXIndex = 0;\n        var dataYIndex = 0;\n        var cellSetting = heatMap.cellSettings;\n        var tempWidth = Math.round(((heatMap.initialClipRect.width -\n            (cellSetting.border.width / 2)) / heatMap.xLength) * 100) / 100;\n        var tempHeight = Math.round(((heatMap.initialClipRect.height -\n            (cellSetting.border.width / 2)) / heatMap.yLength) * 100) / 100;\n        var tempVal = 0;\n        var themeStyle = heatMap.themeStyle;\n        var tempBorder;\n        var tempRectPosition = [];\n        var circleRadius;\n        tempBorder = cellSetting.border;\n        var borderColor;\n        var displayText;\n        this.rectPositionCollection = [];\n        this.color = '';\n        this.bubbleColorValue = [];\n        if (heatMap.yAxis.opposedPosition) {\n            tempX = Math.round((heatMap.initialClipRect.x + (parseFloat(tempBorder.width.toString()) / 2)) * 100) / 100;\n        }\n        circleRadius = this.getBubbleRadius(tempWidth, tempHeight);\n        for (var x = 0; x < (heatMap.xLength * heatMap.yLength); x++) {\n            if (heatMap.paletteSettings.colorGradientMode === 'Column' && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.heatMap.dataSourceMinValue = this.heatMap.dataMin[dataYIndex];\n                this.heatMap.dataSourceMaxValue = this.heatMap.dataMax[dataYIndex];\n            }\n            else if (heatMap.paletteSettings.colorGradientMode === 'Row' && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.heatMap.dataSourceMinValue = this.heatMap.dataMin[dataXIndex];\n                this.heatMap.dataSourceMaxValue = this.heatMap.dataMax[dataXIndex];\n            }\n            this.setTextAndColor(dataXIndex, dataYIndex);\n            var rectPosition = new CurrentRect(0, 0, 0, 0, 0, '', 0, 0, 0, 0, true, '', '', true);\n            borderColor = tempBorder.color;\n            if ((heatMap.renderingMode === 'Canvas' && parseFloat(tempBorder.width.toString()) === 0) || (!borderColor &&\n                cellSetting.tileType === 'Bubble' && cellSetting.bubbleType === 'Sector')) {\n                borderColor = this.color;\n            }\n            if (this.heatMap.bubbleSizeWithColor) {\n                this.updateRectDetails(rectPosition, tempX, tempY, tempWidth, tempHeight, extend('', this.bubbleColorValue, null, true), x, dataYIndex, dataXIndex);\n            }\n            else {\n                this.updateRectDetails(rectPosition, tempX, tempY, tempWidth, tempHeight, this.text, x, dataYIndex, dataXIndex);\n            }\n            if (cellSetting.showLabel) {\n                displayText = this.getFormatedText(this.text, cellSetting.format);\n                rectPosition.displayText = displayText;\n                if (!isNullOrUndefined(this.heatMap.cellRender)) {\n                    displayText = this.cellRendering(rectPosition, displayText);\n                }\n            }\n            if (cellSetting.tileType === 'Rect') { // Rectangle/Tile Series\n                this.renderTileCell(rectPosition, tempBorder, x, this.color, borderColor);\n                this.updateLabelVisibleStatus(tempWidth, tempHeight, displayText);\n            }\n            else {\n                if (cellSetting.bubbleType === 'Color') { // Bubble by same size and different color Series\n                    this.renderBubbleCell(rectPosition, tempBorder, x, this.color, borderColor, circleRadius);\n                    this.updateLabelVisibleStatus((circleRadius * 2) - 12, (circleRadius * 2) - 6, displayText); // 6, 12 - circle padding\n                }\n                else if (!isNullOrUndefined(this.text) && (cellSetting.bubbleType === 'Size' || cellSetting.bubbleType === 'SizeAndColor')\n                    && this.text.toString() !== '') { // Bubble by same color and different size Series\n                    if (this.heatMap.paletteSettings.colorGradientMode !== 'Table' && this.heatMap.paletteSettings.type === 'Gradient') {\n                        this.heatMap.minColorValue = this.heatMap.dataSourceMinValue;\n                        this.heatMap.maxColorValue = this.heatMap.dataSourceMaxValue;\n                    }\n                    var tempCircleRadius = this.getRadiusBypercentage(parseFloat(this.text.toString()), heatMap.dataSourceMinValue, heatMap.dataSourceMaxValue, circleRadius);\n                    this.renderBubbleCell(rectPosition, tempBorder, x, this.color, borderColor, tempCircleRadius);\n                    this.updateLabelVisibleStatus((tempCircleRadius * 2) - 12, (tempCircleRadius * 2) - 6, displayText);\n                }\n                else if (cellSetting.bubbleType === 'Sector' && !isNullOrUndefined(this.text) && this.text.toString() !== '') {\n                    this.renderSectorCell(rectPosition, tempBorder, x.toString(), this.color, borderColor, circleRadius, this.text);\n                    this.checkLabelXDisplay = false;\n                    this.checkLabelYDisplay = false;\n                }\n            }\n            tempRectPosition.push(rectPosition);\n            if (heatMap.rangeSelection && heatMap.paletteSettings.type === 'Fixed') {\n                isValueInRange = this.isCellValueInRange(dataXIndex, dataYIndex);\n                rectPosition.visible = isValueInRange;\n            }\n            if (cellSetting.showLabel && this.checkLabelYDisplay && this.checkLabelXDisplay) {\n                var themeCellTextStyle = cellSetting.textStyle;\n                var options = new TextOption(heatMap.element.id + '_HeatMapRectLabels_' + x, new TextBasic(Math.round((tempX + tempWidth / 2) * 100) / 100, Math.round((tempY + tempHeight / 2) * 100) / 100, 'middle', displayText, null, null, 'middle'), themeCellTextStyle, themeCellTextStyle.color || this.getSaturatedColor(this.color));\n                rectPosition.textId = options.id;\n                if (heatMap.rangeSelection && heatMap.paletteSettings.type === 'Fixed') {\n                    options.fill = isValueInRange ? options.fill : this.heatMap.themeStyle.toggledColor;\n                }\n                if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                    options.dy = this.heatMap.cellSettings.tileType === 'Bubble' ? '0.5ex' : '1ex';\n                }\n                this.drawSvgCanvas.createText(options, this.containerTextObject, displayText);\n            }\n            if (tempVal === heatMap.xLength - 1) {\n                tempY = Math.round((tempY + tempHeight) * 100) / 100;\n                tempVal = 0;\n                dataYIndex = 0;\n                if (heatMap.yAxis.opposedPosition) {\n                    tempX = Math.round((heatMap.initialClipRect.x + (parseFloat(tempBorder.width.toString()) / 2)) * 100) / 100;\n                }\n                else {\n                    tempX = Math.round(heatMap.initialClipRect.x * 100) / 100;\n                }\n                this.rectPositionCollection.push(tempRectPosition);\n                tempRectPosition = [];\n                dataXIndex++;\n            }\n            else {\n                tempX = Math.round((tempX + tempWidth) * 100) / 100;\n                tempVal++;\n                dataYIndex++;\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            heatMap.svgObject.appendChild(this.containerRectObject);\n            if (cellSetting.showLabel && !(cellSetting.tileType === 'Bubble' && cellSetting.bubbleType === 'Sector')) {\n                heatMap.svgObject.appendChild(this.containerTextObject);\n            }\n        }\n    };\n    /**\n     * To toggle the cell text color based on legend selection.\n     */\n    Series.prototype.isCellValueInRange = function (dataXIndex, dataYIndex) {\n        var isValueInRange = false;\n        for (var i = 0; i < this.heatMap.toggleValue.length; i++) {\n            var minValue = void 0;\n            var maxValue = void 0;\n            minValue = (i === 0) ? this.heatMap.dataSourceMinValue : this.heatMap.toggleValue[i].value;\n            if (this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'SizeAndColor') {\n                maxValue = (i === this.heatMap.toggleValue.length - 1) ? this.heatMap.maxColorValue :\n                    this.heatMap.toggleValue[i + 1].value - 0.01;\n            }\n            else {\n                maxValue = (i === this.heatMap.toggleValue.length - 1) ? this.heatMap.dataSourceMaxValue :\n                    this.heatMap.toggleValue[i + 1].value - 0.01;\n            }\n            // tslint:disable-next-line:no-any\n            var clonedDataSource = this.heatMap.clonedDataSource;\n            var bubbleText = !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][1]) &&\n                clonedDataSource[dataXIndex][dataYIndex][1].toString() !== '' ? clonedDataSource[dataXIndex][dataYIndex][1] : '';\n            var text = parseFloat(this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'SizeAndColor' ?\n                bubbleText.toString() : this.text.toString());\n            if (isNaN(text)) {\n                isValueInRange = true;\n            }\n            else if (!isNaN(text) && text >= minValue && text <= maxValue) {\n                if (!this.heatMap.toggleValue[i].visible) {\n                    isValueInRange = false;\n                    break;\n                }\n                else {\n                    isValueInRange = true;\n                    break;\n                }\n            }\n        }\n        return isValueInRange;\n    };\n    /**\n     * To customize the cell.\n     * @return {void}\n     * @private\n     */\n    Series.prototype.cellRendering = function (rectPosition, text) {\n        var xAxis = this.heatMap.axisCollections[0];\n        var yAxis = this.heatMap.axisCollections[1];\n        var xLabels = xAxis.tooltipLabels;\n        var yLabels = yAxis.tooltipLabels.slice().reverse();\n        var yLabelValue = yAxis.labelValue.slice().reverse();\n        var argData = {\n            heatmap: (this.heatMap.isBlazor ? null : this.heatMap),\n            cancel: false,\n            name: 'cellRender',\n            value: rectPosition.value,\n            xLabel: xLabels[rectPosition.xIndex].toString(),\n            yLabel: yLabels[rectPosition.yIndex].toString(),\n            displayText: text,\n            xValue: xAxis.labelValue[rectPosition.xIndex],\n            yValue: yLabelValue[rectPosition.yIndex]\n        };\n        this.heatMap.trigger('cellRender', argData);\n        return argData.displayText;\n    };\n    /**\n     * To set color and text details.\n     * @private\n     */\n    Series.prototype.setTextAndColor = function (dataXIndex, dataYIndex) {\n        var cellSetting = this.heatMap.cellSettings;\n        this.bubbleColorValue = [];\n        var adaptData = this.heatMap.dataSourceSettings;\n        // tslint:disable-next-line:no-any\n        var clonedDataSource = this.heatMap.clonedDataSource;\n        if (this.heatMap.bubbleSizeWithColor) {\n            this.text = !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][0]) &&\n                clonedDataSource[dataXIndex][dataYIndex][0].toString() !== '' ? clonedDataSource[dataXIndex][dataYIndex][0] : '';\n            this.color = !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][1]) &&\n                clonedDataSource[dataXIndex][dataYIndex][1].toString() !== '' ?\n                this.cellColor.getColorByValue(clonedDataSource[dataXIndex][dataYIndex][1])\n                : this.heatMap.isColorValueExist ? this.heatMap.emptyPointColor : this.cellColor.getColorByValue(this.text);\n            var tempBubbleCollection = new BubbleTooltipData(adaptData.isJsonData && adaptData.adaptorType === 'Cell' ? adaptData.bubbleDataMapping.size : null, this.text, 'Size');\n            this.bubbleColorValue.push(tempBubbleCollection);\n            this.bubbleColorValue.push({\n                mappingName: adaptData.isJsonData && adaptData.adaptorType === 'Cell' ?\n                    adaptData.bubbleDataMapping.color : null,\n                bubbleData: !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][1]) &&\n                    clonedDataSource[dataXIndex][dataYIndex][1].toString() !== '' ? clonedDataSource[dataXIndex][dataYIndex][1] : '',\n                valueType: 'Color'\n            });\n        }\n        else {\n            this.text = clonedDataSource[dataXIndex][dataYIndex];\n            this.color = this.cellColor.getColorByValue(this.text);\n        }\n    };\n    /**\n     * To update rect details.\n     * @private\n     */\n    Series.prototype.createSeriesGroup = function () {\n        if (!this.heatMap.enableCanvasRendering) {\n            this.containerRectObject = this.heatMap.renderer.createGroup({\n                id: this.heatMap.element.id + '_Container_RectGroup'\n            });\n            if (this.heatMap.cellSettings.showLabel &&\n                !(this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'Sector')) {\n                this.containerTextObject = this.heatMap.renderer.createGroup({ id: this.heatMap.element.id + '_Container_TextGroup', transform: 'translate( 0, 0)' });\n            }\n        }\n    };\n    /**\n     * To update rect details.\n     * @private\n     */\n    Series.prototype.updateRectDetails = function (rectPosition, tempX, tempY, tempWidth, tempHeight, text, x, dataXIndex, dataYIndex) {\n        rectPosition.x = tempX;\n        rectPosition.y = tempY;\n        rectPosition.width = tempWidth;\n        rectPosition.height = tempHeight;\n        rectPosition.value = text;\n        rectPosition.id = this.heatMap.element.id + '_HeatMapRect_' + x;\n        rectPosition.xIndex = dataXIndex;\n        rectPosition.yIndex = dataYIndex;\n    };\n    /**\n     * To Render Tile Cell.\n     * @private\n     */\n    Series.prototype.renderTileCell = function (rectPosition, tempBorder, x, color, borderColor) {\n        var rect = new RectOption(this.heatMap.element.id + '_HeatMapRect_' + x, color, tempBorder, 1, new Rect(rectPosition.x, rectPosition.y, rectPosition.width, rectPosition.height), borderColor || this.heatMap.themeStyle.cellBorder, tempBorder.radius, tempBorder.radius);\n        this.drawSvgCanvas.drawRectangle(rect, this.containerRectObject, true);\n    };\n    /**\n     * To get bubble radius.\n     * @private\n     */\n    Series.prototype.getBubbleRadius = function (width, height) {\n        var radius = (width / 2) - 2;\n        if (height / 2 < width / 2) {\n            radius = (height / 2) - 2;\n        }\n        return radius < 0 ? 0 : radius;\n    };\n    /**\n     * To Render Bubble Cell.\n     * @private\n     */\n    Series.prototype.renderSectorCell = function (bubblePosition, tempBorder, x, color, borderColor, circleRadius, text) {\n        var curve;\n        var startAngle;\n        var endAngle;\n        var cX;\n        var cY;\n        var X1;\n        var Y1;\n        var tempcX;\n        var tempcY;\n        var pathBorderWidth;\n        var centerX = Math.round((bubblePosition.x + (bubblePosition.width / 2)) * 100) / 100;\n        var centerY = Math.round((bubblePosition.y + (bubblePosition.height / 2)) * 100) / 100;\n        var tempColor = color;\n        var sectorContibution = this.getRadiusBypercentage(text, this.heatMap.dataSourceMinValue, this.heatMap.dataSourceMaxValue, 360); // Circle total angle.\n        for (var y = 0; y < 2; y++) {\n            pathBorderWidth = parseFloat(tempBorder.width.toString());\n            if (y === 0) {\n                curve = sectorContibution >= 180 ? 1 : 0;\n                startAngle = -90;\n                if (sectorContibution === 0) {\n                    endAngle = 270; // (360 - 90) for zero position adjustment.\n                }\n                else {\n                    endAngle = (sectorContibution - 90);\n                }\n                cX = Math.round((centerX + circleRadius * Math.cos((sectorContibution - 90) * (Math.PI / 180))) * 100) / 100;\n                cY = Math.round((centerY + circleRadius * Math.sin((sectorContibution - 90) * (Math.PI / 180))) * 100) / 100;\n                X1 = Math.round(centerX * 100) / 100;\n                Y1 = Math.round((centerY - circleRadius) * 100) / 100;\n                if (sectorContibution === 0) {\n                    tempColor = this.heatMap.emptyPointColor;\n                }\n            }\n            else {\n                curve = sectorContibution >= 180 ? 0 : 1;\n                startAngle = endAngle;\n                endAngle = 270; // (360 - 90) for zero position adjustment.\n                tempColor = this.heatMap.emptyPointColor;\n                x = x + '_Unfilled';\n                tempcX = cX;\n                tempcY = cY;\n                cX = X1;\n                cY = Y1;\n                X1 = tempcX;\n                Y1 = tempcY;\n                if (sectorContibution === 0) {\n                    pathBorderWidth = 1;\n                    borderColor = color;\n                }\n            }\n            var path = new Path('', false, centerX, centerY, X1, Y1, cX, cY, startAngle, endAngle, circleRadius, true);\n            var sector = new PathAttributes(this.heatMap.element.id + '_HeatMapRect_' + x, path, tempColor, tempBorder, pathBorderWidth, 1, borderColor);\n            this.calculateShapes(sector, path, sectorContibution, curve);\n            this.drawSvgCanvas.drawPath(sector, path, this.containerRectObject);\n            if (sectorContibution === 360) {\n                break;\n            }\n        }\n    };\n    /**\n     * To Render sector Cell.\n     * @private\n     */\n    Series.prototype.calculateShapes = function (options, path, sectorContibution, curve) {\n        var pathString;\n        var clockWise;\n        switch (sectorContibution) {\n            case 360:\n            case 0:\n                if (sectorContibution === 0 && path.start === path.end) {\n                    pathString = 'M' + ' ' + options.x + ' ' + options.y + ' ' + 'L' + ' ' + path.x + ' ' + (path.y - path.radius);\n                }\n                else {\n                    pathString = !this.heatMap.enableCanvasRendering ? 'M' + ' ' + options.x + ' ' + options.y + ' ' : '';\n                    pathString = pathString + 'm' + ' ' + (-path.radius) + ' ' + '0' + ' ' +\n                        'a' + ' ' + path.radius + ' ' + path.radius + ' ' + '0' + ' ' + '1' + ' ' + '0' +\n                        ' ' + (path.radius * 2) + ' ' + '0' + ' ' + 'a' + ' ' + path.radius +\n                        ' ' + path.radius + ' ' + '0' + ' ' + '1' + ' ' + '0' +\n                        ' ' + (-(path.radius * 2)) + ' ' + '0' + ' ';\n                }\n                merge(options, { 'd': pathString });\n                break;\n            default:\n                pathString = 'M' + ' ' + options.x + ' ' + options.y + ' ' + 'L' + ' ' + path.x1 + ' ' + path.y1 + ' ' +\n                    'A' + ' ' + path.radius + ' ' + path.radius + ' ' + '0' + ' ' + curve + ' ' + '1' + ' ' +\n                    path.cx + ' ' + path.cy + ' ' + 'Z';\n                merge(options, { 'd': pathString });\n                break;\n        }\n    };\n    /**\n     * To Render Bubble Cell.\n     * @private\n     */\n    Series.prototype.renderBubbleCell = function (bubblePosition, tempBorder, x, color, borderColor, circleRadius) {\n        var circle = new CircleOption(this.heatMap.element.id + '_HeatMapRect_' + x, color, tempBorder, 1, borderColor || this.heatMap.themeStyle.cellBorder, Math.round((bubblePosition.x + (bubblePosition.width / 2)) * 100) / 100, Math.round((bubblePosition.y + (bubblePosition.height / 2)) * 100) / 100, circleRadius);\n        this.drawSvgCanvas.drawCircle(circle, this.containerRectObject);\n    };\n    /**\n     * To find whether the X,Y Label need to display or not.\n     * @private\n     */\n    Series.prototype.updateLabelVisibleStatus = function (tempWidth, tempHeight, displayText) {\n        if (this.heatMap.cellSettings.showLabel) {\n            this.checkLabelYDisplay = tempHeight > parseInt(this.heatMap.cellSettings.textStyle.size, 10) ? true : false;\n            this.checkLabelXDisplay = tempWidth > (displayText.length *\n                (parseInt(this.heatMap.cellSettings.textStyle.size, 10) / 2)) ? true : false;\n        }\n    };\n    /**\n     * To find percentage value.\n     * @private\n     */\n    Series.prototype.getRadiusBypercentage = function (text, min, max, radius) {\n        var minimum = parseInt(this.heatMap.cellSettings.bubbleSize.minimum, 10);\n        var maximum = parseInt(this.heatMap.cellSettings.bubbleSize.maximum, 10);\n        if (minimum < 0 || minimum > 100 || isNaN(minimum)) {\n            minimum = 0;\n        }\n        if (maximum < 0 || maximum > 100 || isNaN(maximum)) {\n            maximum = 100;\n        }\n        var valueInPrecentage = ((text - min) /\n            (max - min)) * 100;\n        valueInPrecentage = isNaN(valueInPrecentage) ? 100 : valueInPrecentage;\n        if ((this.heatMap.bubbleSizeWithColor ||\n            (this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'Size'))) {\n            if (this.heatMap.cellSettings.isInversedBubbleSize) {\n                valueInPrecentage = 100 - valueInPrecentage;\n            }\n            valueInPrecentage = ((valueInPrecentage * (maximum - minimum)) / 100) + minimum;\n        }\n        radius = radius * (valueInPrecentage / 100);\n        return (Math.round(radius * 100) / 100) < 0 ? 0 : (Math.round(radius * 100) / 100);\n    };\n    /**\n     * To find saturated color for datalabel.\n     * @return {string}\n     * @private\n     */\n    Series.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.R * 299 + rgbValue.G * 587 + rgbValue.B * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    /**\n     * To highlight the mouse hovered rect cell.\n     * @return {void}\n     * @private\n     */\n    Series.prototype.highlightSvgRect = function (tempID) {\n        if (tempID.indexOf('Celltooltip') === -1) {\n            if (tempID.indexOf('_HeatMapRect') !== -1) {\n                if (tempID.indexOf('_HeatMapRectLabels_') !== -1) {\n                    var tempIndex = tempID.indexOf('_HeatMapRectLabels_') + 19;\n                    tempID = this.heatMap.element.id + '_HeatMapRect_' + tempID.slice(tempIndex);\n                }\n                var element = document.getElementById(tempID);\n                if (this.heatMap.tempRectHoverClass !== tempID) {\n                    if (this.heatMap.cellSettings.enableCellHighlighting) {\n                        var oldElement = document.getElementById(this.heatMap.tempRectHoverClass);\n                        if (oldElement && !this.heatMap.rectSelected) {\n                            oldElement.setAttribute('opacity', '1');\n                        }\n                        if (element && !this.heatMap.rectSelected) {\n                            element.setAttribute('opacity', '0.65');\n                        }\n                    }\n                    this.heatMap.tempRectHoverClass = tempID;\n                }\n            }\n            else {\n                if (this.heatMap.cellSettings.enableCellHighlighting) {\n                    var oldElement = document.getElementById(this.heatMap.tempRectHoverClass);\n                    if (oldElement && !this.heatMap.rectSelected) {\n                        oldElement.setAttribute('opacity', '1');\n                        this.heatMap.tempRectHoverClass = '';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To get the value depends to format.\n     * @return {string}\n     * @private\n     */\n    Series.prototype.getFormatedText = function (val, getFormat) {\n        var format = getFormat;\n        var isCustom = format.match('{value}') !== null;\n        this.format = this.heatMap.intl.getNumberFormat({\n            format: isCustom ? '' : format\n        });\n        var value = '';\n        if (val.toString() !== '') {\n            value = formatValue(isCustom, format, val, this.format);\n        }\n        return value;\n    };\n    /**\n     * To get mouse hovered cell details.\n     * @return {CurrentRect}\n     * @private\n     */\n    Series.prototype.getCurrentRect = function (x, y) {\n        var currentRect;\n        var firstRectDetails = [];\n        firstRectDetails.push(this.heatMap.heatMapSeries.rectPositionCollection[0][0]);\n        var rectX = Math.ceil((x - firstRectDetails[0].x) / firstRectDetails[0].width) <\n            this.heatMap.axisCollections[0].axisLabelSize ?\n            Math.ceil((x - firstRectDetails[0].x) / firstRectDetails[0].width) :\n            this.heatMap.axisCollections[0].axisLabelSize;\n        var rectY = Math.floor(((y - firstRectDetails[0].y) / firstRectDetails[0].height)) <\n            this.heatMap.axisCollections[1].axisLabelSize ?\n            Math.floor(((y - firstRectDetails[0].y) / firstRectDetails[0].height)) :\n            this.heatMap.axisCollections[1].axisLabelSize - 1;\n        rectX = rectX === 0 ? 1 : rectX;\n        currentRect = this.heatMap.heatMapSeries.rectPositionCollection[rectY][rectX - 1];\n        this.hoverXAxisLabel = this.heatMap.axisCollections[0].tooltipLabels[rectX - 1];\n        this.hoverXAxisValue = this.heatMap.axisCollections[0].labelValue[rectX - 1];\n        this.hoverYAxisLabel = this.heatMap.axisCollections[1].tooltipLabels[(this.heatMap.axisCollections[1].tooltipLabels.length - 1) - rectY];\n        this.hoverYAxisValue = this.heatMap.axisCollections[1].labelValue[(this.heatMap.axisCollections[1].labelValue.length - 1) - rectY];\n        return currentRect;\n    };\n    return Series;\n}());\nexport { Series };\n","/**\n * HeatMap tool tip file\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { createElement, Property, Complex, ChildProperty, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Tooltip as tool } from '@syncfusion/ej2-svg-base';\nimport { TooltipBorder, Font, } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the color property in Heatmap.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({}, TooltipBorder)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex(Theme.tooltipFont, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n *\n * The `Tooltip` module is used to render the tooltip for heatmap series.\n */\nvar Tooltip = /** @class */ (function () {\n    function Tooltip(heatMap) {\n        /* private */\n        this.isFirst = true;\n        /* private */\n        this.isFadeout = false;\n        this.heatMap = heatMap;\n    }\n    /**\n     * Get module name\n     */\n    Tooltip.prototype.getModuleName = function () {\n        return 'Tooltip';\n    };\n    /**\n     * To show/hide Tooltip.\n     * @private\n     */\n    Tooltip.prototype.showHideTooltip = function (isShow, isFadeout) {\n        var ele = document.getElementById(this.heatMap.element.id + 'Celltooltipcontainer');\n        if (!isShow) {\n            if (ele && ele.style.visibility !== 'hidden') {\n                if (this.tooltipObject && isFadeout) {\n                    this.tooltipObject.fadeOut();\n                }\n                else {\n                    if (this.tooltipObject && this.tooltipObject.element) {\n                        var tooltipElement = this.tooltipObject.element.firstChild;\n                        tooltipElement.setAttribute('opacity', '0');\n                    }\n                }\n                ele.style.visibility = 'hidden';\n            }\n            this.isFadeout = true;\n        }\n        else {\n            ele.style.visibility = 'visible';\n        }\n    };\n    /**\n     * To destroy the Tooltip.\n     * @return {void}\n     * @private\n     */\n    Tooltip.prototype.destroy = function (heatMap) {\n        /**\n         * Destroy method performed here\n         */\n    };\n    ;\n    /**\n     * To add Tooltip to the rect cell.\n     * @return {void}\n     * @private\n     */\n    Tooltip.prototype.createTooltip = function (currentRect, x, y, tempTooltipText) {\n        var offset = null;\n        if (this.heatMap.cellSettings.showLabel && this.heatMap.heatMapSeries.checkLabelXDisplay &&\n            this.heatMap.heatMapSeries.checkLabelYDisplay) {\n            offset = parseInt(this.heatMap.cellSettings.textStyle.size, 10) / 2;\n        }\n        this.tooltipObject = new tool({\n            enableAnimation: false,\n            offset: offset,\n            location: { x: x, y: y },\n            availableSize: this.heatMap.availableSize,\n            data: {\n                xValue: this.heatMap.heatMapSeries.hoverXAxisValue,\n                yValue: this.heatMap.heatMapSeries.hoverYAxisValue,\n                value: currentRect.value,\n                xLabel: this.heatMap.heatMapSeries.hoverXAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverXAxisLabel.toString() : null,\n                yLabel: this.heatMap.heatMapSeries.hoverYAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverYAxisLabel.toString() : null,\n            },\n            theme: this.heatMap.theme,\n            content: tempTooltipText,\n            fill: this.heatMap.tooltipSettings.fill,\n            template: this.heatMap.tooltipSettings.template === '' ? null : this.heatMap.tooltipSettings.template,\n            border: {\n                width: this.heatMap.tooltipSettings.border.width,\n                color: this.heatMap.tooltipSettings.border.color\n            },\n            textStyle: {\n                size: this.heatMap.tooltipSettings.textStyle.size,\n                fontWeight: this.heatMap.tooltipSettings.textStyle.fontWeight.toLowerCase(),\n                color: this.heatMap.tooltipSettings.textStyle.color,\n                fontStyle: this.heatMap.tooltipSettings.textStyle.fontStyle.toLowerCase(),\n                fontFamily: this.heatMap.tooltipSettings.textStyle.fontFamily\n            },\n            areaBounds: {\n                height: this.heatMap.initialClipRect.height + this.heatMap.initialClipRect.y,\n                width: this.heatMap.initialClipRect.width, x: this.heatMap.initialClipRect.x\n            },\n        }, '#' + this.heatMap.element.id + 'Celltooltipcontainer');\n    };\n    /**\n     * To create div container for tooltip.\n     * @return {void}\n     * @private\n     */\n    Tooltip.prototype.createTooltipDiv = function (heatMap) {\n        var position = 'absolute';\n        var top = heatMap.enableCanvasRendering && heatMap.allowSelection ? heatMap.availableSize.height : 0;\n        var element2 = createElement('div', {\n            id: this.heatMap.element.id + 'Celltooltipcontainer',\n            styles: 'position:' + position + '; z-index: 3;top:-' + top + 'px'\n        });\n        this.heatMap.element.appendChild(createElement('div', {\n            id: this.heatMap.element.id + 'Celltooltipparent',\n            styles: 'position:relative'\n        })\n            .appendChild(element2));\n    };\n    /**\n     * To get default tooltip content.\n     * @private\n     */\n    Tooltip.prototype.getTooltipContent = function (currentRect, hetmapSeries) {\n        var value;\n        var content;\n        var heatMap = this.heatMap;\n        var adaptData = this.heatMap.dataSourceSettings;\n        if (heatMap.bubbleSizeWithColor) {\n            var xAxis = heatMap.xAxis.title && heatMap.xAxis.title.text !== '' ? heatMap.xAxis.title.text : 'X-Axis';\n            var yAxis = heatMap.yAxis.title && heatMap.yAxis.title.text !== '' ? heatMap.yAxis.title.text : 'Y-Axis';\n            var value1 = adaptData.isJsonData && adaptData.adaptorType === 'Cell' ?\n                adaptData.bubbleDataMapping.size : 'Value 1';\n            var value2 = adaptData.isJsonData && adaptData.adaptorType === 'Cell' ?\n                adaptData.bubbleDataMapping.color : 'Value 2';\n            value = hetmapSeries.getFormatedText(currentRect.value[0].bubbleData, this.heatMap.cellSettings.format);\n            content = [xAxis + ' : ' + hetmapSeries.hoverXAxisLabel + '<br/>'\n                    + yAxis + ' : ' + hetmapSeries.hoverYAxisLabel + '<br/>'\n                    + value1 + ' : ' + value + '<br/>'\n                    + value2 + ' : '\n                    + hetmapSeries.getFormatedText(currentRect.value[1].bubbleData, this.heatMap.cellSettings.format)];\n        }\n        else {\n            value = currentRect.value;\n            content = [hetmapSeries.hoverXAxisLabel + ' | ' + hetmapSeries.hoverYAxisLabel + ' : ' +\n                    hetmapSeries.getFormatedText(value, this.heatMap.cellSettings.format)];\n        }\n        return content;\n    };\n    /**\n     * To render tooltip.\n     * @private\n     */\n    Tooltip.prototype.renderTooltip = function (currentRect) {\n        var _this = this;\n        var hetmapSeries = this.heatMap.heatMapSeries;\n        var tempTooltipText = [''];\n        var showTooltip = this.heatMap.bubbleSizeWithColor ?\n            !isNullOrUndefined(currentRect.value) && !isNullOrUndefined(currentRect.value[0].bubbleData)\n                && currentRect.value[0].bubbleData.toString() !== '' ? true : false\n            : isNullOrUndefined(currentRect.value) || (!isNullOrUndefined(currentRect.value) &&\n                currentRect.value.toString() === '') ? false : true;\n        if (!showTooltip) {\n            this.showHideTooltip(false, false);\n            if (!currentRect.visible) {\n                this.showHideTooltip(false, false);\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.heatMap.tooltipRender)) {\n                // this.tooltipObject.header = '';\n                // this.tooltipObject.content = this.getTemplateText(\n                //     currentRect, this.heatMap.tooltipTemplate, hetmapSeries.hoverXAxisLabel,\n                //     hetmapSeries.hoverYAxisLabel);\n                var content = this.getTooltipContent(currentRect, hetmapSeries);\n                var argData = {\n                    heatmap: (this.heatMap.isBlazor ? null : this.heatMap),\n                    cancel: false,\n                    name: 'tooltipRender',\n                    value: currentRect.value,\n                    xValue: this.heatMap.heatMapSeries.hoverXAxisValue,\n                    yValue: this.heatMap.heatMapSeries.hoverYAxisValue,\n                    xLabel: this.heatMap.heatMapSeries.hoverXAxisLabel ?\n                        this.heatMap.heatMapSeries.hoverXAxisLabel.toString() : null,\n                    yLabel: this.heatMap.heatMapSeries.hoverYAxisLabel ?\n                        this.heatMap.heatMapSeries.hoverYAxisLabel.toString() : null,\n                    content: content\n                };\n                this.heatMap.trigger('tooltipRender', argData, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        tempTooltipText = observedArgs.content;\n                        _this.tooltipCallback(currentRect, tempTooltipText);\n                    }\n                    else {\n                        if (_this.tooltipObject) {\n                            _this.showHideTooltip(false);\n                        }\n                    }\n                });\n            }\n            else {\n                //  this.tooltipObject.header = hetmapSeries.hoverYAxisLabel.toString();\n                tempTooltipText = this.getTooltipContent(currentRect, hetmapSeries);\n                this.tooltipCallback(currentRect, tempTooltipText);\n            }\n        }\n    };\n    /**\n     * To render tooltip.\n     */\n    Tooltip.prototype.tooltipCallback = function (currentRect, tempTooltipText) {\n        if (!this.tooltipObject) {\n            this.createTooltip(currentRect, currentRect.x + (currentRect.width / 2), currentRect.y + (currentRect.height / 2), tempTooltipText);\n        }\n        else {\n            this.tooltipObject.content = tempTooltipText;\n            this.tooltipObject.data = {\n                xValue: this.heatMap.heatMapSeries.hoverXAxisValue,\n                yValue: this.heatMap.heatMapSeries.hoverYAxisValue,\n                xLabel: this.heatMap.heatMapSeries.hoverXAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverXAxisLabel.toString() : null,\n                yLabel: this.heatMap.heatMapSeries.hoverYAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverYAxisLabel.toString() : null,\n                value: currentRect.value,\n            };\n        }\n        this.showHideTooltip(true);\n        this.tooltipObject.enableAnimation = (this.isFirst || this.isFadeout) ? false : true;\n        this.isFirst = (this.isFirst) ? false : this.isFirst;\n        this.isFadeout = (this.isFadeout) ? false : this.isFadeout;\n        this.tooltipObject.location.x = currentRect.x + (currentRect.width / 2);\n        this.tooltipObject.location.y = currentRect.y + (currentRect.height / 2);\n        if (!currentRect.visible) {\n            this.showHideTooltip(false, false);\n        }\n    };\n    return Tooltip;\n}());\nexport { Tooltip };\n","import { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nvar TwoDimensional = /** @class */ (function () {\n    function TwoDimensional(heatMap) {\n        this.heatMap = heatMap;\n    }\n    /**\n     * To reconstruct proper two dimensional dataSource depends on min and max values.\n     *  @private\n     */\n    TwoDimensional.prototype.processDataSource = function (dataSource) {\n        // tslint:disable-next-line:no-any\n        var tempCloneData = extend([], dataSource, null, true);\n        this.heatMap.clonedDataSource = [];\n        this.completeDataSource = [];\n        var axis = this.heatMap.axisCollections;\n        var dataLength = axis[0].maxLength + 1;\n        var labelLength = axis[0].axisLabelSize + (axis[0].min > 0 ? axis[0].min : 0);\n        var xLength = dataLength > labelLength ? dataLength : labelLength;\n        var minVal;\n        var maxVal;\n        dataLength = axis[1].maxLength + 1;\n        labelLength = axis[1].axisLabelSize + (axis[1].min > 0 ? axis[1].min : 0);\n        var yLength = dataLength > labelLength ? dataLength : labelLength;\n        // tslint:disable-next-line:no-any \n        var tempVariable;\n        var cloneDataIndex = 0;\n        var minMaxDatasource = [];\n        this.tempSizeArray = [];\n        this.tempColorArray = [];\n        this.heatMap.minColorValue = null;\n        this.heatMap.maxColorValue = null;\n        this.heatMap.dataMax = [];\n        this.heatMap.dataMin = [];\n        if (this.heatMap.paletteSettings.colorGradientMode === 'Column' && xLength < yLength) {\n            xLength = yLength;\n        }\n        for (var z = axis[1].valueType === 'Category' ? axis[1].min : 0; z < (this.heatMap.paletteSettings.colorGradientMode === 'Column' ? xLength : yLength); z++) {\n            var tempIndex = axis[0].valueType === 'Category' ? axis[0].min : 0;\n            this.completeDataSource.push([]);\n            while (tempIndex < xLength) {\n                if (tempIndex >= axis[0].min && tempIndex <= axis[0].max) {\n                    this.processDataArray(tempCloneData, tempIndex, z, cloneDataIndex);\n                }\n                tempIndex++;\n            }\n            if (this.heatMap.paletteSettings.colorGradientMode === 'Column' && this.heatMap.paletteSettings.type === 'Gradient') {\n                tempVariable = extend([], tempCloneData[cloneDataIndex], null, true);\n                for (var i = 0; i < tempVariable.length; i++) {\n                    if (typeof (tempVariable[i]) === 'object' && (tempVariable[i]) !== null || undefined || '') {\n                        tempVariable[i] = tempVariable[i][0];\n                    }\n                }\n            }\n            else {\n                tempVariable = extend([], this.completeDataSource[cloneDataIndex], null, true);\n            }\n            var minMaxVal = this.getMinMaxValue(minVal, maxVal, tempVariable);\n            if ((this.heatMap.paletteSettings.colorGradientMode === 'Column' ||\n                this.heatMap.paletteSettings.colorGradientMode === 'Row') && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.heatMap.dataMax[z] = minMaxVal[1];\n                this.heatMap.dataMin[z] = minMaxVal[0];\n            }\n            else {\n                minVal = minMaxVal[0];\n                maxVal = minMaxVal[1];\n            }\n            if (this.heatMap.xAxis.isInversed) {\n                this.completeDataSource[cloneDataIndex] = this.completeDataSource[cloneDataIndex].reverse();\n            }\n            if (z >= this.heatMap.axisCollections[1].min && z <= this.heatMap.axisCollections[1].max) {\n                minMaxDatasource.push(this.completeDataSource[cloneDataIndex]);\n            }\n            cloneDataIndex++;\n        }\n        if (this.heatMap.paletteSettings.colorGradientMode === 'Row' && !this.heatMap.yAxis.isInversed &&\n            this.heatMap.paletteSettings.type === 'Gradient') {\n            this.heatMap.dataMax = this.heatMap.dataMax.reverse();\n            this.heatMap.dataMin = this.heatMap.dataMin.reverse();\n        }\n        if (this.heatMap.paletteSettings.colorGradientMode === 'Column' && this.heatMap.xAxis.isInversed &&\n            this.heatMap.paletteSettings.type === 'Gradient') {\n            this.heatMap.dataMax = this.heatMap.dataMax.reverse();\n            this.heatMap.dataMin = this.heatMap.dataMin.reverse();\n        }\n        if (!this.heatMap.yAxis.isInversed) {\n            this.completeDataSource.reverse();\n            minMaxDatasource.reverse();\n        }\n        this.heatMap.clonedDataSource = minMaxDatasource;\n        this.heatMap.dataSourceMinValue = isNullOrUndefined(minVal) ? 0 : parseFloat(minVal.toString());\n        this.heatMap.dataSourceMaxValue = isNullOrUndefined(maxVal) ? 0 : parseFloat(maxVal.toString());\n        this.heatMap.isColorValueExist = isNullOrUndefined(this.heatMap.minColorValue) ? false : true;\n        this.heatMap.minColorValue = isNullOrUndefined(this.heatMap.minColorValue) ?\n            this.heatMap.dataSourceMinValue : parseFloat(this.heatMap.minColorValue.toString());\n        this.heatMap.maxColorValue = isNullOrUndefined(this.heatMap.maxColorValue) ?\n            this.heatMap.dataSourceMaxValue : parseFloat(this.heatMap.maxColorValue.toString());\n    };\n    /**\n     * To process and create a proper data array.\n     *  @private\n     */\n    // tslint:disable-next-line:no-any\n    TwoDimensional.prototype.processDataArray = function (tempCloneData, tempIndex, z, cloneDataIndex) {\n        if (this.heatMap.bubbleSizeWithColor) {\n            if (tempCloneData[tempIndex] && !isNullOrUndefined(tempCloneData[tempIndex][z])\n                && typeof (tempCloneData[tempIndex][z]) === 'object') {\n                // tslint:disable-next-line:no-any \n                var internalArray = tempCloneData[tempIndex][z];\n                for (var tempx = 0; tempx < internalArray.length; tempx++) {\n                    if (isNullOrUndefined(internalArray[tempx]) || isNaN(internalArray[tempx])) {\n                        internalArray[tempx] = '';\n                    }\n                    if (tempx === 0) {\n                        this.tempSizeArray.push(internalArray[tempx]);\n                    }\n                    else if (tempx === 1) {\n                        this.tempColorArray.push(internalArray[tempx]);\n                        break;\n                    }\n                }\n                this.completeDataSource[cloneDataIndex].push(internalArray);\n            }\n            else {\n                if (!isNullOrUndefined(tempCloneData[tempIndex]) && (tempCloneData[tempIndex][z] ||\n                    (tempCloneData[tempIndex][z] === 0 &&\n                        tempCloneData[tempIndex][z].toString() !== ''))) {\n                    this.completeDataSource[cloneDataIndex].push([tempCloneData[tempIndex][z]]);\n                    this.tempSizeArray.push(tempCloneData[tempIndex][z]);\n                }\n                else {\n                    this.completeDataSource[cloneDataIndex].push('');\n                }\n            }\n        }\n        else {\n            if (tempCloneData[tempIndex] && (tempCloneData[tempIndex][z] ||\n                (tempCloneData[tempIndex][z] === 0 &&\n                    tempCloneData[tempIndex][z].toString() !== ''))) {\n                if (typeof (tempCloneData[tempIndex][z]) === 'object') {\n                    if (tempCloneData[tempIndex][z].length > 0 && !isNullOrUndefined(tempCloneData[tempIndex][z][0])) {\n                        this.completeDataSource[cloneDataIndex].push(tempCloneData[tempIndex][z][0]);\n                    }\n                    else {\n                        this.completeDataSource[cloneDataIndex].push('');\n                    }\n                }\n                else {\n                    this.completeDataSource[cloneDataIndex].push(tempCloneData[tempIndex][z]);\n                }\n            }\n            else {\n                this.completeDataSource[cloneDataIndex].push('');\n            }\n        }\n    };\n    /**\n     * To get minimum and maximum value\n     *  @private\n     */\n    TwoDimensional.prototype.getMinMaxValue = function (minVal, maxVal, tempVariable) {\n        var minMaxValue = [];\n        if (this.heatMap.bubbleSizeWithColor) {\n            if (this.heatMap.paletteSettings.colorGradientMode !== 'Table' && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.tempSizeArray = tempVariable;\n            }\n            minMaxValue.push(this.getMinValue(minVal, this.tempSizeArray));\n            minMaxValue.push(this.getMaxValue(maxVal, this.tempSizeArray));\n            this.heatMap.minColorValue = this.getMinValue(this.heatMap.minColorValue, this.tempColorArray);\n            this.heatMap.maxColorValue = this.getMaxValue(this.heatMap.maxColorValue, this.tempColorArray);\n        }\n        else {\n            minMaxValue.push(this.getMinValue(minVal, tempVariable));\n            minMaxValue.push(this.getMaxValue(maxVal, tempVariable));\n        }\n        return minMaxValue;\n    };\n    /**\n     * To get minimum value\n     *  @private\n     */\n    TwoDimensional.prototype.getMinValue = function (minVal, tempVariable) {\n        if (isNullOrUndefined(minVal)) {\n            minVal = this.performSort(tempVariable);\n        }\n        else if (this.performSort(tempVariable) < minVal) {\n            minVal = this.performSort(tempVariable);\n        }\n        else if ((this.heatMap.paletteSettings.colorGradientMode === 'Row' ||\n            this.heatMap.paletteSettings.colorGradientMode === 'Column') && this.heatMap.paletteSettings.type === 'Gradient') {\n            minVal = this.performSort(tempVariable);\n        }\n        return !isNullOrUndefined(minVal) ? parseFloat(minVal.toString()) : minVal;\n    };\n    /**\n     * To get maximum value\n     *  @private\n     */\n    TwoDimensional.prototype.getMaxValue = function (maxVal, tempVariable) {\n        if (isNullOrUndefined(maxVal) && tempVariable.length > 0) {\n            maxVal = Math.max.apply(Math, tempVariable);\n        }\n        else if (Math.max.apply(Math, tempVariable) > maxVal) {\n            maxVal = Math.max.apply(Math, tempVariable);\n        }\n        else if ((this.heatMap.paletteSettings.colorGradientMode === 'Row' ||\n            this.heatMap.paletteSettings.colorGradientMode === 'Column') && this.heatMap.paletteSettings.type === 'Gradient') {\n            maxVal = Math.max.apply(Math, tempVariable);\n        }\n        return !isNullOrUndefined(maxVal) ? parseFloat(maxVal.toString()) : maxVal;\n    };\n    /**\n     * To perform sort operation.\n     *  @private\n     */\n    // tslint:disable-next-line:no-any\n    TwoDimensional.prototype.performSort = function (tempVariable) {\n        return tempVariable.sort(function (a, b) { return a - b; }).filter(this.checkmin)[0];\n    };\n    /**\n     * To get minimum value\n     *  @private\n     */\n    TwoDimensional.prototype.checkmin = function (val) {\n        return !isNullOrUndefined(val) && val.toString() !== '';\n    };\n    return TwoDimensional;\n}());\nexport { TwoDimensional };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DrawSvgCanvas, TextOption, TextBasic, PathOption, Line, LineOption, GradientPointer } from '../utils/helper';\nimport { Size, measureText, getTitle, getElement, CanvasTooltip, formatValue, LegendRange, ToggleVisibility, sum } from '../utils/helper';\nimport { Font } from '../model/base';\nimport { Rect, RectOption, Gradient, GradientColor, showTooltip, stringToNumber, CurrentLegendRect, removeElement } from '../utils/helper';\nimport { Theme } from '../model/theme';\nimport { Tooltip as tool } from '@syncfusion/ej2-svg-base';\n/**\n * Configures the Legend\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('Right')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"showLabel\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"showGradientPointer\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"enableSmartLegend\", void 0);\n    __decorate([\n        Property('All')\n    ], LegendSettings.prototype, \"labelDisplayType\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/**\n *\n * The `Legend` module is used to render legend for the heatmap.\n */\nvar Legend = /** @class */ (function () {\n    function Legend(heatMap) {\n        this.maxLegendLabelSize = new Size(0, 0);\n        this.gradientScaleSize = 10;\n        this.segmentCollections = [];\n        this.textWrapCollections = [];\n        this.labelCollections = [];\n        this.labelCollection = [];\n        this.legendSize = 10;\n        this.previousOptions = new GradientPointer(0, 0, 0, 0, 0, 0);\n        this.listPerPage = 0;\n        this.numberOfPages = 1;\n        this.listWidth = 0;\n        this.fillRect = new Rect(0, 0, 0, 0);\n        this.legendRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 1;\n        this.lastList = [];\n        this.navigationCollections = [];\n        this.pagingRect = new Rect(0, 0, 0, 0);\n        this.listInterval = 10; // padding between two lists\n        this.legendLabelTooltip = [];\n        this.labelXCollections = [];\n        this.labelYCollections = [];\n        this.legendXCollections = [];\n        this.legendYCollections = [];\n        /** @private */\n        this.legendRectPositionCollection = [];\n        /** @private */\n        this.legendRange = [];\n        /** @private */\n        this.legendTextRange = [];\n        /** @private */\n        this.visibilityCollections = [];\n        this.heatMap = heatMap;\n        this.drawSvgCanvas = new DrawSvgCanvas(heatMap);\n    }\n    ;\n    /**\n     * Get module name\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the Legend.\n     * @return {void}\n     * @private\n     */\n    Legend.prototype.destroy = function (heatMap) {\n        /**\n         * destory code\n         */\n    };\n    ;\n    /**\n     * @private\n     */\n    Legend.prototype.renderLegendItems = function () {\n        var heatMap = this.heatMap;\n        var tempBorder = {\n            color: 'transparent',\n            width: 0,\n        };\n        this.legend = heatMap.renderer.createGroup({ id: heatMap.element.id + '_Heatmap_Legend' });\n        var rectItems = new RectOption(heatMap.element.id + '_LegendBound', 'none', tempBorder, 1, this.legendGroup);\n        this.drawSvgCanvas.drawRectangle(rectItems, this.legend);\n        var legendBound = this.legendRectScale;\n        var rectItemsSvg = new Rect(legendBound.x, legendBound.y, legendBound.width, legendBound.height);\n        if (heatMap.paletteSettings.type === 'Fixed') {\n            var colorCollection = (!heatMap.legendSettings.enableSmartLegend) ?\n                heatMap.colorCollection : heatMap.legendColorCollection;\n            this.legendRange = (heatMap.resizing || (!heatMap.legendOnLoad && heatMap.rendering)) ? [] : this.legendRange;\n            this.legendTextRange = (heatMap.resizing || (!heatMap.legendOnLoad && heatMap.rendering)) ? [] : this.legendTextRange;\n            heatMap.toggleValue = [];\n            for (var i = 0; i < colorCollection.length; i++) {\n                var visibility = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                heatMap.toggleValue.push(new ToggleVisibility(visibility, colorCollection[i].value));\n            }\n        }\n        if (heatMap.paletteSettings.type === 'Gradient' || (heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.enableSmartLegend === true)) {\n            if (heatMap.paletteSettings.type === 'Gradient') {\n                var fill = void 0;\n                if (heatMap.enableCanvasRendering) {\n                    var grd = void 0;\n                    var ctx = heatMap.canvasRenderer.ctx;\n                    if (heatMap.horizontalGradient) {\n                        grd = ctx.createLinearGradient(legendBound.x, 0, legendBound.x + legendBound.width, 0);\n                    }\n                    else {\n                        grd = ctx.createLinearGradient(0, legendBound.y, 0, legendBound.y + legendBound.height);\n                    }\n                    for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n                        var value = ((heatMap.legendColorCollection[i].value - this.legendMinValue) /\n                            (this.legendMaxValue - this.legendMinValue));\n                        value = isNaN(value) ? 0 : value;\n                        grd.addColorStop(value, heatMap.legendColorCollection[i].color);\n                    }\n                    ctx.fillStyle = grd;\n                    fill = grd.toString();\n                }\n                else {\n                    var gradientOptions = void 0;\n                    var gradientColor = void 0;\n                    var cgradientColors = [];\n                    for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n                        var gradientPercentage = ((heatMap.legendColorCollection[i].value - this.legendMinValue) /\n                            (this.legendMaxValue - this.legendMinValue)) * 100;\n                        gradientPercentage = isNaN(gradientPercentage) ? 0 : gradientPercentage;\n                        gradientColor = new GradientColor(heatMap.legendColorCollection[i].color, gradientPercentage + '%');\n                        cgradientColors.push(gradientColor);\n                        if (this.legendMaxValue === this.legendMinValue) {\n                            break;\n                        }\n                    }\n                    if (heatMap.horizontalGradient) {\n                        gradientOptions = new Gradient(heatMap.element.id + '_lineargradient', '0%', '100%', '0%', '0%');\n                    }\n                    else {\n                        gradientOptions = new Gradient(heatMap.element.id + '_lineargradient', '0%', '0%', '0%', '100%');\n                    }\n                    var linearGradient = heatMap.renderer.drawGradient('linearGradient', gradientOptions, cgradientColors);\n                    this.legend.appendChild(linearGradient);\n                    fill = 'url(#' + heatMap.element.id + '_lineargradient)';\n                }\n                var rectItem = new RectOption(heatMap.element.id + '_Gradient_Legend', fill, tempBorder, 1, rectItemsSvg);\n                this.drawSvgCanvas.drawRectangle(rectItem, this.legend);\n                this.renderColorAxisGrid(rectItemsSvg);\n            }\n            else {\n                this.renderSmartLegend();\n            }\n            if (!heatMap.enableCanvasRendering) {\n                heatMap.svgObject.appendChild(this.legend);\n            }\n            this.renderLegendLabel(rectItemsSvg);\n        }\n        else {\n            this.legendScale = heatMap.renderer.createGroup({ id: heatMap.element.id + 'Heatmap_GradientScale' });\n            var listRect = new RectOption(heatMap.element.id + '_Gradient_Scale', 'none', tempBorder, 1, this.legendRectScale);\n            this.drawSvgCanvas.drawRectangle(listRect, this.legendScale);\n            if (!heatMap.enableCanvasRendering) {\n                this.legend.appendChild(this.legendScale);\n            }\n            this.translategroup = heatMap.renderer.createGroup({ id: heatMap.element.id + '_translate' });\n            this.calculateListPerPage(rectItemsSvg);\n            if (this.numberOfPages > 1) {\n                this.paginggroup = heatMap.renderer.createGroup({ id: heatMap.element.id + '_navigation' });\n            }\n            this.renderListLegendMode(rectItemsSvg, true);\n        }\n    };\n    Legend.prototype.renderSmartLegend = function () {\n        var heatMap = this.heatMap;\n        var colorCollection = heatMap.colorCollection;\n        var smartLegendRect;\n        var tempBorder = {\n            color: 'transparent',\n            width: 0,\n        };\n        var legendBound = this.legendRectScale;\n        var legendX;\n        var legendY;\n        var legendWidth;\n        var legendHeight;\n        var width = legendBound.width / colorCollection.length;\n        var height = legendBound.height / colorCollection.length;\n        this.legendRectPositionCollection = [];\n        this.legendRange = [];\n        for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n            var rectPosition = new CurrentLegendRect(0, 0, 0, 0, '', '');\n            if (heatMap.horizontalGradient) {\n                legendX = legendBound.x + (i * width);\n                legendY = legendBound.y;\n                legendWidth = width;\n                legendHeight = legendBound.height;\n                this.segmentCollections.push((heatMap.legendSettings.labelDisplayType === 'Edge' &&\n                    i === heatMap.legendColorCollection.length - 1 && !heatMap.legendColorCollection[i].isHidden) ?\n                    legendX + width : legendX);\n            }\n            else {\n                legendX = legendBound.x;\n                legendY = legendBound.y + (i * height);\n                legendWidth = legendBound.width;\n                legendHeight = height;\n                this.segmentCollections.push((heatMap.legendSettings.labelDisplayType === 'Edge' &&\n                    i === heatMap.legendColorCollection.length - 1 && !heatMap.legendColorCollection[i].isHidden) ?\n                    legendY + height : legendY);\n            }\n            smartLegendRect = new Rect(legendX, legendY, legendWidth, legendHeight);\n            var legendRange = new LegendRange(0, 0, 0, 0, 0, true, 0);\n            legendRange.x = legendX;\n            legendRange.y = legendY;\n            legendRange.width = legendWidth;\n            legendRange.height = legendHeight;\n            legendRange.value = heatMap.legendColorCollection[i].value;\n            legendRange.currentPage = this.currentPage;\n            if (colorCollection.length !== heatMap.legendColorCollection.length && i === heatMap.legendColorCollection.length - 1) {\n                heatMap.horizontalGradient ? legendRange.width = 0 : legendRange.height = 0;\n                this.visibilityCollections[i] = this.visibilityCollections[i - 1];\n            }\n            legendRange.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n            this.legendRange.push(legendRange);\n            if (!heatMap.legendColorCollection[i].isHidden) {\n                var color = heatMap.legendOnLoad ? colorCollection[i].color :\n                    this.legendRange[i].visible ? colorCollection[i].color : '#D3D3D3';\n                var rectItem = new RectOption(heatMap.element.id + '_Smart_Legend' + i, color, tempBorder, 1, smartLegendRect);\n                this.drawSvgCanvas.drawRectangle(rectItem, this.legend);\n                rectPosition.x = legendX;\n                rectPosition.y = legendY;\n                rectPosition.width = legendWidth;\n                rectPosition.height = legendHeight;\n                rectPosition.label = this.labelCollections[i];\n                rectPosition.id = heatMap.element.id + '_Smart_Legend' + i;\n                this.legendRectPositionCollection.push(rectPosition);\n                var text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, this.textWrapCollections[i]);\n                if (text.length !== 0 && heatMap.enableCanvasRendering) {\n                    var elementSize = measureText(this.labelCollections[i], heatMap.legendSettings.textStyle);\n                    this.legendLabelTooltip.push(new CanvasTooltip(this.labelCollections[i], new Rect(rectPosition.x, rectPosition.y, elementSize.width, elementSize.height)));\n                }\n            }\n        }\n    };\n    Legend.prototype.renderLegendLabel = function (rect) {\n        var heatMap = this.heatMap;\n        this.legendTextRange = [];\n        if (heatMap.legendSettings.showLabel && (heatMap.paletteSettings.type === 'Gradient' ||\n            (heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.labelDisplayType !== 'None'))) {\n            var anchor = 'start';\n            var dominantBaseline = void 0;\n            var legendLabel = void 0;\n            var textWrapWidth = 0;\n            var text = void 0;\n            this.legendLabelTooltip = [];\n            var elementSize = void 0;\n            var colorCollection = heatMap.legendColorCollection;\n            if (heatMap.enableCanvasRendering) {\n                var ctx = heatMap.canvasRenderer.ctx;\n                ctx.rect(this.legendGroup.x, this.legendGroup.y, this.legendGroup.width, this.legendGroup.height);\n                ctx.save();\n                ctx.clip();\n                ctx.restore();\n            }\n            else {\n                legendLabel = heatMap.renderer.createGroup({ id: heatMap.element.id + '_Heatmap_LegendLabel' });\n            }\n            var labelX = void 0;\n            var labelY = void 0;\n            for (var i = 0; i < colorCollection.length; i++) {\n                var value = ((colorCollection[i].value - (Math.round(this.legendMinValue * 100) / 100)) /\n                    ((Math.round(this.legendMaxValue * 100) / 100) - (Math.round(this.legendMinValue * 100) / 100))) * 100;\n                if (heatMap.horizontalGradient) {\n                    labelX = this.segmentCollections[i];\n                    labelY = rect.y + rect.height + this.labelPadding;\n                    anchor = ((Math.round(value * 100) / 100) === 0 || (i === 0 && heatMap.paletteSettings.type === 'Fixed')) ? 'start' :\n                        (((Math.round(value * 100) / 100) === 100 && heatMap.paletteSettings.type === 'Gradient') ||\n                            (Math.round(heatMap.dataSourceMaxValue * 100) / 100) === colorCollection[i].value &&\n                                heatMap.legendSettings.enableSmartLegend) || (heatMap.legendSettings.enableSmartLegend &&\n                            heatMap.paletteSettings.type === 'Fixed' &&\n                            heatMap.legendSettings.labelDisplayType === 'Edge') ? 'end' : 'middle';\n                    dominantBaseline = 'hanging';\n                }\n                else {\n                    labelX = rect.x + rect.width + this.labelPadding;\n                    labelY = this.segmentCollections[i];\n                    dominantBaseline = ((Math.round(value * 100) / 100) === 0 || (i === 0 && heatMap.paletteSettings.type === 'Fixed')) ?\n                        'hanging' : (((Math.round(value * 100) / 100) === 100 && heatMap.paletteSettings.type === 'Gradient') ||\n                        (Math.round(heatMap.dataSourceMaxValue * 100) / 100) === colorCollection[i].value &&\n                            heatMap.legendSettings.enableSmartLegend) || (heatMap.legendSettings.enableSmartLegend &&\n                        heatMap.legendSettings.labelDisplayType === 'Edge' &&\n                        heatMap.paletteSettings.type === 'Fixed') ? 'auto' : 'middle';\n                }\n                textWrapWidth = heatMap.horizontalGradient ? this.textWrapCollections[i] : this.width - (this.legendRectScale.width +\n                    this.labelPadding + this.legendRectPadding);\n                text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, textWrapWidth);\n                elementSize = measureText(text[0], heatMap.legendSettings.textStyle);\n                if (heatMap.paletteSettings.type === 'Fixed') {\n                    var rectY = dominantBaseline === 'hanging' ? labelY : dominantBaseline === 'middle' ?\n                        labelY - elementSize.height / 2 : labelY - elementSize.height;\n                    var rectX = anchor === 'end' ? labelX - elementSize.width : anchor === 'middle' ?\n                        labelX - elementSize.width / 2 : labelX;\n                    var textPosition = new LegendRange(rectX, rectY, elementSize.width, elementSize.height, colorCollection[i].value, true, this.currentPage);\n                    textPosition.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                    this.legendTextRange.push(textPosition);\n                }\n                if (this.labelCollections[i] !== '') {\n                    if (text.length !== 0 && text[0].indexOf('...') !== -1 && heatMap.enableCanvasRendering) {\n                        this.legendLabelTooltip.push(new CanvasTooltip(this.labelCollections[i], new Rect(labelX, labelY, elementSize.width, elementSize.height)));\n                    }\n                    var textBasic = new TextBasic(labelX, labelY, anchor, text, 0, 'translate(0,0)', dominantBaseline);\n                    var options = new TextOption(heatMap.element.id + '_Legend_Label' + i, textBasic, heatMap.legendSettings.textStyle, heatMap.legendSettings.textStyle.color || heatMap.themeStyle.legendLabel);\n                    options.fill = heatMap.legendOnLoad ? options.fill :\n                        (heatMap.paletteSettings.type === 'Fixed' && !this.legendRange[i].visible) ? '#D3D3D3' : options.fill;\n                    if (text.length > 1) {\n                        this.drawSvgCanvas.createWrapText(options, heatMap.legendSettings.textStyle, legendLabel);\n                    }\n                    else {\n                        this.drawSvgCanvas.createText(options, legendLabel, text[0]);\n                    }\n                    if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                        if (dominantBaseline === 'middle') {\n                            legendLabel.lastChild.setAttribute('dy', '0.6ex');\n                        }\n                        else if (dominantBaseline === 'hanging') {\n                            legendLabel.lastChild.setAttribute('dy', '1.5ex');\n                        }\n                    }\n                }\n                if (this.legendMaxValue === this.legendMinValue && heatMap.paletteSettings.type === 'Gradient') {\n                    break;\n                }\n            }\n            if (!heatMap.enableCanvasRendering) {\n                this.legendGroup.height = this.legendGroup.height > 0 ? this.legendGroup.height : 0;\n                this.legendGroup.width = this.legendGroup.width > 0 ? this.legendGroup.width : 0;\n                this.legend.appendChild(legendLabel);\n                var clippath = heatMap.renderer.createClipPath({ id: heatMap.element.id + '_clipPath' });\n                var clipRect = heatMap.renderer.drawRectangle(this.legendGroup);\n                clippath.appendChild(clipRect);\n                heatMap.svgObject.appendChild(clippath);\n                this.legend.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.renderGradientPointer = function (e, pageX, pageY) {\n        var heatMap = this.heatMap;\n        var currentRect = heatMap.heatMapSeries.getCurrentRect(pageX, pageY);\n        var cellValue = heatMap.bubbleSizeWithColor ? currentRect.value[0].bubbleData.toString() !== '' ?\n            !this.heatMap.isColorValueExist ? currentRect.value[0].bubbleData.toString() :\n                currentRect.value[1].bubbleData.toString() : '' : currentRect.value.toString();\n        var rect = this.legendRectScale;\n        var legendPart;\n        var direction;\n        var options;\n        var legendPath;\n        var pathX1;\n        var pathY1;\n        var pathX2;\n        var pathY2;\n        var pathX3;\n        var pathY3;\n        if (cellValue.toString() !== '') {\n            if (!heatMap.horizontalGradient) {\n                legendPart = rect.height / 100;\n                legendPath = legendPart * ((Number(cellValue) - this.legendMinValue) /\n                    (this.legendMaxValue - this.legendMinValue)) * 100;\n                legendPath = isNaN(legendPath) ? 0 : legendPath;\n                pathX1 = rect.x - 1;\n                pathY1 = rect.y + legendPath;\n                pathX2 = pathX3 = rect.x - 8;\n                pathY2 = rect.y - 5 + legendPath;\n                pathY3 = rect.y + 5 + legendPath;\n            }\n            else {\n                legendPart = rect.width / 100;\n                legendPath = legendPart * ((Number(cellValue) - this.legendMinValue) /\n                    (this.legendMaxValue - this.legendMinValue)) * 100;\n                legendPath = isNaN(legendPath) ? 0 : legendPath;\n                pathX1 = rect.x + legendPath;\n                pathY1 = rect.y + rect.height;\n                pathX2 = rect.x - 5 + legendPath;\n                pathY2 = pathY3 = rect.y + rect.height + 8;\n                pathX3 = rect.x + 5 + legendPath;\n            }\n            direction = 'M' + ' ' + pathX1 + ' ' + pathY1 + ' ' +\n                'L' + ' ' + pathX2 + ' ' + pathY2 + ' ' + 'L' + ' ' + pathX3 + ' ' + pathY3 + ' ' + 'Z';\n            options = new PathOption(heatMap.element.id + '_Gradient_Pointer', 'gray', 0.01, '#A0A0A0', 1, '0,0', direction);\n            if (!heatMap.enableCanvasRendering) {\n                this.gradientPointer = heatMap.renderer.drawPath(options);\n                this.gradientPointer.style.visibility = 'visible';\n                this.legend.appendChild(this.gradientPointer);\n            }\n            else {\n                this.removeGradientPointer();\n                var canvasTranslate = void 0;\n                heatMap.canvasRenderer.drawPath(options, canvasTranslate);\n                this.previousOptions.pathX1 = pathX1;\n                this.previousOptions.pathY1 = pathY1;\n                this.previousOptions.pathX2 = pathX2;\n                this.previousOptions.pathY2 = pathY2;\n                this.previousOptions.pathX3 = pathX3;\n                this.previousOptions.pathY3 = pathY3;\n            }\n        }\n        else {\n            this.removeGradientPointer();\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.removeGradientPointer = function () {\n        var heatMap = this.heatMap;\n        if (this.gradientPointer && !heatMap.enableCanvasRendering) {\n            this.gradientPointer.style.visibility = 'hidden';\n        }\n        else if (heatMap.enableCanvasRendering) {\n            if (Object.keys(this.previousOptions).length !== 0) {\n                if (heatMap.horizontalGradient) {\n                    this.fillRect.x = this.previousOptions.pathX2 - 1;\n                    this.fillRect.y = this.previousOptions.pathY1;\n                    this.fillRect.width = this.previousOptions.pathX3 - this.previousOptions.pathX2 + 2;\n                    this.fillRect.height = this.previousOptions.pathY2 + 1 - this.previousOptions.pathY1;\n                }\n                else {\n                    this.fillRect.x = this.previousOptions.pathX2 - 1;\n                    this.fillRect.y = this.previousOptions.pathY2 - 1;\n                    this.fillRect.width = this.previousOptions.pathX1 - this.previousOptions.pathX2 + 1;\n                    this.fillRect.height = this.previousOptions.pathY3 - this.previousOptions.pathY2 + 2;\n                }\n            }\n            heatMap.canvasRenderer.ctx.fillStyle = heatMap.themeStyle.background;\n            heatMap.canvasRenderer.ctx.fillRect(this.fillRect.x, this.fillRect.y, this.fillRect.width, this.fillRect.height);\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.calculateLegendBounds = function (rect) {\n        var heatMap = this.heatMap;\n        var legendSettings = heatMap.legendSettings;\n        var colorCollection = heatMap.legendColorCollection;\n        this.labelCollections = [];\n        this.labelCollection = [];\n        if (legendSettings.position !== 'Bottom' && legendSettings.position !== 'Top' &&\n            legendSettings.position !== 'Right' && legendSettings.position !== 'Left') {\n            legendSettings.position = 'Right';\n        }\n        heatMap.horizontalGradient = legendSettings.position === 'Bottom' || legendSettings.position === 'Top';\n        this.legendRectPadding = heatMap.horizontalGradient ? 16 : 10; // padding between rect and legend\n        this.labelPadding = legendSettings.showLabel ? this.heatMap.horizontalGradient ? 10 : 6 : 0; // padding between list and label\n        this.legendHeight = legendSettings.height;\n        this.legendWidth = legendSettings.width;\n        var format = heatMap.legendSettings.labelFormat;\n        var isCustom = format.match('{value}') !== null;\n        this.format = heatMap.intl.getNumberFormat({\n            format: isCustom ? '' : format\n        });\n        if (heatMap.paletteSettings.type === 'Fixed') {\n            for (var i = 0; i < colorCollection.length; i++) {\n                var label = colorCollection[i].label ? colorCollection[i].label :\n                    formatValue(isCustom, format, colorCollection[i].value, this.format).toString();\n                var legendEventArg = {\n                    cancel: false, text: label, name: 'legendRender',\n                };\n                this.labelCollection.push(label);\n                this.heatMap.trigger('legendRender', legendEventArg);\n                if (heatMap.legendRender) {\n                    if (heatMap.legendSettings.enableSmartLegend && heatMap.legendSettings.labelDisplayType === 'Edge'\n                        && i > 0 && i < colorCollection.length - 1) {\n                        this.labelCollections.push('');\n                    }\n                    else {\n                        if (!legendEventArg.cancel) {\n                            this.labelCollections.push(legendEventArg.text);\n                        }\n                        else {\n                            this.labelCollections.push('');\n                        }\n                    }\n                }\n                else {\n                    this.labelCollections.push(label);\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < colorCollection.length; i++) {\n                var label = colorCollection[i].isHidden ? '' : colorCollection[i].label ?\n                    colorCollection[i].label : formatValue(isCustom, format, colorCollection[i].value, this.format).toString();\n                var legendEventArg = {\n                    cancel: false,\n                    text: label,\n                    name: 'legendRender',\n                };\n                if (!colorCollection[i].isHidden) {\n                    this.heatMap.trigger('legendRender', legendEventArg);\n                }\n                if (heatMap.legendRender) {\n                    if (!legendEventArg.cancel) {\n                        this.labelCollections.push(legendEventArg.text);\n                    }\n                    else {\n                        this.labelCollections.push('');\n                    }\n                }\n                else {\n                    this.labelCollections.push(label);\n                }\n            }\n        }\n        if (heatMap.paletteSettings.type === 'Gradient' || (heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.enableSmartLegend)) {\n            this.maxLegendLabelSize = this.getMaxLabelSize();\n            if (heatMap.horizontalGradient && legendSettings.height === '') {\n                this.legendHeight = ((2 * this.legendRectPadding) + this.legendSize + this.maxLegendLabelSize.height).toString();\n            }\n            else if (!heatMap.horizontalGradient && legendSettings.width === '' && (legendSettings.textStyle.textOverflow === 'None' ||\n                (heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.enableSmartLegend &&\n                    heatMap.legendSettings.labelDisplayType === 'None'))) {\n                this.legendWidth = ((2 * this.legendRectPadding) + this.legendSize + this.maxLegendLabelSize.width).toString();\n            }\n        }\n        else {\n            this.calculateListLegendBounds(rect);\n        }\n        this.legendHeight = this.legendHeight ? this.legendHeight : heatMap.horizontalGradient ? '50' : '100%';\n        this.legendWidth = this.legendWidth ? this.legendWidth : heatMap.horizontalGradient ?\n            '100%' : heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ? '70' : '50';\n        this.height = stringToNumber(this.legendHeight, rect.height);\n        this.width = stringToNumber(this.legendWidth, rect.width);\n        if (heatMap.horizontalGradient) {\n            this.height = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                this.height < 50 ? 50 : this.height : this.height;\n            if (legendSettings.position === 'Top') {\n                rect.y += this.height;\n            }\n            rect.height -= this.height;\n        }\n        else {\n            this.width = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                this.width < 50 ? 50 : this.width : this.width;\n            if (legendSettings.position === 'Left') {\n                rect.x += this.width;\n            }\n            rect.width -= this.width;\n        }\n    };\n    Legend.prototype.calculateListLegendBounds = function (rect) {\n        var heatMap = this.heatMap;\n        this.listWidth = 0;\n        this.listHeight = 0;\n        this.currentPage = 1;\n        var padding = 10; // padding of paging elements\n        if (heatMap.horizontalGradient) {\n            for (var i = 0; i < heatMap.colorCollection.length; i++) {\n                var size = 0;\n                if (heatMap.legendSettings.showLabel) {\n                    var text = this.labelCollections[i];\n                    size = measureText(text, heatMap.legendSettings.textStyle).width;\n                }\n                var perListWidth = this.legendSize + this.labelPadding + size + this.listInterval;\n                this.listWidth += perListWidth;\n            }\n            this.listWidth += this.listInterval + padding;\n            if (this.legendWidth === '') {\n                this.legendWidth = this.listWidth > rect.width ? rect.width.toString() : this.listWidth.toString();\n            }\n            if (this.legendHeight === '') {\n                this.numberOfRows = Math.ceil(this.listWidth / stringToNumber(this.legendWidth, rect.width));\n                this.numberOfRows = this.numberOfRows > 3 ? 3 : this.numberOfRows;\n                this.legendHeight = (this.listWidth > rect.width || this.listWidth > stringToNumber(this.legendWidth, rect.width)) &&\n                    this.numberOfRows > 3 ? (((this.legendSize + this.listInterval) * this.numberOfRows) + this.legendRectPadding +\n                    parseInt(heatMap.legendSettings.textStyle.size, 10) + padding).toString() :\n                    (((this.legendSize + this.listInterval) * this.numberOfRows) + this.legendRectPadding).toString();\n            }\n        }\n        else {\n            this.listHeight = ((this.legendSize + this.listInterval) * heatMap.colorCollection.length) + this.listInterval;\n            if (this.legendHeight === '') {\n                this.legendHeight = this.listHeight > rect.height ? rect.height.toString() : this.listHeight.toString();\n            }\n            if (this.legendWidth === '' && heatMap.legendSettings.textStyle.textOverflow !== 'Trim') {\n                this.maxLegendLabelSize = this.getMaxLabelSize();\n                this.legendWidth = ((2 * this.legendRectPadding) + this.legendSize + this.labelPadding +\n                    this.maxLegendLabelSize.width).toString();\n            }\n        }\n        if (stringToNumber(this.legendHeight, rect.height) < 50) {\n            this.legendHeight = '50';\n        }\n        if (stringToNumber(this.legendWidth, rect.width) < 70) {\n            this.legendWidth = '70';\n        }\n    };\n    Legend.prototype.getMaxLabelSize = function () {\n        var heatMap = this.heatMap;\n        this.maxLegendLabelSize = new Size(0, 0);\n        if (!heatMap.legendSettings.showLabel || (heatMap.horizontalGradient && heatMap.paletteSettings.type === 'Fixed' &&\n            !heatMap.legendSettings.enableSmartLegend) || (heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.labelDisplayType === 'None')) {\n            return this.maxLegendLabelSize;\n        }\n        else {\n            var labelSize = this.maxLegendLabelSize;\n            for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n                var size = measureText(this.labelCollections[i], heatMap.legendSettings.textStyle);\n                labelSize.width = (labelSize.width > size.width) ? labelSize.width : size.width;\n                labelSize.height = (labelSize.height > size.height) ? labelSize.height : size.height;\n            }\n            return labelSize;\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.calculateLegendSize = function (rect, legendTop) {\n        var heatMap = this.heatMap;\n        var legendSettings = heatMap.legendSettings;\n        var left;\n        var top;\n        var padding = 10; // inner padding for axis title and axil labels\n        var alignment = legendSettings.alignment;\n        var height = stringToNumber(this.legendHeight, rect.height);\n        var width = stringToNumber(this.legendWidth, rect.width);\n        var axis = heatMap.axisCollections;\n        var axisTitlePadding = 0;\n        if (heatMap.horizontalGradient) {\n            width = width > rect.width ? rect.width : width;\n            height = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                height > 50 ? height : 50 : this.height;\n            left = alignment === 'Near' ? rect.x : alignment === 'Far' ? rect.x + rect.width - width :\n                rect.x + (rect.width / 2) - (width / 2);\n            if (heatMap.xAxis.title.text !== '') {\n                axisTitlePadding = measureText(heatMap.xAxis.title.text, heatMap.xAxis.textStyle).height + padding;\n            }\n            var axisHeight = axis[0].opposedPosition ? 0 : sum(axis[0].xAxisMultiLabelHeight) + axis[0].maxLabelSize.height +\n                axisTitlePadding + padding;\n            top = legendSettings.position === 'Top' ? heatMap.titleSettings.text ? legendTop :\n                heatMap.margin.top : rect.y + rect.height + axisHeight;\n        }\n        else {\n            height = height > rect.height ? rect.height : height;\n            width = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                width > 50 ? width : 50 : width;\n            top = alignment === 'Near' ? rect.y : alignment === 'Far' ? rect.y + rect.height - height :\n                rect.y + (rect.height / 2) - (height / 2);\n            if (heatMap.yAxis.title.text !== '') {\n                axisTitlePadding = measureText(heatMap.yAxis.title.text, heatMap.yAxis.textStyle).height + padding;\n            }\n            var axisWidth = axis[1].opposedPosition ? sum(axis[1].yAxisMultiLabelHeight) +\n                axis[1].maxLabelSize.width + axisTitlePadding + 2 * padding : 0;\n            left = legendSettings.position === 'Right' ? rect.x + rect.width + axisWidth : heatMap.margin.left;\n        }\n        this.legendGroup = new Rect(left, top, width, height);\n        this.calculateGradientScale(this.legendGroup);\n    };\n    // calculating number of lists per page\n    Legend.prototype.measureListLegendBound = function (rect) {\n        var heatMap = this.heatMap;\n        var padding = 15; // padding of paging element\n        this.numberOfPages = 1;\n        if (heatMap.horizontalGradient) {\n            if (this.listWidth > this.width) {\n                this.numberOfRows = Math.ceil(this.listWidth / this.width);\n                this.listHeight = ((this.legendSize + this.listInterval) * this.numberOfRows);\n                this.listPerPage = this.numberOfRows <= 3 ? this.numberOfRows : Math.ceil((this.height - padding -\n                    parseInt(heatMap.legendSettings.textStyle.size, 10) -\n                    this.legendRectPadding) / (this.legendSize + this.listInterval));\n                this.numberOfPages = Math.ceil(this.numberOfRows / this.listPerPage);\n            }\n            else {\n                this.listPerPage = 1;\n            }\n        }\n        else {\n            if (this.listHeight > rect.height || this.listHeight > this.height) {\n                var maxHeight = stringToNumber(this.legendHeight, rect.height);\n                maxHeight = maxHeight > rect.height ? rect.height : maxHeight;\n                this.listPerPage = Math.floor(maxHeight / (this.legendSize + this.listInterval) - 1);\n                this.numberOfPages = Math.max(1, Math.ceil(heatMap.colorCollection.length / this.listPerPage));\n            }\n            else {\n                this.listPerPage = heatMap.colorCollection.length;\n                this.legendHeight = this.listHeight.toString();\n            }\n        }\n    };\n    Legend.prototype.renderPagingElements = function () {\n        var heatMap = this.heatMap;\n        if (this.numberOfPages > 1) {\n            this.navigationCollections = [];\n            this.legend.appendChild(this.paginggroup);\n            var iconSize = 10;\n            var rightArrowX = this.legendGroup.x + this.legendGroup.width - iconSize;\n            var rightArrowY = this.legendGroup.y + this.legendGroup.height - iconSize;\n            var text = this.currentPage + '/' + this.numberOfPages;\n            var textSize = measureText(text, heatMap.legendSettings.textStyle);\n            var textX = rightArrowX - textSize.width - 15;\n            var textBasic = new TextBasic(textX, rightArrowY, 'start', text, 0, 'translate(0,0)', 'middle');\n            var options = new TextOption(heatMap.element.id + '_paging', textBasic, heatMap.legendSettings.textStyle, heatMap.legendSettings.textStyle.color || heatMap.themeStyle.legendLabel);\n            this.drawSvgCanvas.createText(options, this.paginggroup, text);\n            if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                this.paginggroup.lastChild.setAttribute('dy', '0.6ex');\n            }\n            this.pagingRect = new Rect(textX, rightArrowY - textSize.height / 2, textSize.width, textSize.height);\n            var pagingTextRect = new RectOption(heatMap.element.id + '_pagingText', 'none', { color: 'transparent', width: 0 }, 1, this.pagingRect);\n            this.drawSvgCanvas.drawRectangle(pagingTextRect, this.paginggroup);\n            var rightArrowRect = new RectOption(heatMap.element.id + '_rightArrow', 'none', { color: 'transparent', width: 0 }, 1, new Rect(rightArrowX - iconSize, rightArrowY - iconSize / 2, iconSize, iconSize));\n            this.drawSvgCanvas.drawRectangle(rightArrowRect, this.paginggroup);\n            var rightArrow = 'M' + ' ' + (rightArrowX) + ' ' + rightArrowY + ' ' +\n                'L' + ' ' + (rightArrowX - iconSize) + ' ' + (rightArrowY - iconSize / 2) + ' ' + 'L' + ' ' +\n                (rightArrowX - iconSize) + ' ' + (rightArrowY + (iconSize / 2)) + 'Z';\n            var leftX = textX - 15;\n            var leftArrow = 'M' + ' ' + leftX + ' ' + rightArrowY + ' ' +\n                'L' + ' ' + (leftX + iconSize) + ' ' + (rightArrowY - iconSize / 2) + ' ' + 'L' + ' ' +\n                (leftX + iconSize) + ' ' + (rightArrowY + (iconSize / 2)) + 'Z';\n            var leftArrowRect = new RectOption(heatMap.element.id + '_leftArrow', 'none', { color: 'transparent', width: 0 }, 1, new Rect(leftX, rightArrowY - iconSize / 2, iconSize, iconSize));\n            this.drawSvgCanvas.drawRectangle(leftArrowRect, this.paginggroup);\n            var leftOption = new PathOption(heatMap.element.id + '_Legend_leftarrow', 'gray', 0.01, '#A0A0A0', 1, '0,0', leftArrow);\n            var rightOption = new PathOption(heatMap.element.id + '_Legend_rightarrow', 'gray', 0.01, '#A0A0A0', 1, '0,0', rightArrow);\n            this.navigationCollections.push(rightArrowRect);\n            this.navigationCollections.push(leftArrowRect);\n            if (!heatMap.enableCanvasRendering) {\n                var arrow = heatMap.renderer.drawPath(leftOption);\n                var rightarrow = heatMap.renderer.drawPath(rightOption);\n                this.paginggroup.appendChild(arrow);\n                this.paginggroup.appendChild(rightarrow);\n            }\n            else {\n                var canvasTranslate = void 0;\n                heatMap.canvasRenderer.drawPath(leftOption, canvasTranslate);\n                heatMap.canvasRenderer.drawPath(rightOption, canvasTranslate);\n            }\n        }\n    };\n    Legend.prototype.calculateGradientScale = function (scale) {\n        var heatMap = this.heatMap;\n        var padding = 10; // padding between legend bounds and gradient scale\n        var left;\n        var top;\n        var height;\n        var width;\n        if (heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend) {\n            this.measureListLegendBound(heatMap.initialClipRect);\n        }\n        if (heatMap.horizontalGradient) {\n            left = scale.x + padding;\n            top = scale.y + this.legendRectPadding;\n            width = heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ?\n                scale.width - (2 * this.listInterval) : scale.width - 2 * padding;\n            height = heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ?\n                (this.legendSize + this.listInterval) * this.listPerPage - this.listInterval : this.gradientScaleSize;\n        }\n        else {\n            left = scale.x + this.legendRectPadding;\n            top = scale.y + padding;\n            width = (heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend) ?\n                scale.width - padding : this.gradientScaleSize;\n            height = heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ?\n                (this.legendSize + this.listInterval) * this.listPerPage - this.listInterval : scale.height - 2 * padding;\n        }\n        this.legendRectScale = new Rect(left, top, width, height);\n        if (heatMap.paletteSettings.type === 'Gradient' || heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.enableSmartLegend) {\n            this.calculateColorAxisGrid(this.legendRectScale);\n        }\n    };\n    Legend.prototype.calculateColorAxisGrid = function (legendRect) {\n        var heatMap = this.heatMap;\n        var rect = this.legendRectScale;\n        var legendPart;\n        var text;\n        var maxTextWrapLength = 0;\n        this.segmentCollections = [];\n        this.textWrapCollections = [];\n        var pathX1;\n        var pathY1;\n        var colorCollection = heatMap.paletteSettings.type === 'Gradient' ?\n            heatMap.legendColorCollection : heatMap.colorCollection;\n        var minValue = heatMap.bubbleSizeWithColor ? heatMap.minColorValue : heatMap.dataSourceMinValue;\n        var maxValue = heatMap.bubbleSizeWithColor ? heatMap.maxColorValue : heatMap.dataSourceMaxValue;\n        this.legendMinValue = colorCollection[0].value > minValue ? minValue : colorCollection[0].value;\n        this.legendMaxValue = colorCollection[colorCollection.length - 1].value < maxValue ? maxValue :\n            colorCollection[colorCollection.length - 1].value;\n        if (heatMap.paletteSettings.type === 'Gradient') {\n            for (var index = 0; index < colorCollection.length; index++) {\n                var value = ((colorCollection[index].value - this.legendMinValue) /\n                    (this.legendMaxValue - this.legendMinValue)) * 100;\n                value = isNaN(value) ? 0 : value;\n                if (!heatMap.horizontalGradient) {\n                    legendPart = rect.height / 100;\n                    pathY1 = legendRect.y + (legendPart * value);\n                    this.segmentCollections.push(pathY1);\n                }\n                else {\n                    legendPart = rect.width / 100;\n                    pathX1 = legendRect.x + (legendPart * value);\n                    this.segmentCollections.push(pathX1);\n                }\n            }\n        }\n        var textWrapWidth;\n        if (heatMap.horizontalGradient) {\n            for (var i = 0; i < colorCollection.length; i++) {\n                if (heatMap.paletteSettings.type === 'Gradient') {\n                    var previousSegmentWidth = (this.segmentCollections[i] - this.segmentCollections[i - 1]) / 2;\n                    var nextSegmentWidth = (this.segmentCollections[i + 1] - this.segmentCollections[i]) / 2;\n                    if (i === colorCollection.length - 1) {\n                        textWrapWidth = previousSegmentWidth;\n                    }\n                    else if (i === 0) {\n                        textWrapWidth = nextSegmentWidth;\n                    }\n                    else {\n                        textWrapWidth = previousSegmentWidth < nextSegmentWidth ? previousSegmentWidth : nextSegmentWidth;\n                    }\n                }\n                else {\n                    var width = this.legendRectScale.width / heatMap.colorCollection.length;\n                    textWrapWidth = heatMap.legendSettings.labelDisplayType === 'Edge' ? width : width / 2;\n                }\n                this.textWrapCollections.push(textWrapWidth);\n                text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, textWrapWidth);\n                maxTextWrapLength = text.length > maxTextWrapLength ? text.length : maxTextWrapLength;\n            }\n            if (heatMap.legendSettings.position === 'Bottom') {\n                heatMap.initialClipRect.height -= (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                this.legendGroup.y -= (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                this.legendRectScale.y = this.legendGroup.y + this.legendRectPadding;\n                this.legendGroup.height = parseInt(this.legendHeight, 10) + (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n            }\n            else {\n                heatMap.initialClipRect.y += (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                heatMap.initialClipRect.height -= (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                this.legendRectScale.y = this.legendGroup.y + this.legendRectPadding;\n                this.legendGroup.height = parseInt(this.legendHeight, 10) + (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n            }\n        }\n    };\n    Legend.prototype.renderColorAxisGrid = function (legendRect) {\n        var heatMap = this.heatMap;\n        var legendElement;\n        var pathX1;\n        var pathY1;\n        var pathX2;\n        var pathY2;\n        if (!heatMap.enableCanvasRendering) {\n            legendElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + '_ColorAxis_Grid' });\n        }\n        for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n            if (!heatMap.horizontalGradient) {\n                pathX1 = legendRect.x;\n                pathY1 = pathY2 = this.segmentCollections[i];\n                pathX2 = legendRect.x + legendRect.width;\n            }\n            else {\n                pathX1 = pathX2 = this.segmentCollections[i];\n                pathY1 = legendRect.y;\n                pathY2 = legendRect.y + legendRect.height;\n            }\n            var direction = new Line(pathX1, pathY1, pathX2, pathY2);\n            var line = new LineOption(this.heatMap.element.id + '_ColorAxis_Grid' + i, direction, '#EEEEEE', 1);\n            this.drawSvgCanvas.drawLine(line, legendElement);\n            if (!heatMap.enableCanvasRendering) {\n                this.legend.appendChild(legendElement);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.renderLegendLabelTooltip = function (e, pageX, pageY) {\n        if (e.target.id.indexOf('_Legend_Label') !== -1 && e.target.textContent.indexOf('...') > -1) {\n            var targetId = e.target.id.split(this.heatMap.element.id + '_Legend_Label');\n            if (targetId.length === 2) {\n                var index = void 0;\n                if (targetId[1].length === 1 || this.heatMap.legendSettings.textStyle.textOverflow === 'Trim') {\n                    index = parseInt(targetId[1], 10);\n                }\n                else {\n                    index = parseInt(targetId[1].substring(0, targetId[1].length - 1), 10);\n                }\n                showTooltip(this.labelCollections[index], pageX, pageY, this.heatMap.element.offsetWidth, this.heatMap.element.id + '_LegendLabel_Tooltip', getElement(this.heatMap.element.id + '_Secondary_Element'), null, this.heatMap);\n                document.getElementById(this.heatMap.element.id + '_LegendLabel_Tooltip').style.visibility = 'visible';\n            }\n        }\n        else {\n            var element = document.getElementById(this.heatMap.element.id + '_LegendLabel_Tooltip');\n            if (element) {\n                element.style.visibility = 'hidden';\n            }\n        }\n    };\n    Legend.prototype.calculateListPerPage = function (rect) {\n        var heatMap = this.heatMap;\n        if (heatMap.horizontalGradient) {\n            this.lastList = [];\n            var legendX = rect.x;\n            var legendY = rect.y;\n            var size = 0;\n            var division = 0;\n            var labelX = 0;\n            var labelY = 0;\n            var interval = 20;\n            var i = void 0;\n            var legendSize = 10;\n            var padding = 5;\n            this.labelXCollections = [];\n            this.labelYCollections = [];\n            this.legendXCollections = [];\n            this.legendYCollections = [];\n            for (i = 0; i < heatMap.colorCollection.length; i++) {\n                if (heatMap.legendSettings.showLabel) {\n                    var text = this.labelCollections[i];\n                    size = measureText(text, heatMap.legendSettings.textStyle).width;\n                }\n                labelX = legendX + legendSize + padding;\n                labelY = legendY + padding;\n                var maxWidth = heatMap.legendSettings.showLabel ? labelX + size : legendX + this.legendSize + this.listInterval;\n                if (i !== 0 && maxWidth > this.legendGroup.width + this.legendGroup.x - this.listInterval) {\n                    division += 1;\n                    legendX = rect.x;\n                    legendY = rect.y + (division * interval);\n                    labelX = legendX + legendSize + padding;\n                    labelY = legendY + padding;\n                    if (division % (this.listPerPage) === 0) {\n                        this.lastList.push(i);\n                        legendY = rect.y;\n                        labelY = legendY + padding;\n                        division = 0;\n                    }\n                }\n                this.labelXCollections.push(labelX);\n                this.labelYCollections.push(labelY);\n                this.legendXCollections.push(legendX);\n                this.legendYCollections.push(legendY);\n                legendX = legendX + this.legendSize + this.labelPadding + size + this.listInterval;\n            }\n            this.lastList.push(i);\n            this.numberOfPages = this.lastList.length;\n        }\n    };\n    Legend.prototype.renderListLegendMode = function (rect, translate) {\n        var heatMap = this.heatMap;\n        var legendSize = 10;\n        var tempBorder = {\n            color: 'transparent', width: 0,\n        };\n        var padding = 5; // padding for legend label from top\n        this.legendLabelTooltip = [];\n        var listRect;\n        var size = new Size(0, 0);\n        var division = 0;\n        var labelX = 0;\n        var labelY = 0;\n        var legendX = rect.x;\n        var legendY = rect.y;\n        if (translate) {\n            this.renderPagingElements();\n        }\n        var x;\n        var y;\n        var textWrapWidth = this.legendGroup.width - (this.legendSize +\n            this.legendRectPadding + this.labelPadding);\n        if (!heatMap.horizontalGradient) {\n            x = (this.currentPage * (this.listPerPage)) - (this.listPerPage);\n            y = x + this.listPerPage;\n            y = y < heatMap.colorCollection.length ? y : heatMap.colorCollection.length;\n        }\n        else {\n            x = this.currentPage === 1 ? 0 : this.lastList[this.currentPage - 2];\n            y = this.lastList[this.currentPage - 1];\n        }\n        for (var i = x; i < y; i++) {\n            if (heatMap.legendSettings.showLabel) {\n                var text = this.labelCollections[i];\n                size = measureText(text, heatMap.legendSettings.textStyle);\n            }\n            var legendEventArgs = {\n                cancel: false, text: this.labelCollection[i], name: 'legendRender',\n            };\n            if (heatMap.horizontalGradient) {\n                legendX = this.legendXCollections[i];\n                legendY = this.legendYCollections[i];\n                labelX = this.labelXCollections[i];\n                labelY = this.labelYCollections[i];\n            }\n            labelX = legendX + this.legendSize + this.labelPadding;\n            labelY = legendY + padding;\n            this.heatMap.trigger('legendRender', legendEventArgs);\n            if (translate && heatMap.rendering && this.legendRange.length <= heatMap.colorCollection.length) {\n                var rectPosition = new LegendRange(legendX, legendY, legendSize, legendSize, heatMap.colorCollection[i].value, true, this.currentPage);\n                rectPosition.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                if (!legendEventArgs.cancel) {\n                    this.legendRange.push(rectPosition);\n                }\n                else {\n                    var rectPosition_1 = new LegendRange(legendX, legendY, 0, 0, heatMap.colorCollection[i].value, true, this.currentPage);\n                    this.legendRange.push(rectPosition_1);\n                }\n                if (heatMap.legendSettings.showLabel) {\n                    var textPosition = new LegendRange(labelX, (labelY - size.height / 2), size.width, size.height, heatMap.colorCollection[i].value, true, this.currentPage);\n                    textPosition.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                    this.legendTextRange.push(textPosition);\n                }\n            }\n            if (!legendEventArgs.cancel) {\n                if (heatMap.legendSettings.showLabel) {\n                    var text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, textWrapWidth);\n                    if (text[0].indexOf('...') !== -1 && heatMap.enableCanvasRendering) {\n                        this.legendLabelTooltip.push(new CanvasTooltip(this.labelCollections[i], new Rect(labelX, labelY, size.width, size.height)));\n                    }\n                    var textBasic = new TextBasic(labelX, labelY, 'start', text, 0, 'translate(0,0)', 'middle');\n                    var options = new TextOption(heatMap.element.id + '_Legend_Label' + i, textBasic, heatMap.legendSettings.textStyle, heatMap.legendSettings.textStyle.color || heatMap.themeStyle.legendLabel);\n                    options.fill = heatMap.legendOnLoad ? options.fill : this.legendRange[i].visible ? options.fill : '#D3D3D3';\n                    this.drawSvgCanvas.createText(options, this.translategroup, text[0]);\n                    if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                        this.translategroup.lastChild.setAttribute('dy', '0.6ex');\n                    }\n                }\n                listRect = new Rect(legendX, legendY, legendSize, legendSize);\n                var listColor = heatMap.legendOnLoad ? heatMap.colorCollection[i].color :\n                    this.legendRange[i].visible ? heatMap.colorCollection[i].color : '#D3D3D3';\n                var rectItems = new RectOption(heatMap.element.id + '_legend_list' + i, listColor, tempBorder, 1, listRect);\n                this.drawSvgCanvas.drawRectangle(rectItems, this.translategroup);\n                heatMap.horizontalGradient ? legendX = legendX + this.legendSize + this.labelPadding + size.width + this.listInterval :\n                    legendY += this.legendSize + this.listInterval;\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            this.legendGroup.height = this.legendGroup.height > 0 ? this.legendGroup.height : 0;\n            this.legendGroup.width = this.legendGroup.width > 0 ? this.legendGroup.width : 0;\n            var clippath = heatMap.renderer.createClipPath({ id: heatMap.element.id + '_LegendScale_ClipPath' });\n            var clipRect = heatMap.renderer.drawRectangle(this.legendGroup);\n            clippath.appendChild(clipRect);\n            this.translategroup.appendChild(clippath);\n            this.translategroup.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n            this.legendScale.appendChild(this.translategroup);\n            heatMap.svgObject.appendChild(this.legend);\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.translatePage = function (heatMap, page, isNext) {\n        var padding = 5;\n        if ((isNext && page >= 1 && page < this.numberOfPages) || (!isNext && page > 1 && page <= this.numberOfPages)) {\n            if (isNext) {\n                this.currentPage += 1;\n                this.legendRect.y += this.legendRect.height;\n            }\n            else {\n                this.currentPage -= 1;\n                this.legendRect.y -= this.legendRect.height;\n            }\n            if (!heatMap.enableCanvasRendering) {\n                this.paginggroup.removeChild(this.paginggroup.firstChild);\n                while (this.translategroup.childNodes.length) {\n                    this.translategroup.removeChild(this.translategroup.firstChild);\n                }\n            }\n            else {\n                var ctx = heatMap.canvasRenderer.ctx;\n                ctx.fillRect(this.legendRectScale.x - padding, this.legendRectScale.y - padding, this.legendRectScale.width +\n                    padding, this.legendRectScale.height + (2 * padding));\n                ctx.fillRect(this.pagingRect.x, this.pagingRect.y, this.pagingRect.width, this.pagingRect.height);\n            }\n            this.renderListLegendMode(this.legendRectScale, true);\n        }\n        if (heatMap.enableCanvasRendering && heatMap.allowSelection && heatMap.rectSelected) {\n            var ctx = heatMap.secondaryCanvasRenderer.ctx;\n            var position = heatMap.legendSettings.position;\n            var initialRect = heatMap.initialClipRect;\n            var rectX = position === 'Right' ? initialRect.x + initialRect.width : 0;\n            var rectY = position === 'Bottom' ? initialRect.y + initialRect.height : 0;\n            var rectWidth = position === 'Right' ? heatMap.availableSize.width - (initialRect.x +\n                initialRect.width) : position === 'Left' ? initialRect.x : heatMap.availableSize.width;\n            var rectHeight = position === 'Top' ? initialRect.y : position === 'Bottom' ?\n                heatMap.availableSize.height - (initialRect.y + initialRect.height) : heatMap.availableSize.height;\n            ctx.save();\n            ctx.clearRect(rectX, rectY, rectWidth, rectHeight);\n            ctx.restore();\n            var oldCanvas = document.getElementById(heatMap.element.id + '_canvas');\n            var newCanvas = document.getElementById(heatMap.element.id + '_secondary_canvas');\n            var rectImage = oldCanvas.getContext('2d').getImageData(rectX, rectY, rectWidth, rectHeight);\n            newCanvas.getContext('2d').putImageData(rectImage, rectX, rectY);\n            oldCanvas.style.opacity = '0.3';\n        }\n    };\n    /**\n     * To create div container for tooltip which appears on hovering the smart legend.\n     * @param heatmap\n     * @private\n     */\n    Legend.prototype.createTooltipDiv = function (heatMap) {\n        var element = createElement('div', {\n            id: this.heatMap.element.id + 'legendLabelTooltipContainer',\n            styles: 'position:absolute'\n        });\n        this.heatMap.element.appendChild(element);\n    };\n    /**\n     * To render tooltip for smart legend.\n     * @private\n     */\n    Legend.prototype.renderTooltip = function (currentLegendRect) {\n        var heatMap = this.heatMap;\n        var tempTooltipText = [currentLegendRect.label];\n        var offset = null;\n        offset = parseInt(heatMap.legendSettings.textStyle.size, 10) / 2;\n        this.tooltipObject = new tool({\n            offset: offset,\n            theme: heatMap.theme,\n            content: tempTooltipText,\n            location: {\n                x: currentLegendRect.x + (currentLegendRect.width / 2),\n                y: currentLegendRect.y + (currentLegendRect.height / 2)\n            },\n            inverted: heatMap.horizontalGradient ? false : true,\n            areaBounds: {\n                height: this.legendGroup.height + this.legendGroup.y,\n                width: this.legendGroup.width + this.legendGroup.x,\n                x: heatMap.legendSettings.position === 'Right' ? 0 : this.legendGroup.x,\n                y: heatMap.legendSettings.position === 'Top' ? heatMap.titleSettings.text === '' ? this.legendGroup.height -\n                    this.legendGroup.y : this.legendGroup.y : 0\n            }\n        }, '#' + this.heatMap.element.id + 'legendLabelTooltipContainer');\n        this.tooltipObject.element.style.visibility = 'visible';\n    };\n    /**\n     * To create tooltip for smart legend.\n     * @private\n     */\n    Legend.prototype.createTooltip = function (pageX, pageY) {\n        var currentLegendRect;\n        for (var i = 0; i < this.heatMap.colorCollection.length; i++) {\n            var position = this.legendRectPositionCollection[i];\n            if (pageX > position.x && pageX < position.width + position.x &&\n                pageY > position.y && pageY < position.height + position.y) {\n                currentLegendRect = this.legendRectPositionCollection[i];\n                break;\n            }\n        }\n        var ele = document.getElementById(this.heatMap.element.id + 'legendLabelTooltipContainer');\n        if (ele && ele.style.visibility === 'visible' && this.tooltipObject && !this.heatMap.isTouch) {\n            this.tooltipObject.fadeOut();\n            ele.style.visibility = 'hidden';\n        }\n        if (currentLegendRect) {\n            this.renderTooltip(currentLegendRect);\n        }\n    };\n    /**\n     * Toggle the visibility of cells based on legend selection\n     * @private\n     */\n    Legend.prototype.legendRangeSelection = function (index) {\n        var heatMap = this.heatMap;\n        var legendRange = this.legendRange;\n        var padding = 5;\n        var legendBound = this.legendRectScale;\n        heatMap.rangeSelection = true;\n        if (heatMap.enableCanvasRendering) {\n            var ctx = heatMap.canvasRenderer.ctx;\n            if (heatMap.legendSettings.enableSmartLegend) {\n                ctx.fillRect(legendBound.x - padding, legendBound.y - padding, (legendBound.width + this.labelPadding + this.maxLegendLabelSize.width) + padding, legendBound.height + (2 * padding));\n            }\n            else {\n                ctx.fillRect(legendBound.x - padding, legendBound.y - padding, legendBound.width +\n                    padding, legendBound.height + (2 * padding));\n            }\n        }\n        else {\n            if (heatMap.legendSettings.enableSmartLegend) {\n                while (this.legend && this.legend.childNodes.length) {\n                    this.legend.removeChild(this.legend.firstChild);\n                }\n            }\n            else {\n                while (this.translategroup && this.translategroup.childNodes.length) {\n                    this.translategroup.removeChild(this.translategroup.firstChild);\n                }\n            }\n            removeElement(heatMap.heatMapSeries.containerRectObject.id);\n            if (heatMap.cellSettings.showLabel) {\n                removeElement(heatMap.heatMapSeries.containerTextObject.id);\n            }\n        }\n        if (heatMap.legendSettings.enableSmartLegend) {\n            if (heatMap.colorCollection.length !== heatMap.legendColorCollection.length) {\n                if (index === heatMap.legendColorCollection.length - 1) {\n                    heatMap.toggleValue[index - 1].visible = this.visibilityCollections[index - 1] =\n                        legendRange[index - 1].visible = !legendRange[index].visible;\n                }\n                else {\n                    if (index === heatMap.colorCollection.length - 1) {\n                        heatMap.toggleValue[index + 1].visible = this.visibilityCollections[index + 1] =\n                            legendRange[index + 1].visible = !legendRange[index].visible;\n                    }\n                }\n            }\n        }\n        heatMap.toggleValue[index].visible = this.visibilityCollections[index] = legendRange[index].visible = !legendRange[index].visible;\n        heatMap.legendOnLoad = false;\n        if (heatMap.legendSettings.enableSmartLegend) {\n            this.renderSmartLegend();\n            var rectItemsSvg = new Rect(legendBound.x, legendBound.y, legendBound.width, legendBound.height);\n            this.renderLegendLabel(rectItemsSvg);\n        }\n        else {\n            this.renderListLegendMode(this.legendRectScale, false);\n        }\n        heatMap.heatMapSeries.renderRectSeries();\n        heatMap.clearSelection();\n        if (heatMap.enableCanvasRendering && heatMap.allowSelection) {\n            // heatMap.createSvg();\n            // heatMap.refreshBound();\n            // heatMap.createMultiCellDiv(false);\n        }\n    };\n    /**\n     * update visibility collections of legend and series\n     * @private\n     */\n    Legend.prototype.updateLegendRangeCollections = function () {\n        var heatMap = this.heatMap;\n        heatMap.rangeSelection = !heatMap.legendOnLoad ? true : false;\n        this.visibilityCollections = !heatMap.legendOnLoad ? this.visibilityCollections : [];\n        heatMap.toggleValue = !heatMap.legendOnLoad ? heatMap.toggleValue : [];\n        this.legendRange = !heatMap.legendOnLoad ? this.legendRange : [];\n        this.legendTextRange = !heatMap.legendOnLoad ? this.legendTextRange : [];\n    };\n    return Legend;\n}());\nexport { Legend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { isNullOrUndefined, Complex } from '@syncfusion/ej2-base';\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { increaseDateTimeInterval } from '../utils/helper';\nimport { BubbleData } from '../model/base';\n/**\n * Configures the Adaptor Property in the Heatmap.\n */\nvar Data = /** @class */ (function (_super) {\n    __extends(Data, _super);\n    function Data() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], Data.prototype, \"isJsonData\", void 0);\n    __decorate([\n        Property('None')\n    ], Data.prototype, \"adaptorType\", void 0);\n    __decorate([\n        Property('')\n    ], Data.prototype, \"xDataMapping\", void 0);\n    __decorate([\n        Property('')\n    ], Data.prototype, \"yDataMapping\", void 0);\n    __decorate([\n        Property('')\n    ], Data.prototype, \"valueMapping\", void 0);\n    __decorate([\n        Complex({}, BubbleData)\n    ], Data.prototype, \"bubbleDataMapping\", void 0);\n    return Data;\n}(ChildProperty));\nexport { Data };\nvar AdaptiveMinMax = /** @class */ (function () {\n    function AdaptiveMinMax() {\n    }\n    return AdaptiveMinMax;\n}());\nexport { AdaptiveMinMax };\n/**\n *\n * The `Adaptor` module is used to handle JSON and Table data.\n */\nvar Adaptor = /** @class */ (function () {\n    function Adaptor(heatMap) {\n        this.reconstructedXAxis = [];\n        this.reconstructedYAxis = [];\n        this.adaptiveXMinMax = new AdaptiveMinMax();\n        this.adaptiveYMinMax = new AdaptiveMinMax();\n        this.heatMap = heatMap;\n    }\n    /**\n     * Method to construct Two Dimentional Datasource.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.constructDatasource = function (dataSource, dataSourceSettings) {\n        if (dataSourceSettings.adaptorType === 'Cell') {\n            var xAxis = this.heatMap.xAxis;\n            var yAxis = this.heatMap.yAxis;\n            this.adaptiveXMinMax.min = xAxis.minimum;\n            this.adaptiveXMinMax.max = xAxis.maximum;\n            this.adaptiveYMinMax.min = yAxis.minimum;\n            this.adaptiveYMinMax.max = yAxis.maximum;\n            if (((xAxis.valueType === 'Numeric' || xAxis.valueType === 'DateTime') &&\n                (isNullOrUndefined(xAxis.minimum) || isNullOrUndefined(xAxis.maximum))) ||\n                ((yAxis.valueType === 'Numeric' || yAxis.valueType === 'DateTime') &&\n                    (isNullOrUndefined(yAxis.minimum) || isNullOrUndefined(yAxis.maximum)))) {\n                this.getMinMaxValue(dataSource, dataSourceSettings, xAxis, yAxis);\n            }\n            this.heatMap.isCellData = true;\n        }\n        if (dataSourceSettings.adaptorType === 'None') {\n            this.heatMap.completeAdaptDataSource = dataSource;\n        }\n        else if (!dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Table') {\n            this.heatMap.completeAdaptDataSource = dataSource;\n        }\n        else if (dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Table') {\n            this.heatMap.completeAdaptDataSource = this.processJsonTableData(dataSource, dataSourceSettings);\n        }\n        else if (dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Cell') {\n            this.heatMap.completeAdaptDataSource = this.processJsonCellData(dataSource, dataSourceSettings);\n        }\n        else if (!dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Cell') {\n            this.constructAdaptiveAxis();\n            this.heatMap.completeAdaptDataSource = this.processCellData(dataSource);\n            this.heatMap.isCellData = true;\n        }\n    };\n    /**\n     * Method to construct Axis Collection.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.constructAdaptiveAxis = function () {\n        var xAxis = this.heatMap.xAxis;\n        var yAxis = this.heatMap.yAxis;\n        var intervalType;\n        if (xAxis.valueType === 'Numeric') {\n            this.reconstructedXAxis = this.getNumericAxisCollection(this.adaptiveXMinMax.min, this.adaptiveXMinMax.max, xAxis.increment);\n        }\n        if (yAxis.valueType === 'Numeric') {\n            this.reconstructedYAxis = this.getNumericAxisCollection(this.adaptiveYMinMax.min, this.adaptiveYMinMax.max, yAxis.increment);\n        }\n        if (xAxis.valueType === 'DateTime') {\n            this.reconstructedXAxis = this.getDateAxisCollection(this.adaptiveXMinMax.min, this.adaptiveXMinMax.max, xAxis.intervalType, xAxis.increment);\n        }\n        if (yAxis.valueType === 'DateTime') {\n            this.reconstructedYAxis = this.getDateAxisCollection(this.adaptiveYMinMax.min, this.adaptiveYMinMax.max, yAxis.intervalType, yAxis.increment);\n        }\n    };\n    /**\n     * Method to calculate Numeric Axis Collection.\n     * @return {string[]}\n     * @private\n     */\n    Adaptor.prototype.getNumericAxisCollection = function (min, max, increment) {\n        var loopIndex = min;\n        var tempAxisColl = [];\n        while (loopIndex <= max) {\n            tempAxisColl.push(loopIndex.toString());\n            loopIndex = loopIndex + increment;\n        }\n        return tempAxisColl;\n    };\n    /**\n     * Method to calculate DateTime Axis Collection.\n     * @return {string[]}\n     * @private\n     */\n    Adaptor.prototype.getDateAxisCollection = function (min, max, intervalType, increment) {\n        var option = {\n            skeleton: 'full',\n            type: 'dateTime'\n        };\n        var dateParser = this.heatMap.intl.getDateParser(option);\n        var dateFormatter = this.heatMap.intl.getDateFormat(option);\n        min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: min }).val))));\n        var tempInterval = min;\n        var tempAxisColl = [];\n        while (tempInterval <= max) {\n            tempAxisColl.push(new Date(tempInterval).toString());\n            tempInterval = increaseDateTimeInterval(tempInterval, 1, intervalType, increment).getTime();\n        }\n        return tempAxisColl;\n    };\n    /**\n     * Method to calculate Maximum and Minimum Value from datasource.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.getMinMaxValue = function (dataSource, adapData, xAxis, yAxis) {\n        var data = dataSource;\n        var label = Object.keys(data[0]);\n        if (data.length > 0) {\n            this.adaptiveXMinMax.min = !isNullOrUndefined(xAxis.minimum) ? xAxis.minimum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[0]] : data[0][0];\n            this.adaptiveYMinMax.min = !isNullOrUndefined(yAxis.minimum) ? yAxis.minimum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[1]] : data[0][1];\n            this.adaptiveXMinMax.max = !isNullOrUndefined(xAxis.maximum) ? xAxis.maximum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[0]] : data[0][0];\n            this.adaptiveYMinMax.max = !isNullOrUndefined(yAxis.maximum) ? yAxis.maximum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[1]] : data[0][1];\n        }\n        for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n            // tslint:disable-next-line:no-any\n            var xDataIndex = adapData.isJsonData ? data[dataIndex][label[0]] : data[dataIndex][0];\n            // tslint:disable-next-line:no-any\n            var yDataIndex = adapData.isJsonData ? data[dataIndex][label[1]] : data[dataIndex][1];\n            if (xDataIndex < this.adaptiveXMinMax.min && isNullOrUndefined(xAxis.minimum)) {\n                this.adaptiveXMinMax.min = xDataIndex;\n            }\n            if (xDataIndex > this.adaptiveXMinMax.max && isNullOrUndefined(xAxis.maximum)) {\n                this.adaptiveXMinMax.max = xDataIndex;\n            }\n            if (yDataIndex < this.adaptiveYMinMax.min && isNullOrUndefined(yAxis.minimum)) {\n                this.adaptiveYMinMax.min = yDataIndex;\n            }\n            if (yDataIndex > this.adaptiveYMinMax.max && isNullOrUndefined(yAxis.maximum)) {\n                this.adaptiveYMinMax.max = yDataIndex;\n            }\n        }\n    };\n    /**\n     * Method to process Cell datasource.\n     * @return {Object}\n     * @private\n     */\n    Adaptor.prototype.processCellData = function (dataSource) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = dataSource;\n        var xLabels = this.reconstructedXAxis;\n        var yLabels = this.reconstructedYAxis;\n        var currentDataXIndex = 0;\n        var currentDataYIndex = 0;\n        this.reconstructData = [];\n        if (tempDataCollection && tempDataCollection.length) {\n            for (var xindex = 0; xindex < tempDataCollection.length; xindex++) {\n                if (this.heatMap.xAxis.valueType === 'Category') {\n                    currentDataXIndex = tempDataCollection[xindex][0];\n                }\n                else {\n                    currentDataXIndex = xLabels.indexOf(tempDataCollection[xindex][0].toString());\n                }\n                if (currentDataXIndex > -1) {\n                    while (!this.reconstructData[currentDataXIndex]) {\n                        this.reconstructData.push([]);\n                    }\n                    if (this.heatMap.yAxis.valueType === 'Category') {\n                        currentDataYIndex = tempDataCollection[xindex][1];\n                    }\n                    else {\n                        currentDataYIndex = yLabels.indexOf(tempDataCollection[xindex][1].toString());\n                    }\n                    if (currentDataYIndex !== -1) {\n                        while (this.reconstructData[currentDataXIndex][currentDataYIndex] !== '') {\n                            this.reconstructData[currentDataXIndex].push('');\n                        }\n                        this.reconstructData[currentDataXIndex][currentDataYIndex] = isNullOrUndefined(tempDataCollection[xindex][2]) ?\n                            '' : tempDataCollection[xindex][2];\n                    }\n                }\n            }\n        }\n        return this.reconstructData;\n    };\n    /**\n     * Method to process JSON Cell datasource.\n     * @return {Object}\n     * @private\n     */\n    Adaptor.prototype.processJsonCellData = function (dataSource, adaptordata) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = dataSource;\n        var xAxisLabels = this.heatMap.xAxis.labels ? this.heatMap.xAxis.labels : [];\n        var yAxisLabels = this.heatMap.yAxis.labels ? this.heatMap.yAxis.labels : [];\n        var axisCollections = this.heatMap.axisCollections;\n        if (xAxisLabels.length === 0 || yAxisLabels.length === 0) {\n            this.generateAxisLabels(dataSource, adaptordata);\n        }\n        var xLabels = (this.heatMap.xAxis.valueType === 'Category') ? (xAxisLabels.length > 0 ?\n            this.heatMap.xAxis.labels : axisCollections[0].jsonCellLabel) : axisCollections[0].labelValue;\n        var yLabels = (this.heatMap.yAxis.valueType === 'Category') ? (yAxisLabels.length > 0 ?\n            this.heatMap.yAxis.labels : axisCollections[1].jsonCellLabel) : axisCollections[1].labelValue;\n        var currentDataXIndex = 0;\n        var currentDataYIndex = 0;\n        if (tempDataCollection.length) {\n            this.reconstructData = [];\n            for (var index = 0; index < tempDataCollection.length; index++) {\n                currentDataXIndex = this.getSplitDataValue(tempDataCollection[index], adaptordata, xLabels, adaptordata.xDataMapping.split('.'), this.heatMap.xAxis.valueType);\n                if (currentDataXIndex !== -1) {\n                    while (!this.reconstructData[currentDataXIndex]) {\n                        this.reconstructData.push([]);\n                    }\n                    currentDataYIndex = this.getSplitDataValue(tempDataCollection[index], adaptordata, yLabels, adaptordata.yDataMapping.split('.'), this.heatMap.yAxis.valueType);\n                    if (currentDataYIndex !== -1) {\n                        while (isNullOrUndefined(this.reconstructData[currentDataXIndex][currentDataYIndex])) {\n                            this.reconstructData[currentDataXIndex].push('');\n                        }\n                        if (this.heatMap.bubbleSizeWithColor) {\n                            this.reconstructData[currentDataXIndex][currentDataYIndex] = [\n                                this.getSplitDataValue(tempDataCollection[index], adaptordata, null, adaptordata.bubbleDataMapping.size.split('.'), ''),\n                                this.getSplitDataValue(tempDataCollection[index], adaptordata, null, adaptordata.bubbleDataMapping.color.split('.'), '')\n                            ];\n                        }\n                        else {\n                            this.reconstructData[currentDataXIndex][currentDataYIndex] = this.getSplitDataValue(tempDataCollection[index], adaptordata, null, adaptordata.valueMapping.split('.'), '');\n                        }\n                    }\n                }\n            }\n        }\n        return this.reconstructData;\n    };\n    /**\n     * Method to generate axis labels when labels are not given.\n     * @return {string}\n     * @private\n     */\n    Adaptor.prototype.generateAxisLabels = function (dataSource, adaptordata) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = dataSource;\n        var xLabels = this.heatMap.xAxis.labels ? this.heatMap.xAxis.labels : [];\n        var yLabels = this.heatMap.yAxis.labels ? this.heatMap.yAxis.labels : [];\n        var hasXLabels = xLabels.length > 0 ? true : false;\n        var hasYLabels = yLabels.length > 0 ? true : false;\n        var axisCollection = this.heatMap.axisCollections;\n        for (var index = 0; index < axisCollection.length; index++) {\n            var valueType = axisCollection[index].valueType;\n            var axis = axisCollection[index];\n            if (valueType === 'Category') {\n                var hasLabels = void 0;\n                var dataMapping = void 0;\n                var labels = void 0;\n                if (axis.orientation === 'Horizontal') {\n                    hasLabels = hasXLabels;\n                    dataMapping = adaptordata.xDataMapping;\n                    axis.jsonCellLabel = labels = [];\n                }\n                else {\n                    hasLabels = hasYLabels;\n                    dataMapping = adaptordata.yDataMapping;\n                    axis.jsonCellLabel = labels = [];\n                }\n                if (!hasLabels) {\n                    for (var i = 0; i < tempDataCollection.length; i++) {\n                        if (dataMapping in tempDataCollection[i]) {\n                            var xValue = tempDataCollection[i][dataMapping].toString();\n                            if (labels.indexOf(xValue.toString()) === -1) {\n                                labels.push(xValue);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (valueType === 'DateTime') {\n                axis.clearAxisLabel();\n                axis.calculateDateTimeAxisLabel(this.heatMap);\n            }\n            else {\n                axis.clearAxisLabel();\n                axis.calculateNumericAxisLabels(this.heatMap);\n            }\n        }\n    };\n    /**\n     * Method to get data from complex mapping.\n     * @return {number|string}\n     * @private\n     */\n    Adaptor.prototype.getSplitDataValue = function (\n    // tslint:disable-next-line:no-any \n    tempSplitDataCollection, adaptordata, labels, tempSplitData, valueType) {\n        var value = -1;\n        this.tempSplitDataCollection = tempSplitDataCollection;\n        for (var splitIndex = 0; splitIndex < tempSplitData.length; splitIndex++) {\n            value = !isNullOrUndefined(labels) ? (!(valueType === 'DateTime') ?\n                labels.indexOf(this.tempSplitDataCollection[tempSplitData[splitIndex]]) :\n                labels.map(Number).indexOf(+this.tempSplitDataCollection[tempSplitData[splitIndex]])) : null;\n            if (!isNullOrUndefined(this.tempSplitDataCollection)) {\n                this.tempSplitDataCollection = value !== -1 && !isNullOrUndefined(labels) ?\n                    this.tempSplitDataCollection : this.tempSplitDataCollection[tempSplitData[splitIndex]];\n            }\n            if (isNullOrUndefined(this.tempSplitDataCollection)) {\n                break;\n            }\n        }\n        value = !isNullOrUndefined(labels) ? value : isNullOrUndefined(this.tempSplitDataCollection) ||\n            this.tempSplitDataCollection.toString() === '' ? '' : parseFloat(this.tempSplitDataCollection.toString());\n        return value;\n    };\n    /**\n     * Method to process JSON Table datasource.\n     * @return {Object}\n     * @private\n     */\n    Adaptor.prototype.processJsonTableData = function (dataSource, adaptordata) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = dataSource;\n        var currentDataXIndex = 0;\n        var currentDataYIndex = 0;\n        var xLabels = this.heatMap.xAxis.labels ? this.heatMap.xAxis.labels : [];\n        var yLabels = this.heatMap.yAxis.labels ? this.heatMap.yAxis.labels : [];\n        var key;\n        if (tempDataCollection.length) {\n            this.reconstructData = [];\n            for (var xindex = 0; xindex < tempDataCollection.length; xindex++) {\n                currentDataXIndex = this.getSplitDataValue(tempDataCollection[xindex], adaptordata, xLabels, adaptordata.xDataMapping.split('.'), this.heatMap.xAxis.valueType);\n                if (currentDataXIndex !== -1) {\n                    while (!this.reconstructData[currentDataXIndex]) {\n                        this.reconstructData.push([]);\n                    }\n                    for (var index = 0; index < Object.keys(this.tempSplitDataCollection).length; index++) {\n                        key = Object.keys(this.tempSplitDataCollection)[index];\n                        currentDataYIndex = key !== adaptordata.xDataMapping ? yLabels.indexOf(key) : -1;\n                        if (currentDataYIndex !== -1) {\n                            while (isNullOrUndefined(this.reconstructData[currentDataXIndex][currentDataYIndex])) {\n                                this.reconstructData[currentDataXIndex].push('');\n                            }\n                            this.reconstructData[currentDataXIndex][currentDataYIndex] =\n                                isNullOrUndefined(this.tempSplitDataCollection[key]) ?\n                                    '' : this.tempSplitDataCollection[key];\n                        }\n                    }\n                }\n            }\n        }\n        return this.reconstructData;\n    };\n    /**\n     * To destroy the Adaptor.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.destroy = function (heatMap) {\n        /**\n         * No Lines\n         */\n    };\n    ;\n    /**\n     * To get Module name\n     */\n    Adaptor.prototype.getModuleName = function () {\n        return 'Adaptor';\n    };\n    return Adaptor;\n}());\nexport { Adaptor };\n","/**\n * Heat Map Component\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, Internationalization, Complex, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { remove, Event, EventHandler, Touch } from '@syncfusion/ej2-base';\nimport { Browser, isBlazor } from '@syncfusion/ej2-base';\nimport { SvgRenderer, CanvasRenderer } from '@syncfusion/ej2-svg-base';\nimport { Size, stringToNumber, RectOption, Rect, TextBasic, measureText } from './utils/helper';\nimport { DrawSvgCanvas, TextOption, titlePositionX, getTitle, showTooltip, getElement, SelectedCellDetails } from './utils/helper';\nimport { removeElement, CanvasTooltip, getTooltipText } from './utils/helper';\nimport { Margin, Title } from './model/base';\nimport { Theme, getThemeColor } from './model/theme';\nimport { Axis } from './axis/axis';\nimport { AxisHelper } from './axis/axis-helpers';\nimport { Series, CellSettings } from './series/series';\nimport { PaletteSettings, CellColor } from './utils/colorMapping';\nimport { TooltipSettings } from './utils/tooltip';\nimport { TwoDimensional } from './datasource/twodimensional';\nimport { LegendSettings } from '../heatmap/legend/legend';\nimport { Data } from './datasource/adaptor';\nvar HeatMap = /** @class */ (function (_super) {\n    __extends(HeatMap, _super);\n    function HeatMap() {\n        /**\n         * The width of the heatmap as a string accepts input as both like '100px' or '100%'.\n         * If specified as '100%, heatmap renders to the full width of its parent element.\n    \n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.enableCanvasRendering = false;\n        /** @private */\n        _this.isCellTapHold = false;\n        /** @private */\n        _this.selectedCellCount = 0;\n        /** @private */\n        _this.toggleValue = [];\n        /** @private */\n        _this.legendOnLoad = true;\n        /** @private */\n        _this.resizing = false;\n        /** @private */\n        _this.rendering = true;\n        /** @private */\n        _this.horizontalGradient = _this.legendSettings.position === 'Bottom' || _this.legendSettings.position === 'Top';\n        /** @private */\n        _this.multiSelection = false;\n        /** @private */\n        _this.rectSelected = false;\n        /** @private */\n        _this.previousSelectedCellsRect = [];\n        /** @private */\n        _this.multiCellCollection = [];\n        /** @private */\n        _this.selectedMultiCellCollection = [];\n        /** @private */\n        _this.tempMultiCellCollection = [];\n        /**\n         * @private\n         */\n        _this.tooltipCollection = [];\n        /**\n         * @private\n         */\n        _this.isCellData = false;\n        /** @private */\n        _this.isBlazor = false;\n        return _this;\n    }\n    HeatMap.prototype.preRender = function () {\n        this.initPrivateVariable();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    HeatMap.prototype.initPrivateVariable = function () {\n        this.renderer = new SvgRenderer(this.element.id);\n        this.canvasRenderer = new CanvasRenderer(this.element.id);\n        this.secondaryCanvasRenderer = new CanvasRenderer(this.element.id + '_secondary');\n        this.heatMapAxis = new AxisHelper(this);\n        this.heatMapSeries = new Series(this);\n        this.drawSvgCanvas = new DrawSvgCanvas(this);\n        this.twoDimensional = new TwoDimensional(this);\n        this.cellColor = new CellColor(this);\n        this.tempRectHoverClass = '';\n        this.tempTooltipRectId = '';\n        this.setCulture();\n        this.isBlazor = isBlazor();\n    };\n    /**\n     * Method to set culture for heatmap\n     */\n    HeatMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    HeatMap.prototype.render = function () {\n        this.updateBubbleHelperProperty();\n        this.trigger('load', { heatmap: (this.isBlazor ? null : this) });\n        this.initAxis();\n        this.processInitData();\n        this.setTheme();\n        this.calculateMaxLength();\n        this.heatMapAxis.calculateVisibleLabels();\n        this.twoDimensional.processDataSource(this.completeAdaptDataSource);\n        this.createSvg();\n        this.cellColor.getColorCollection();\n        this.calculateBounds();\n        this.renderElements();\n        this.appendSvgObject();\n        if (this.tooltipModule) {\n            this.tooltipModule.showHideTooltip(false);\n        }\n        this.renderComplete();\n    };\n    /**\n     * To re-calculate the datasource while changing datasource property dynamically.\n     * @private\n     */\n    HeatMap.prototype.reRenderDatasource = function () {\n        this.dataSourceMinValue = null;\n        this.dataSourceMaxValue = null;\n        this.processInitData();\n        this.calculateMaxLength();\n        this.heatMapAxis.calculateVisibleLabels();\n        this.twoDimensional.processDataSource(this.completeAdaptDataSource);\n        this.cellColor.getColorCollection();\n        this.calculateBounds();\n    };\n    /**\n     * To process datasource property.\n     * @private\n     */\n    HeatMap.prototype.processInitData = function () {\n        if (this.adaptorModule) {\n            this.adaptorModule.constructDatasource(this.dataSource, this.dataSourceSettings);\n        }\n        else {\n            this.completeAdaptDataSource = this.dataSource;\n        }\n    };\n    /**\n     * To set render mode of heatmap as SVG or Canvas.\n     * @private\n     */\n    HeatMap.prototype.setRenderMode = function () {\n        if (this.renderingMode === 'Canvas') {\n            this.enableCanvasRendering = true;\n        }\n        else if (this.renderingMode === 'Auto' &&\n            (this.axisCollections[0].axisLabelSize * this.axisCollections[1].axisLabelSize) >= 10000) {\n            this.enableCanvasRendering = true;\n        }\n        else {\n            this.enableCanvasRendering = false;\n        }\n    };\n    /**\n     * To set bubble helper private property.\n     * @private\n     */\n    HeatMap.prototype.updateBubbleHelperProperty = function () {\n        if (this.cellSettings.tileType === 'Bubble' &&\n            (this.cellSettings.bubbleType === 'Size' || this.cellSettings.bubbleType === 'Sector')) {\n            this.legendVisibilityByCellType = false;\n        }\n        else if (this.legendModule && this.legendSettings.visible) {\n            this.legendVisibilityByCellType = true;\n        }\n        if (this.cellSettings.tileType === 'Bubble' && this.cellSettings.bubbleType === 'SizeAndColor') {\n            this.bubbleSizeWithColor = true;\n        }\n        else {\n            this.bubbleSizeWithColor = false;\n        }\n    };\n    HeatMap.prototype.renderElements = function () {\n        this.tooltipCollection = [];\n        this.renderSecondaryElement();\n        this.renderBorder();\n        this.renderTitle();\n        this.heatMapAxis.renderAxes();\n        if (this.tooltipModule && this.showTooltip) {\n            this.tooltipModule.tooltipObject = null;\n            this.tooltipModule.createTooltipDiv(this);\n        }\n        this.heatMapSeries.renderRectSeries();\n        if (this.legendModule && this.legendSettings.visible\n            && this.legendVisibilityByCellType) {\n            this.legendModule.renderLegendItems();\n            if (this.paletteSettings.type === 'Fixed' && this.legendSettings.enableSmartLegend &&\n                this.legendSettings.labelDisplayType === 'None') {\n                this.legendModule.createTooltipDiv(this);\n            }\n        }\n    };\n    /**\n     * Get component name\n     */\n    HeatMap.prototype.getModuleName = function () {\n        return 'heatmap';\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    HeatMap.prototype.getPersistData = function () {\n        return '';\n    };\n    /**\n     * @private\n     */\n    // tslint:disable-next-line:max-func-body-length\n    HeatMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var renderer = false;\n        var refreshBounds = false;\n        var isUpdateSelection = true;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'renderingMode':\n                    this.rendering = false;\n                    isUpdateSelection = false;\n                    renderer = true;\n                    break;\n                case 'cellSettings':\n                    this.updateBubbleHelperProperty();\n                    if (this.legendModule && ((newProp.cellSettings.tileType !==\n                        oldProp.cellSettings.tileType) || (newProp.cellSettings.bubbleType !== oldProp.cellSettings.bubbleType))) {\n                        this.legendOnLoad = true;\n                        this.legendModule.updateLegendRangeCollections();\n                    }\n                    if (this.cellSettings.tileType === 'Bubble') {\n                        isUpdateSelection = false;\n                    }\n                    this.reRenderDatasource();\n                    refreshBounds = true;\n                    break;\n                case 'showTooltip':\n                    refreshBounds = true;\n                    break;\n                case 'dataSource':\n                case 'dataSourceSettings':\n                    this.isCellData = false;\n                    this.paletteCellSelectionUpdation();\n                    this.reRenderDatasource();\n                    isUpdateSelection = false;\n                    renderer = true;\n                    break;\n                case 'titleSettings':\n                case 'width':\n                case 'height':\n                case 'margin':\n                    refreshBounds = true;\n                    break;\n                case 'legendSettings':\n                    this.updateBubbleHelperProperty();\n                    if (this.legendVisibilityByCellType && (((newProp.legendSettings.visible !== oldProp.legendSettings.visible) ||\n                        (newProp.legendSettings.enableSmartLegend !== oldProp.legendSettings.enableSmartLegend)))) {\n                        this.legendOnLoad = true;\n                        this.legendModule.updateLegendRangeCollections();\n                    }\n                    else {\n                        this.legendOnLoad = false;\n                    }\n                    refreshBounds = true;\n                    break;\n                case 'yAxis':\n                case 'xAxis':\n                    this.paletteCellSelectionUpdation();\n                    this.reRenderDatasource();\n                    isUpdateSelection = false;\n                    refreshBounds = true;\n                    break;\n                case 'paletteSettings':\n                    this.paletteCellSelectionUpdation();\n                    this.twoDimensional.processDataSource(this.completeAdaptDataSource);\n                    this.cellColor.getColorCollection();\n                    this.calculateBounds();\n                    renderer = true;\n                    break;\n                case 'theme':\n                    this.setTheme();\n                    renderer = true;\n                    break;\n                case 'tooltipSettings':\n                    if (this.tooltipModule) {\n                        this.tooltipModule.tooltipObject.fill = this.tooltipSettings.fill;\n                        this.tooltipModule.tooltipObject.border = this.tooltipSettings.border;\n                        this.tooltipModule.tooltipObject.textStyle = this.tooltipSettings.textStyle;\n                        this.tooltipModule.tooltipObject.template = this.tooltipSettings.template;\n                        this.tooltipModule.tooltipObject.refresh();\n                    }\n                    break;\n            }\n        }\n        if (!refreshBounds && renderer) {\n            this.createSvg();\n            this.renderElements();\n            this.appendSvgObject();\n            this.trigger('created');\n            if (!isUpdateSelection) {\n                this.clearSelection();\n            }\n        }\n        else if (refreshBounds) {\n            this.createSvg();\n            this.refreshBound();\n            this.appendSvgObject();\n            this.trigger('created');\n        }\n        if (this.allowSelection && this.rectSelected) {\n            if (isUpdateSelection) {\n                this.updateCellSelection();\n            }\n            else {\n                this.clearSelection();\n            }\n        }\n        this.rendering = true;\n    };\n    HeatMap.prototype.paletteCellSelectionUpdation = function () {\n        this.updateBubbleHelperProperty();\n        if (this.legendVisibilityByCellType) {\n            this.legendOnLoad = true;\n            this.legendModule.updateLegendRangeCollections();\n        }\n    };\n    /**\n     * create svg or canvas element\n     * @private\n     */\n    HeatMap.prototype.createSvg = function () {\n        this.removeSvg();\n        this.setRenderMode();\n        this.calculateSize();\n        if (!this.enableCanvasRendering) {\n            this.svgObject = this.renderer.createSvg({\n                id: this.element.id + '_svg',\n                width: this.availableSize.width,\n                height: this.availableSize.height\n            });\n            if (this.cellSettings.border.width.toString() === '0' && this.cellSettings.tileType === 'Rect') {\n                this.svgObject.setAttribute('shape-rendering', 'crispEdges');\n            }\n        }\n        else {\n            this.svgObject = this.canvasRenderer.createCanvas({\n                id: this.element.id + '_canvas',\n                width: this.availableSize.width,\n                height: this.availableSize.height\n            });\n            if (this.allowSelection) {\n                this.createMultiCellDiv(true);\n            }\n        }\n    };\n    /**\n     *  To Remove the SVG.\n     * @private\n     */\n    HeatMap.prototype.removeSvg = function () {\n        if (document.getElementById(this.element.id + '_Secondary_Element')) {\n            remove(document.getElementById(this.element.id + '_Secondary_Element'));\n        }\n        if (document.getElementById(this.element.id + 'Celltooltipcontainer')) {\n            remove(document.getElementById(this.element.id + 'Celltooltipcontainer'));\n        }\n        if (document.getElementById(this.element.id + 'legendLabelTooltipContainer')) {\n            remove(document.getElementById(this.element.id + 'legendLabelTooltipContainer'));\n        }\n        if (document.getElementById(this.element.id + '_Multi_CellSelection_Canvas')) {\n            remove(document.getElementById(this.element.id + '_Multi_CellSelection_Canvas'));\n        }\n        if (document.getElementById(this.element.id + '_CellSelection_Container')) {\n            remove(document.getElementById(this.element.id + '_CellSelection_Container'));\n        }\n        if (this.svgObject) {\n            var svgElement = document.getElementById(this.svgObject.id);\n            if (svgElement) {\n                while (this.svgObject.childNodes.length) {\n                    this.svgObject.removeChild(this.svgObject.firstChild);\n                }\n                remove(this.svgObject);\n            }\n        }\n    };\n    HeatMap.prototype.renderSecondaryElement = function () {\n        var tooltipDiv = this.createElement('div');\n        tooltipDiv.id = this.element.id + '_Secondary_Element';\n        this.element.appendChild(tooltipDiv);\n        var divElement = this.createElement('div', {\n            id: this.element.id + '_CellSelection_Container',\n            styles: 'position:absolute; z-index: 2 ; top:' + this.initialClipRect.y + 'px' + '; left:' + this.initialClipRect.x + 'px',\n        });\n        this.element.appendChild(divElement);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return{ModuleDeclaration[]}\n     * @private\n     */\n    HeatMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.showTooltip) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this]\n            });\n        }\n        if (this.legendSettings) {\n            modules.push({\n                member: 'Legend',\n                args: [this]\n            });\n        }\n        if (this.dataSource) {\n            modules.push({\n                member: 'Adaptor',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}.\n     * @member of Heatmap\n     */\n    HeatMap.prototype.destroy = function () {\n        this.unWireEvents();\n        _super.prototype.destroy.call(this);\n        this.element.innerHTML = '';\n        this.element.classList.remove('e-heatmap');\n    };\n    /**\n     * Applies all the pending property changes and render the component again.\n     * @method destroy\n     * @return {void}.\n     */\n    HeatMap.prototype.refresh = function () {\n        _super.prototype.refresh.call(this);\n        this.element.classList.add('e-heatmap');\n    };\n    /**\n     * Appending svg object to the element\n     * @private\n     */\n    HeatMap.prototype.appendSvgObject = function () {\n        if (this.enableCanvasRendering && this.allowSelection) {\n            this.createMultiCellDiv(false);\n        }\n        else {\n            this.element.appendChild(this.svgObject);\n        }\n    };\n    HeatMap.prototype.renderBorder = function () {\n        this.border = {\n            width: 0\n        };\n        var width = 0;\n        var rect = new RectOption(this.element.id + '_HeatmapBorder', this.themeStyle.background, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n        this.drawSvgCanvas.drawRectangle(rect, this.svgObject);\n    };\n    HeatMap.prototype.calculateSize = function () {\n        var width = stringToNumber(this.width, this.element.offsetWidth) || this.element.offsetWidth || 600;\n        var height = stringToNumber(this.height, this.element.offsetHeight) || this.element.offsetHeight || 450;\n        this.availableSize = new Size(width, height);\n    };\n    HeatMap.prototype.renderTitle = function () {\n        if (this.titleSettings.text) {\n            var titleStyle = this.titleSettings.textStyle;\n            var anchor = titleStyle.textAlignment === 'Near' ? 'start' :\n                titleStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            this.elementSize = measureText(this.titleCollection[0], titleStyle);\n            var options = new TextOption(this.element.id + '_HeatmapTitle', new TextBasic(titlePositionX(this.availableSize.width - this.margin.left - this.margin.right, this.margin.left, this.margin.right, titleStyle), this.margin.top + ((this.elementSize.height) * 3 / 4), anchor, this.titleCollection), titleStyle, titleStyle.color || this.themeStyle.heatMapTitle);\n            if (this.titleCollection.length > 1) {\n                this.drawSvgCanvas.createWrapText(options, titleStyle, this.svgObject);\n            }\n            else {\n                this.drawSvgCanvas.createText(options, this.svgObject, this.titleCollection[0]);\n                if (this.titleCollection[0].indexOf('...') !== -1 && this.enableCanvasRendering) {\n                    this.tooltipCollection.push(new CanvasTooltip(this.titleSettings.text, new Rect(this.margin.left, this.margin.top, this.elementSize.width, this.elementSize.height)));\n                }\n            }\n        }\n    };\n    HeatMap.prototype.titleTooltip = function (event, x, y, isTouch) {\n        var targetId = event.target.id;\n        if ((targetId === (this.element.id + '_HeatmapTitle')) && (event.target.textContent.indexOf('...') > -1)) {\n            showTooltip(this.titleSettings.text, x, y, this.element.offsetWidth, this.element.id + '_Title_Tooltip', getElement(this.element.id + '_Secondary_Element'), isTouch, this);\n        }\n        else {\n            removeElement(this.element.id + '_Title_Tooltip');\n        }\n    };\n    HeatMap.prototype.axisTooltip = function (event, x, y, isTouch) {\n        var targetId = event.target.id;\n        if ((targetId.indexOf(this.element.id + '_XAxis_Label') !== -1) ||\n            (targetId.indexOf(this.element.id + '_XAxis_MultiLevel') !== -1) ||\n            (targetId.indexOf(this.element.id + '_YAxis_MultiLevel') !== -1)) {\n            var tooltipText = getTooltipText(this.tooltipCollection, x, y);\n            if (tooltipText) {\n                showTooltip(tooltipText, x, y, this.element.offsetWidth, this.element.id + '_axis_Tooltip', getElement(this.element.id + '_Secondary_Element'), this.isTouch, this);\n            }\n            else {\n                removeElement(this.element.id + '_axis_Tooltip');\n            }\n        }\n        else {\n            removeElement(this.element.id + '_axis_Tooltip');\n        }\n    };\n    HeatMap.prototype.isHeatmapRect = function (x, y) {\n        var firstRectDetails = [];\n        var lastRectDetails = [];\n        var isRect;\n        firstRectDetails.push(this.heatMapSeries.rectPositionCollection[0][0]);\n        lastRectDetails.push(this.heatMapSeries.rectPositionCollection[this.yLength - 1][this.xLength - 1]);\n        isRect = (x >= firstRectDetails[0].x && y >= firstRectDetails[0].y &&\n            x <= (lastRectDetails[0].x + lastRectDetails[0].width) &&\n            y <= (lastRectDetails[0].y + lastRectDetails[0].height)) ? true : false;\n        return isRect;\n    };\n    HeatMap.prototype.setTheme = function () {\n        /*! Set theme */\n        this.themeStyle = getThemeColor(this.theme);\n    };\n    HeatMap.prototype.calculateBounds = function () {\n        var margin = this.margin;\n        // Title Height;\n        var titleHeight = 0;\n        var padding = (this.legendModule && this.legendSettings.position === 'Top'\n            && this.legendVisibilityByCellType) || this.titleSettings.textStyle.size === '0px' ? 0 : 16; // title padding\n        var left = margin.left;\n        var width = this.availableSize.width - left - margin.right;\n        if ((this.paletteSettings.colorGradientMode === 'Column' || this.paletteSettings.colorGradientMode === 'Row') &&\n            this.paletteSettings.type === 'Gradient') {\n            if (this.paletteSettings.palette.length === 0) {\n                this.legendVisibilityByCellType = false;\n            }\n            else {\n                for (var i = 0; i < this.paletteSettings.palette.length; i++) {\n                    if (this.paletteSettings.palette[i].value !== null || '') {\n                        this.legendVisibilityByCellType = true;\n                    }\n                    else if (this.paletteSettings.palette[i].value === null || '') {\n                        this.legendVisibilityByCellType = false;\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.titleSettings.text) {\n            this.titleCollection = getTitle(this.titleSettings.text, this.titleSettings.textStyle, width);\n            titleHeight = (measureText(this.titleSettings.text, this.titleSettings.textStyle).height * this.titleCollection.length) +\n                padding;\n        }\n        var top = margin.top + titleHeight;\n        this.titleRect = new Rect(margin.left, margin.top, this.availableSize.width - margin.left - margin.right, titleHeight);\n        var height = this.availableSize.height - top - margin.bottom;\n        this.initialClipRect = new Rect(left, top, width, height);\n        var legendTop = this.initialClipRect.y;\n        if (this.legendModule && this.legendSettings.visible && this.legendVisibilityByCellType) {\n            this.legendModule.calculateLegendBounds(this.initialClipRect);\n        }\n        this.heatMapAxis.measureAxis(this.initialClipRect);\n        if (this.legendModule && this.legendSettings.visible && this.legendVisibilityByCellType) {\n            this.legendModule.calculateLegendSize(this.initialClipRect, legendTop);\n        }\n        this.heatMapAxis.calculateAxisSize(this.initialClipRect);\n    };\n    HeatMap.prototype.refreshBound = function () {\n        this.updateBubbleHelperProperty();\n        this.calculateBounds();\n        this.renderElements();\n    };\n    HeatMap.prototype.initAxis = function () {\n        var axis;\n        var axes = [this.xAxis, this.yAxis];\n        this.axisCollections = [];\n        for (var i = 0, len = axes.length; i < len; i++) {\n            axis = axes[i];\n            axis.orientation = (i === 0) ? 'Horizontal' : 'Vertical';\n            axis.jsonCellLabel = [];\n            this.axisCollections.push(axis);\n        }\n    };\n    /**\n     * Method to bind events for HeatMap\n     */\n    HeatMap.prototype.wireEvents = function () {\n        var _this = this;\n        /*! Find the Events type */\n        var isIE11Pointer = Browser.isPointer;\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        EventHandler.add(this.element, Browser.isDevice ? start : 'click', this.heatMapMouseClick, this);\n        EventHandler.add(this.element, start, this.heatMapMouseMove, this);\n        EventHandler.add(this.element, stop, this.heatMapMouseLeave, this);\n        EventHandler.add(this.element, move, this.heatMapMouseMove, this);\n        EventHandler.add(this.element, cancel, this.heatMapMouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.heatMapResize.bind(this));\n        var heatmap = this;\n        /**\n         * Support for touch tapHold and tap for HeatMap\n         */\n        var touchObj = new Touch(this.element, {\n            tapHold: function () {\n                heatmap.isCellTapHold = true;\n                heatmap.getDataCollection();\n                heatmap.currentRect.allowCollection = false;\n                heatmap.setCellOpacity();\n                var argData = {\n                    heatmap: (_this.isBlazor ? null : heatmap),\n                    cancel: false,\n                    name: 'cellSelected',\n                    data: heatmap.multiCellCollection\n                };\n                heatmap.trigger('cellSelected', argData);\n            },\n            tap: function () {\n                var isCellTap = false;\n                if (!heatmap.isCellTapHold) {\n                    isCellTap = true;\n                }\n                heatmap.tooltipOnMouseMove(null, heatmap.currentRect, isCellTap);\n            }\n        });\n        this.setStyle(this.element);\n    };\n    /**\n     * Applying styles for heatmap element\n     */\n    HeatMap.prototype.setStyle = function (element) {\n        element.style.touchAction = 'element';\n        element.style.msTouchAction = 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n        element.style.display = 'block';\n    };\n    /**\n     * Method to unbind events for HeatMap\n     */\n    HeatMap.prototype.unWireEvents = function () {\n        /*! Find the Events type */\n        var isIE11Pointer = Browser.isPointer;\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        EventHandler.remove(this.element, Browser.isDevice ? start : 'click', this.heatMapMouseClick);\n        EventHandler.remove(this.element, start, this.heatMapMouseMove);\n        EventHandler.remove(this.element, move, this.heatMapMouseLeave);\n        EventHandler.remove(this.element, move, this.heatMapMouseMove);\n        EventHandler.remove(this.element, cancel, this.heatMapMouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.heatMapResize);\n    };\n    /**\n     * Handles the heatmap resize.\n     * @return {boolean}\n     * @private\n     */\n    HeatMap.prototype.heatMapResize = function (e) {\n        var _this = this;\n        this.resizing = true;\n        var argData = {\n            heatmap: (this.isBlazor ? null : this),\n            cancel: false,\n            name: 'resized',\n            currentSize: new Size(0, 0),\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n        };\n        if (this.resizeTimer) {\n            clearTimeout(this.resizeTimer);\n        }\n        this.resizeTimer = setTimeout(function () {\n            if (_this.isDestroyed) {\n                clearTimeout(_this.resizeTimer);\n                return;\n            }\n            _this.createSvg();\n            argData.currentSize = _this.availableSize;\n            _this.trigger('resized', argData);\n            _this.refreshBound();\n            _this.appendSvgObject();\n            if (_this.allowSelection) {\n                _this.updateCellSelection();\n            }\n            _this.trigger('loaded', (_this.isBlazor ? null : { heatmap: _this }));\n            _this.resizing = false;\n        }, 500);\n        return false;\n    };\n    /**\n     * Method to bind selection after window resize for HeatMap\n     */\n    HeatMap.prototype.updateCellSelection = function () {\n        var wSize = this.initialClipRect.width / this.axisCollections[0].axisLabelSize;\n        var hSize = this.initialClipRect.height / this.axisCollections[1].axisLabelSize;\n        var x = this.initialClipRect.x;\n        var y = this.initialClipRect.y;\n        if (!this.enableCanvasRendering) {\n            if (this.multiCellCollection.length !== 0) {\n                var containersRect = document.getElementById(this.element.id + '_Container_RectGroup');\n                var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n                for (var i = 0; i < containersRect.childNodes.length; i++) {\n                    containersRect.childNodes[i].setAttribute('opacity', '0.3');\n                    if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                        containerText.childNodes[i].setAttribute('opacity', '0.3');\n                    }\n                }\n                for (var i = 0; i < this.multiCellCollection.length; i++) {\n                    var collectionClass = this.multiCellCollection[i].cellElement;\n                    var cellIndex = collectionClass.id.replace(this.element.id + '_HeatMapRect_', '');\n                    var index = parseInt(cellIndex, 10);\n                    containersRect.childNodes[index].setAttribute('opacity', '1');\n                    if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                        var getText = document.getElementById(this.element.id + '_HeatMapRectLabels_' + index);\n                        if (getText) {\n                            getText.setAttribute('opacity', '1');\n                        }\n                        this.addSvgClass(containersRect.childNodes[index]);\n                    }\n                }\n            }\n        }\n        else if (this.enableCanvasRendering) {\n            var rect = this.multiCellCollection;\n            var oldCanvas = document.getElementById(this.element.id + '_canvas');\n            var newCanvas = document.getElementById(this.element.id + '_secondary_canvas');\n            var initialRect = this.initialClipRect;\n            var rectHeight = initialRect.y + initialRect.height;\n            var rectWidth = initialRect.x + initialRect.width;\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                this.multiCellCollection[i].width = rect[i].width = wSize;\n                this.multiCellCollection[i].height = rect[i].height = hSize;\n                this.multiCellCollection[i].x = rect[i].x = x + wSize * this.multiCellCollection[i].xPosition;\n                this.multiCellCollection[i].y = rect[i].y = y + hSize * this.multiCellCollection[i].yPosition;\n                var rectImage = oldCanvas.getContext('2d').getImageData(rect[i].x, rect[i].y, rect[i].width, rect[i].height);\n                newCanvas.getContext('2d').putImageData(rectImage, rect[i].x, rect[i].y);\n                oldCanvas.style.opacity = '0.3';\n            }\n            var topPositions = oldCanvas.getContext('2d').getImageData(0, 0, this.availableSize.width, initialRect.y);\n            newCanvas.getContext('2d').putImageData(topPositions, 0, 0);\n            var bottomPositions = oldCanvas.getContext('2d').getImageData(0, rectHeight, this.availableSize.width, this.availableSize.height - rectHeight);\n            newCanvas.getContext('2d').putImageData(bottomPositions, 0, initialRect.y + initialRect.height);\n            var rightPosition = oldCanvas.getContext('2d').\n                getImageData(rectWidth, 0, this.availableSize.width - rectWidth, this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(rightPosition, rectWidth, 0);\n            var leftPosition = oldCanvas.getContext('2d').getImageData(0, 0, initialRect.x, this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(leftPosition, 0, 0);\n            removeElement(this.element.id + '_selectedCells');\n        }\n    };\n    HeatMap.prototype.clearSVGSelection = function () {\n        var rect = document.getElementById(this.element.id + '_Container_RectGroup');\n        var text = document.getElementById(this.element.id + '_Container_TextGroup');\n        for (var i = 0; i < rect.childNodes.length; i++) {\n            var elementClassName = rect.childNodes[i].getAttribute('class');\n            if (elementClassName === this.element.id + '_selected') {\n                this.removeSvgClass(rect.childNodes[i], elementClassName);\n            }\n            rect.childNodes[i].setAttribute('opacity', '1');\n            if (this.cellSettings.showLabel && text.childNodes[i]) {\n                text.childNodes[i].setAttribute('opacity', '1');\n            }\n        }\n    };\n    /**\n     * Get the maximum length of data source for both horizontal and vertical\n     * @private\n     */\n    HeatMap.prototype.calculateMaxLength = function () {\n        var dataSource = this.completeAdaptDataSource;\n        if (dataSource && dataSource.length > 0) {\n            var xAxisMax = dataSource.length - 1;\n            var yAxisMax = 0;\n            for (var i = 0; i <= xAxisMax; i++) {\n                var length_1 = dataSource[i].length;\n                yAxisMax = yAxisMax > length_1 ? yAxisMax : length_1;\n            }\n            this.axisCollections[0].maxLength = xAxisMax;\n            this.axisCollections[1].maxLength = yAxisMax - 1;\n        }\n        else {\n            this.axisCollections[0].maxLength = 0;\n            this.axisCollections[1].maxLength = 0;\n        }\n    };\n    /**\n     * To find mouse x, y for aligned heatmap element svg position\n     */\n    HeatMap.prototype.setMouseXY = function (pageX, pageY) {\n        var rect = this.element.getBoundingClientRect();\n        var svgCanvasRect;\n        if (this.enableCanvasRendering) {\n            svgCanvasRect = document.getElementById(this.element.id + '_canvas').getBoundingClientRect();\n        }\n        else {\n            svgCanvasRect = document.getElementById(this.element.id + '_svg').getBoundingClientRect();\n        }\n        this.mouseX = (pageX - rect.left) - Math.max(svgCanvasRect.left - rect.left, 0);\n        this.mouseY = (pageY - rect.top) - Math.max(svgCanvasRect.top - rect.top, 0);\n    };\n    HeatMap.prototype.heatMapMouseClick = function (e) {\n        var pageX;\n        var pageY;\n        var tooltipText;\n        var touchArg;\n        var elementRect = this.element.getBoundingClientRect();\n        if (e.type === 'touchstart') {\n            this.isTouch = true;\n            touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = false;\n            pageY = e.clientY;\n            pageX = e.clientX;\n        }\n        pageX -= elementRect.left;\n        pageY -= elementRect.top;\n        var isheatmapRect = this.isHeatmapRect(pageX, pageY);\n        if (isheatmapRect) {\n            var currentRect = this.heatMapSeries.getCurrentRect(pageX, pageY);\n            this.trigger('cellClick', {\n                heatmap: (this.isBlazor ? null : this),\n                value: currentRect.value,\n                x: currentRect.x,\n                y: currentRect.y,\n                xLabel: this.heatMapSeries.hoverXAxisLabel,\n                yLabel: this.heatMapSeries.hoverYAxisLabel,\n                xValue: this.heatMapSeries.hoverXAxisValue,\n                yValue: this.heatMapSeries.hoverYAxisValue,\n                cellElement: this.enableCanvasRendering ? null : document.getElementById(currentRect.id)\n            });\n        }\n        this.notify('click', e);\n        if (this.paletteSettings.type !== 'Gradient' && this.legendModule\n            && this.legendSettings.visible && this.legendVisibilityByCellType) {\n            var page = this.legendModule.navigationCollections;\n            if (page.length && pageX > page[0].x && pageX < page[0].x + page[0].width &&\n                pageY > page[0].y && pageY < page[0].y + page[0].height) {\n                this.legendModule.translatePage(this, this.legendModule.currentPage, true);\n            }\n            else if (page.length && pageX > page[1].x && pageX < page[1].x + page[1].width &&\n                pageY > page[1].y && pageY < page[1].y + page[1].height) {\n                this.legendModule.translatePage(this, this.legendModule.currentPage, false);\n            }\n            var legendRange = this.legendModule.legendRange;\n            var legendTextRange = this.legendModule.legendTextRange;\n            var loop = true;\n            for (var i = 0; i < legendRange.length; i++) {\n                if (this.legendModule && this.legendSettings.toggleVisibility &&\n                    this.legendModule.currentPage === legendRange[i].currentPage) {\n                    if ((loop && (pageX >= legendRange[i].x && pageX <= legendRange[i].width + legendRange[i].x) &&\n                        (pageY >= legendRange[i].y && pageY <= legendRange[i].y + legendRange[i].height) ||\n                        ((this.legendSettings.showLabel && this.legendSettings.labelDisplayType !== 'None' &&\n                            pageX >= legendTextRange[i].x && pageX <= legendTextRange[i].width + legendTextRange[i].x) &&\n                            (pageY >= legendTextRange[i].y && pageY <= legendTextRange[i].y + legendTextRange[i].height)))) {\n                        this.legendModule.legendRangeSelection(i);\n                        loop = false;\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse Move.\n     * @return {boolean}\n     * @private\n     */\n    HeatMap.prototype.heatMapMouseMove = function (e) {\n        var pageX;\n        var pageY;\n        var tooltipText;\n        var touchArg;\n        var elementRect = this.element.getBoundingClientRect();\n        if (e.type === 'touchmove' || e.type === 'touchstart') {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].clientX;\n            pageY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            this.isTouch = false;\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        pageX -= elementRect.left;\n        pageY -= elementRect.top;\n        this.setMouseXY(pageX, pageY);\n        if (e.target && e.target.id) {\n            var isheatmapRect = this.isHeatmapRect(pageX, pageY);\n            if (this.legendModule) {\n                if (isheatmapRect) {\n                    if (this.paletteSettings.type === 'Gradient' &&\n                        this.legendSettings.showGradientPointer && this.legendSettings.visible && this.legendVisibilityByCellType) {\n                        this.legendModule.renderGradientPointer(e, pageX, pageY);\n                    }\n                }\n                else {\n                    this.legendModule.removeGradientPointer();\n                }\n                this.renderMousePointer(pageX, pageY);\n            }\n            var isshowTooltip = void 0;\n            var currentRect = void 0;\n            isshowTooltip = this.showTooltip && this.tooltipModule ? isheatmapRect : false;\n            if (isheatmapRect) {\n                currentRect = this.heatMapSeries.getCurrentRect(pageX, pageY);\n                if (e.which !== 2 && e.which !== 3) {\n                    isshowTooltip = this.cellSelectionOnMouseMove(e, currentRect, pageX, pageY, isshowTooltip);\n                }\n            }\n            this.tooltipOnMouseMove(e, currentRect, isshowTooltip, isheatmapRect);\n            if (this.legendModule && this.legendSettings.visible && this.paletteSettings.type === 'Fixed' &&\n                this.legendSettings.enableSmartLegend && this.legendSettings.labelDisplayType === 'None') {\n                this.legendModule.createTooltip(pageX, pageY);\n            }\n            if (!this.enableCanvasRendering) {\n                if (this.titleSettings.text && this.titleSettings.textStyle.textOverflow === 'Trim') {\n                    this.titleTooltip(e, pageX, pageY, this.isTouch);\n                }\n                this.axisTooltip(e, pageX, pageY, this.isTouch);\n                if (this.legendModule && this.legendSettings.visible && this.legendSettings.showLabel && this.legendVisibilityByCellType) {\n                    this.legendModule.renderLegendLabelTooltip(e, pageX, pageY);\n                }\n            }\n            else {\n                elementRect = this.element.getBoundingClientRect();\n                var tooltipRect = (this.paletteSettings.type === 'Fixed' && this.legendSettings.enableSmartLegend &&\n                    this.legendSettings.labelDisplayType === 'None') ? false : true;\n                tooltipText = getTooltipText(this.tooltipCollection, pageX, pageY) ||\n                    (this.legendModule && tooltipRect && getTooltipText(this.legendModule.legendLabelTooltip, pageX, pageY));\n                if (tooltipText) {\n                    showTooltip(tooltipText, pageX, pageY, this.element.offsetWidth, this.element.id + '_canvas_Tooltip', getElement(this.element.id + '_Secondary_Element'), this.isTouch, this);\n                }\n                else {\n                    removeElement(this.element.id + '_canvas_Tooltip');\n                }\n            }\n        }\n        return true;\n    };\n    /**\n     * Triggering cell selection\n     */\n    HeatMap.prototype.cellSelectionOnMouseMove = function (e, currentRect, pageX, pageY, isshowTooltip) {\n        if ((this.cellSettings.tileType === 'Rect' && e.type === 'mousedown' || e.type === 'touchstart'\n            || e.type === 'pointerdown') && this.allowSelection) {\n            this.previousRect = currentRect;\n            this.multiSelection = true;\n            this.rectSelected = true;\n            this.initialCellX = pageX;\n            this.initialCellY = pageY;\n            e.preventDefault();\n        }\n        if (this.cellSettings.tileType === 'Rect' && this.multiSelection && currentRect) {\n            isshowTooltip = false;\n            this.highlightSelectedCells(this.previousRect, currentRect, pageX, pageY, e);\n        }\n        return isshowTooltip;\n    };\n    /**\n     * Rendering tooltip on mouse move\n     */\n    HeatMap.prototype.tooltipOnMouseMove = function (e, currentRect, isshowTooltip, isheatmapRect) {\n        var _this = this;\n        if (isshowTooltip && currentRect) {\n            if (this.tempTooltipRectId !== currentRect.id) {\n                if (this.showTooltip) {\n                    if ((this.cellSettings.enableCellHighlighting || (this.tooltipModule && this.showTooltip))\n                        && !this.enableCanvasRendering) {\n                        this.heatMapSeries.highlightSvgRect(currentRect.id);\n                    }\n                    this.tooltipModule.renderTooltip(currentRect);\n                    if (this.isTouch) {\n                        if (this.tooltipTimer) {\n                            window.clearTimeout(this.tooltipTimer);\n                        }\n                        this.tooltipTimer = setTimeout(function () {\n                            _this.tooltipModule.tooltipObject.fadeOut();\n                            _this.tooltipModule.isFadeout = true;\n                        }, 1500);\n                        if (e) {\n                            if (e.type === 'touchmove') {\n                                e.preventDefault();\n                            }\n                        }\n                    }\n                }\n                this.tempTooltipRectId = currentRect.id;\n            }\n        }\n        else {\n            if (e !== null) {\n                if (!isheatmapRect) {\n                    if ((this.cellSettings.enableCellHighlighting || this.showTooltip) && !this.enableCanvasRendering) {\n                        this.heatMapSeries.highlightSvgRect(e.target.id);\n                    }\n                    if (this.tooltipModule && this.showTooltip) {\n                        this.tooltipModule.showHideTooltip(false, true);\n                    }\n                }\n            }\n            this.tempTooltipRectId = '';\n        }\n    };\n    /**\n     * To select the multiple cells on mouse move action\n     */\n    HeatMap.prototype.highlightSelectedCells = function (previousRect, currentRect, pageX, pageY, e) {\n        var pXIndex = previousRect.xIndex;\n        var pYIndex = previousRect.yIndex;\n        var cXIndex = currentRect.xIndex;\n        var cYIndex = currentRect.yIndex;\n        this.currentRect = currentRect;\n        this.selectedCellsRect = new Rect(0, 0, 0, 0);\n        this.selectedCellsRect.x = previousRect.x > currentRect.x ? currentRect.x : previousRect.x;\n        this.selectedCellsRect.y = previousRect.y > currentRect.y ? currentRect.y : previousRect.y;\n        this.selectedCellsRect.width = ((previousRect.x > currentRect.x ? (pXIndex - cXIndex) :\n            (cXIndex - pXIndex)) + 1) * currentRect.width;\n        this.selectedCellsRect.height = ((previousRect.y > currentRect.y ? (pYIndex - cYIndex) :\n            (cYIndex - pYIndex)) + 1) * currentRect.height;\n        if (e.type === 'touchstart') {\n            this.isCellTapHold = true;\n        }\n        else {\n            this.isCellTapHold = false;\n        }\n        e.preventDefault();\n        if (e.ctrlKey === false && e.type !== 'touchstart' && e.type !== 'touchmove') {\n            this.removeSelectedCellsBorder();\n        }\n        var x = this.initialCellX > pageX ? pageX : this.initialCellX;\n        var y = this.initialCellY > pageY ? pageY : this.initialCellY;\n        var parentDiv = document.getElementById(this.element.id + '_CellSelection_Container');\n        var svgObject = this.renderer.createSvg({\n            id: this.element.id + '_CellSelection_Container_svg',\n            width: this.initialClipRect.width,\n            height: this.initialClipRect.height,\n        });\n        parentDiv.appendChild(svgObject);\n        var parent = document.getElementById(this.element.id + '_CellSelection_Container_svg');\n        var rect = new Rect(x - this.initialClipRect.x, y - this.initialClipRect.y, Math.abs(pageX - this.initialCellX), Math.abs(pageY - this.initialCellY));\n        var rectItems = new RectOption(this.element.id + '_selectedCells', '#87ceeb', { color: 'transparent', width: 1 }, 1, rect, '#0000ff');\n        parent.appendChild(this.renderer.drawRectangle(rectItems));\n        document.getElementById(this.element.id + '_selectedCells').style.opacity = '0.5';\n    };\n    /**\n     * Method to get selected cell data collection for HeatMap\n     */\n    HeatMap.prototype.getDataCollection = function () {\n        var pXIndex = this.previousRect.xIndex;\n        var pYIndex = this.previousRect.yIndex;\n        var cXIndex = this.currentRect.xIndex;\n        var cYIndex = this.currentRect.yIndex;\n        var minX = cXIndex > pXIndex ? pXIndex : cXIndex;\n        var maxX = cXIndex > pXIndex ? cXIndex : pXIndex;\n        var minY = cYIndex > pYIndex ? pYIndex : cYIndex;\n        var maxY = cYIndex > pYIndex ? cYIndex : pYIndex;\n        var tempX = minX;\n        var tempY = minY;\n        var cellX = this.previousRect.x;\n        var cellY = this.previousRect.y;\n        this.getCellCollection(this.currentRect, this.previousRect, true, tempX, tempY, maxX, maxY, minX, cellX, cellY);\n        tempX = minX;\n        tempY = minY;\n        cellX = this.previousRect.x;\n        cellY = this.previousRect.y;\n        this.checkSelectedCells();\n        this.getCellCollection(this.currentRect, this.previousRect, false, tempX, tempY, maxX, maxY, minX, cellX, cellY);\n        this.selectedMultiCellCollection = [];\n        this.canvasSelectedCells = new Rect(0, 0, 0, 0);\n        this.selectedCellCount = 0;\n    };\n    /**\n     * To get the selected datas.\n     */\n    HeatMap.prototype.getCellCollection = function (currentRect, previousRect, singleCellData, tempX, tempY, maxX, maxY, minX, cellX, cellY) {\n        var xIndex = Math.abs((currentRect.xIndex === previousRect.xIndex ?\n            0 : currentRect.xIndex - previousRect.xIndex)) + 1;\n        var yIndex = Math.abs((currentRect.yIndex === previousRect.yIndex ?\n            0 : currentRect.yIndex - previousRect.yIndex)) + 1;\n        for (var i = 0; i < (xIndex * yIndex); i++) {\n            if (singleCellData) {\n                this.getSelectedCellData(cellX, cellY, true);\n            }\n            else {\n                this.getSelectedCellData(cellX, cellY, false);\n            }\n            if (tempX < maxX) {\n                cellX += currentRect.xIndex > previousRect.xIndex ? currentRect.width : -currentRect.width;\n                tempX++;\n            }\n            else if (tempY < maxY) {\n                cellY += currentRect.yIndex > previousRect.yIndex ? currentRect.height : -currentRect.height;\n                cellX = previousRect.x;\n                tempX = minX;\n            }\n        }\n    };\n    /**\n     * To remove the selection on mouse click without ctrl key.\n     */\n    HeatMap.prototype.removeSelectedCellsBorder = function () {\n        if (!this.enableCanvasRendering) {\n            var containerRect = document.getElementById(this.element.id + '_Container_RectGroup');\n            var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n            for (var i = 0; i < containerRect.childNodes.length; i++) {\n                var elementClassName = containerRect.childNodes[i].getAttribute('class');\n                containerRect.childNodes[i].setAttribute('opacity', '0.3');\n                if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                    containerText.childNodes[i].setAttribute('opacity', '0.3');\n                    this.removeSvgClass(containerRect.childNodes[i], elementClassName);\n                }\n            }\n        }\n        else {\n            var ctx = this.secondaryCanvasRenderer.ctx;\n            for (var i = 0; i < this.previousSelectedCellsRect.length; i++) {\n                var rect = this.previousSelectedCellsRect[i];\n                ctx.save();\n                ctx.clearRect(rect.x - 1, rect.y - 1, rect.width + 2, rect.height + 2);\n                ctx.restore();\n            }\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                var rects = this.multiCellCollection[i];\n                if (this.multiCellCollection.length > 0) {\n                    ctx.save();\n                    ctx.clearRect(rects.x - 1, rects.y - 1, rects.width + 2, rects.height + 2);\n                }\n            }\n        }\n        this.multiCellCollection = [];\n    };\n    /**\n     * To highlight the selected multiple cells on mouse move action in canvas mode.\n     */\n    HeatMap.prototype.highlightSelectedAreaInCanvas = function (rect) {\n        if (rect.x) {\n            var oldCanvas = document.getElementById(this.element.id + '_canvas');\n            var newCanvas = document.getElementById(this.element.id + '_secondary_canvas');\n            var initialRect = this.initialClipRect;\n            var rectImage = oldCanvas.getContext('2d').getImageData(rect.x, rect.y, rect.width, rect.height);\n            newCanvas.getContext('2d').putImageData(rectImage, rect.x, rect.y);\n            oldCanvas.style.opacity = '0.3';\n            var topPosition = oldCanvas.getContext('2d').getImageData(0, 0, this.availableSize.width, initialRect.y);\n            newCanvas.getContext('2d').putImageData(topPosition, 0, 0);\n            var bottomPosition = oldCanvas.getContext('2d').getImageData(0, initialRect.y + initialRect.height, this.availableSize.width, this.availableSize.height - (initialRect.y + initialRect.height));\n            newCanvas.getContext('2d').putImageData(bottomPosition, 0, initialRect.y + initialRect.height);\n            var rightPosition = oldCanvas.getContext('2d').getImageData(initialRect.x + initialRect.width, 0, this.availableSize.width - (initialRect.x + initialRect.width), this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(rightPosition, initialRect.x + initialRect.width, 0);\n            var leftPosition = oldCanvas.getContext('2d').getImageData(0, 0, initialRect.x, this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(leftPosition, 0, 0);\n        }\n    };\n    /**\n     * To get the collection of selected cells.\n     */\n    HeatMap.prototype.getSelectedCellData = function (cellX, cellY, cellCollection) {\n        var xAxis = this.axisCollections[0];\n        var yAxis = this.axisCollections[1];\n        var xLabels = xAxis.tooltipLabels;\n        var yLabels = yAxis.tooltipLabels.slice().reverse();\n        var rectPosition = this.heatMapSeries.getCurrentRect(cellX + 1, cellY + 1);\n        var currentRect = document.getElementById(rectPosition.id);\n        var cellDetails = new SelectedCellDetails(null, '', '', 0, 0, null, 0, 0, 0, 0, 0, 0);\n        cellDetails.value = rectPosition.value;\n        cellDetails.xLabel = xLabels[rectPosition.xIndex].toString();\n        cellDetails.yLabel = yLabels[rectPosition.yIndex].toString();\n        cellDetails.xValue = xAxis.labelValue[rectPosition.xIndex];\n        cellDetails.yValue = yAxis.labelValue.slice().reverse()[rectPosition.yIndex];\n        cellDetails.cellElement = this.enableCanvasRendering ? null : currentRect;\n        cellDetails.xPosition = rectPosition.xIndex;\n        cellDetails.yPosition = rectPosition.yIndex;\n        cellDetails.width = this.currentRect.width;\n        cellDetails.height = this.currentRect.height;\n        cellDetails.x = this.currentRect.x;\n        cellDetails.y = this.currentRect.y;\n        this.currentRect.allowCollection = true;\n        this.addSvgClass(currentRect);\n        if (cellCollection) {\n            this.selectedMultiCellCollection.push(cellDetails);\n            this.currentRect.allowCollection = false;\n        }\n        else {\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                if (this.multiCellCollection[i].xPosition === cellDetails.xPosition &&\n                    this.multiCellCollection[i].yPosition === cellDetails.yPosition) {\n                    this.currentRect.allowCollection = false;\n                    if (this.selectedCellCount === this.selectedMultiCellCollection.length) {\n                        this.currentRect.allowCollection = false;\n                        if (!this.enableCanvasRendering) {\n                            for (var j = 0; j < this.selectedMultiCellCollection.length; j++) {\n                                var rectElement = this.selectedMultiCellCollection[j].cellElement;\n                                if (rectElement) {\n                                    var index = rectElement.id.replace(this.element.id + '_HeatMapRect_', '');\n                                    var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n                                    var elementClassName = rectElement.getAttribute('class');\n                                    rectElement.setAttribute('opacity', '0.3');\n                                    var getText = document.getElementById(this.element.id + '_HeatMapRectLabels_' + index);\n                                    if (getText) {\n                                        getText.setAttribute('opacity', '0.3');\n                                    }\n                                    this.removeSvgClass(rectElement, elementClassName);\n                                }\n                            }\n                        }\n                        else {\n                            var ctx = this.secondaryCanvasRenderer.ctx;\n                            var rect = this.canvasSelectedCells;\n                            ctx.save();\n                            ctx.clearRect(rect.x - 1, rect.y - 1, rect.width + 2, rect.height + 2);\n                            ctx.restore();\n                            this.selectedCellsRect = new Rect(0, 0, 0, 0);\n                        }\n                        this.multiCellCollection.splice(i, 1);\n                    }\n                }\n            }\n        }\n        if (rectPosition.visible && !isNullOrUndefined(rectPosition.value) && this.currentRect.allowCollection === true) {\n            this.multiCellCollection.push(cellDetails);\n        }\n    };\n    /**\n     * To add class for selected cells\n     * @private\n     */\n    HeatMap.prototype.addSvgClass = function (element) {\n        if (!this.enableCanvasRendering) {\n            var className = this.element.id + '_selected';\n            element.setAttribute('class', className);\n        }\n    };\n    /**\n     * To remove class for unselected cells\n     * @private\n     */\n    HeatMap.prototype.removeSvgClass = function (rectElement, className) {\n        if (className) {\n            rectElement.setAttribute('class', className.replace(className, ''));\n        }\n    };\n    /**\n     * To clear the multi cell selection\n     */\n    HeatMap.prototype.clearSelection = function () {\n        if (!this.enableCanvasRendering && this.allowSelection) {\n            this.clearSVGSelection();\n        }\n        if (this.enableCanvasRendering) {\n            var ctx = this.secondaryCanvasRenderer.ctx;\n            for (var i = 0; i < this.previousSelectedCellsRect.length; i++) {\n                ctx.save();\n                ctx.clearRect(this.previousSelectedCellsRect[i].x - 1, this.previousSelectedCellsRect[i].y - 1, this.previousSelectedCellsRect[i].width + 2, this.previousSelectedCellsRect[i].height + 2);\n                ctx.restore();\n            }\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                var rects = this.multiCellCollection[i];\n                if (this.multiCellCollection.length > 0) {\n                    ctx.save();\n                    ctx.clearRect(rects.x - 1, rects.y - 1, rects.width + 2, rects.height + 2);\n                }\n            }\n            var canvas = document.getElementById(this.element.id + '_canvas');\n            canvas.style.opacity = '1';\n        }\n        this.tempMultiCellCollection = [];\n        this.multiCellCollection = [];\n        this.rectSelected = false;\n    };\n    HeatMap.prototype.renderMousePointer = function (pageX, pageY) {\n        var legendRange = this.legendModule.legendRange;\n        var legendTextRange = this.legendModule.legendTextRange;\n        var loop = true;\n        for (var i = 0; i < legendRange.length; i++) {\n            if (this.legendSettings.toggleVisibility && this.legendModule.currentPage === legendRange[i].currentPage) {\n                if ((loop && (pageX >= legendRange[i].x && pageX <= legendRange[i].width + legendRange[i].x) &&\n                    (pageY >= legendRange[i].y && pageY <= legendRange[i].y + legendRange[i].height) ||\n                    ((this.legendSettings.showLabel && this.legendSettings.labelDisplayType !== 'None' &&\n                        pageX >= legendTextRange[i].x && pageX <= legendTextRange[i].width + legendTextRange[i].x) &&\n                        (pageY >= legendTextRange[i].y && pageY <= legendTextRange[i].y + legendTextRange[i].height)))) {\n                    if (this.enableCanvasRendering) {\n                        document.getElementById(this.element.id + '_canvas').style.cursor = 'Pointer';\n                    }\n                    else {\n                        document.getElementById(this.element.id + '_svg').style.cursor = 'Pointer';\n                    }\n                    loop = false;\n                }\n                else if (loop) {\n                    if (this.enableCanvasRendering) {\n                        document.getElementById(this.element.id + '_canvas').style.cursor = '';\n                    }\n                    else {\n                        document.getElementById(this.element.id + '_svg').style.cursor = '';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Handles the mouse end.\n     * @return {boolean}\n     * @private\n     */\n    HeatMap.prototype.heatMapMouseLeave = function (e) {\n        var _this = this;\n        if (e.target && e.target.id &&\n            (this.cellSettings.enableCellHighlighting || (this.tooltipModule && this.showTooltip))\n            && !this.enableCanvasRendering) {\n            this.heatMapSeries.highlightSvgRect(this.tempTooltipRectId);\n        }\n        if (this.allowSelection && this.multiSelection) {\n            this.multiSelection = false;\n            if (e.type === 'mouseup' || e.type === 'touchend' || e.type === 'pointerup') {\n                if (e.which !== 2 && e.which !== 3) {\n                    if (this.isCellTapHold === false) {\n                        this.getDataCollection();\n                        this.currentRect.allowCollection = false;\n                        this.setCellOpacity();\n                        var argData = {\n                            heatmap: (this.isBlazor ? null : this),\n                            cancel: false,\n                            name: 'cellSelected',\n                            data: this.multiCellCollection\n                        };\n                        this.trigger('cellSelected', argData);\n                    }\n                    else {\n                        this.isCellTapHold = false;\n                    }\n                }\n            }\n            else if (e.type === 'mouseleave' && (this.element.id + '_selectedCells')) {\n                removeElement(this.element.id + '_selectedCells');\n            }\n        }\n        if (this.tooltipModule && this.showTooltip && e.type === 'mouseleave') {\n            this.tooltipModule.showHideTooltip(false);\n        }\n        this.tempTooltipRectId = '';\n        if (this.legendModule && this.legendSettings.visible && this.legendModule.tooltipObject &&\n            this.legendModule.tooltipObject.element) {\n            var tooltipElement_1 = this.legendModule.tooltipObject.element.firstChild;\n            if (e.type === 'mouseleave') {\n                tooltipElement_1.setAttribute('opacity', '0');\n            }\n            else {\n                if (this.legendTooltipTimer) {\n                    window.clearTimeout(this.legendTooltipTimer);\n                }\n                this.legendTooltipTimer = setTimeout(function () {\n                    tooltipElement_1.setAttribute('opacity', '0');\n                }, 1500);\n            }\n        }\n        if (this.paletteSettings.type === 'Gradient' && this.legendModule && this.legendSettings.showGradientPointer &&\n            this.legendSettings.visible && this.legendVisibilityByCellType) {\n            if (e.type === 'mouseleave') {\n                this.legendModule.removeGradientPointer();\n            }\n            else {\n                if (this.gradientTimer) {\n                    window.clearTimeout(this.gradientTimer);\n                }\n                this.gradientTimer = setTimeout(function () { _this.legendModule.removeGradientPointer(); }, 1500);\n            }\n        }\n        if (this.enableCanvasRendering) {\n            var main = document.getElementById(this.element.id + '_hoverRect_canvas');\n            if (main) {\n                main.style.visibility = 'hidden';\n                this.tempRectHoverClass = '';\n            }\n        }\n        if (this.titleSettings.text && this.titleCollection[0].indexOf('...') !== -1) {\n            if (!this.enableCanvasRendering) {\n                removeElement(this.element.id + '_Title_Tooltip');\n            }\n            else {\n                removeElement(this.element.id + '_canvas_Tooltip');\n            }\n        }\n        return true;\n    };\n    /**\n     * Method to Check for deselection of cell.\n     */\n    HeatMap.prototype.checkSelectedCells = function () {\n        if (!this.enableCanvasRendering) {\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                for (var j = 0; j < this.selectedMultiCellCollection.length; j++) {\n                    if (this.selectedMultiCellCollection[j].cellElement.getAttribute('id')\n                        === this.multiCellCollection[i].cellElement.getAttribute('id')) {\n                        this.selectedCellCount++;\n                    }\n                }\n            }\n        }\n        else {\n            this.canvasSelectedCells = new Rect(0, 0, 0, 0);\n            this.canvasSelectedCells.x = this.selectedCellsRect.x;\n            this.canvasSelectedCells.y = this.selectedCellsRect.y;\n            this.canvasSelectedCells.width = this.selectedCellsRect.width;\n            this.canvasSelectedCells.height = this.selectedCellsRect.height;\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                for (var j = 0; j < this.selectedMultiCellCollection.length; j++) {\n                    if (this.selectedMultiCellCollection[j].xPosition === this.multiCellCollection[i].xPosition &&\n                        this.selectedMultiCellCollection[j].yPosition === this.multiCellCollection[i].yPosition) {\n                        this.selectedCellCount++;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Method to remove opacity for text of selected cell for HeatMap\n     */\n    HeatMap.prototype.removeOpacity = function (containersRect, containerText) {\n        for (var i = 0; i < containersRect.childNodes.length; i++) {\n            containersRect.childNodes[i].setAttribute('opacity', '0.3');\n            if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                containerText.childNodes[i].setAttribute('opacity', '0.3');\n            }\n        }\n    };\n    /**\n     * Method to set opacity for selected cell for HeatMap\n     */\n    HeatMap.prototype.setCellOpacity = function () {\n        if (!this.enableCanvasRendering) {\n            if (this.multiCellCollection.length !== 0) {\n                this.tempMultiCellCollection.push(this.multiCellCollection);\n                var containersRect = document.getElementById(this.element.id + '_Container_RectGroup');\n                var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n                this.removeOpacity(containersRect, containerText);\n                for (var i = 0; i < this.multiCellCollection.length; i++) {\n                    var collectionClasss = this.multiCellCollection[i].cellElement;\n                    var index = parseInt(collectionClasss.id.replace(this.element.id + '_HeatMapRect_', ''), 10);\n                    containersRect.childNodes[index].setAttribute('opacity', '1');\n                    if (this.cellSettings.showLabel) {\n                        var getText = document.getElementById(this.element.id + '_HeatMapRectLabels_' + index);\n                        if (getText) {\n                            getText.setAttribute('opacity', '1');\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.previousSelectedCellsRect.push(this.selectedCellsRect);\n            this.highlightSelectedAreaInCanvas(this.selectedCellsRect);\n        }\n        removeElement(this.element.id + '_selectedCells');\n    };\n    /**\n     * To create div container for rendering two layers of canvas.\n     * @return {void}\n     * @private\n     */\n    HeatMap.prototype.createMultiCellDiv = function (onLoad) {\n        if (onLoad) {\n            var divElement = this.createElement('div', {\n                id: this.element.id + '_Multi_CellSelection_Canvas',\n                styles: 'position:relative'\n            });\n            this.element.appendChild(divElement);\n            divElement.appendChild(this.svgObject);\n            this.svgObject.style.position = 'absolute';\n            this.svgObject.style.left = '0px';\n            this.svgObject.style.top = '0px';\n            this.svgObject.style.zIndex = '0';\n        }\n        else {\n            var element = document.getElementById(this.element.id + '_Multi_CellSelection_Canvas');\n            var secondaryCanvas = this.secondaryCanvasRenderer.createCanvas({\n                width: this.availableSize.width,\n                height: this.availableSize.height, x: 0, y: 0,\n                style: 'position: absolute; z-index: 1'\n            });\n            element.appendChild(secondaryCanvas);\n        }\n    };\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], HeatMap.prototype, \"showTooltip\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellRender\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Property('SVG')\n    ], HeatMap.prototype, \"renderingMode\", void 0);\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Complex({}, Data)\n    ], HeatMap.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property('Material')\n    ], HeatMap.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], HeatMap.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], HeatMap.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ text: '', textStyle: Theme.heatMapTitleFont }, Title)\n    ], HeatMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Complex({}, Axis)\n    ], HeatMap.prototype, \"xAxis\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], HeatMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Complex({}, PaletteSettings)\n    ], HeatMap.prototype, \"paletteSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], HeatMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, Axis)\n    ], HeatMap.prototype, \"yAxis\", void 0);\n    __decorate([\n        Complex({}, CellSettings)\n    ], HeatMap.prototype, \"cellSettings\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellClick\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"legendRender\", void 0);\n    HeatMap = __decorate([\n        NotifyPropertyChanges\n    ], HeatMap);\n    return HeatMap;\n}(Component));\nexport { HeatMap };\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","innerText","style","position","visibility","fontSize","size","fontWeight","fontStyle","fontFamily","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","titlePositionX","width","leftPadding","rightPadding","titleStyle","textAlignment","sum","values","_i","values_1","length","titlePositionY","heatmapSize","topPadding","bottomPadding","height","rotateTextSize","angle","box","options","renderer","SvgRenderer","svgObject","createSvg","font-size","font-style","toLowerCase","font-family","font-weight","transform","text-anchor","createText","getBoundingClientRect","remove","right","bottom","getTitle","title","titleCollection","textOverflow","textWrap","push","textTrim","textNone","currentLabel","maximumWidth","textCollection","split","label","labelCollection","i","len","concat","maxWidth","index","substring","showTooltip","x","y","areaWidth","element","isTouch","heatmap","tooltip","initialClipRect","toString","styles","titleSettings","availableSize","setTimeout","removeElement","getElement","increaseDateTimeInterval","interval","intervalType","increment","result","Date","Math","ceil","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setHours","getHours","setMinutes","getMinutes","getTooltipText","tooltipCollection","xPosition","yPosition","region","colorNameToHex","color","window","getComputedStyle","isRGBValue","exec","convertToHexCode","RgbColor","componentToHex","R","G","B","hex","convertHexToColor","formatValue","isCustom","format","tempInterval","formatFun","replace","Theme","heatMapTitleFont","axisTitleFont","axisLabelFont","legendLabelFont","rectLabelFont","tooltipFont","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Font","_super","apply","Property","ChildProperty","Margin","Border","TooltipBorder","BubbleData","Title","Complex","PaletteCollection","AxisLabelBorder","BubbleSize","MultiLevelCategories","MultiLevelLabels","type","Collection","ColorCollection","BubbleTooltipData","mappingName","bubbleData","valueType","LegendColorCollection","isHidden","PaletteSettings","g","CellColor","heatMap","convertToRGB","colorMapping","previousOffset","nextOffset","offset","Number","percent","isNaN","previousColor","getEqualColor","nextColor","getPercentageColor","rgbToHex","list","convertToHex","itemColor","substr","colorSplit","previous","next","prevColor","getPercentage","full","round","getColorCollection","colorCollection","legendColorCollection","range","minValue","bubbleSizeWithColor","minColorValue","dataSourceMinValue","maxValue","maxColorValue","dataSourceMaxValue","emptyPointColor","paletteSettings","themeStyle","emptyCellColor","tempcolorMapping","orderbyOffset","palette","isCompact","offsets","extend","updateLegendColorCollection","isLabel","unshift","returnCollection","PaletterColor","sort","a","isNullOrUndefined","getColorByValue","rbg","compareValue","cellSettings","tileType","bubbleType","singleValue","legendRange","legendVisibilityByCellType","legendModule","visible","toggledColor","colorGradientMode","TextElement","fontModel","fontColor","fill","CustomizeOption","PathOption","opacity","dashArray","_this","call","stroke","parseFloat","CurrentRect","xIndex","yIndex","xValue","yValue","displayText","textId","allowCollection","SelectedCellDetails","xLabel","yLabel","cellElement","RectOption","border","rect","borderColor","rx","ry","CircleOption","cx","cy","Rect","TextOption","basic","labelRotation","baseline","dy","TextBasic","anchor","baseLine","Line","x1","y1","x2","y2","LineOption","line","strokewidth","dasharray","PathAttributes","path","borderWidth","Path","innerR","start","end","radius","counterClockWise","DrawSvgCanvas","drawRectangle","properties","parentElement","isFromSeries","enableCanvasRendering","drawCanvasRectangle","canvasRenderer","drawCircle","drawCanvasCircle","drawPath","drawCanvasPath","canvasDrawText","createWrapText","tspanElement","renderOptions","dominant-baseline","createTSpan","drawLine","translateX","translateY","ctx","getOptionValue","save","fillStyle","textAlign","textBaseline","translate","rotate","PI","fillText","restore","setAttributes","canvas","lineWidth","dashArrayString","setLineDash","strokeStyle","canvasCtx","beginPath","globalAlpha","drawCornerRadius","cornerRadius","moveTo","arcTo","closePath","arc","dataSplit","lineTo","Gradient","GradientColor","colorStop","CanvasTooltip","GradientPointer","pathX1","pathY1","pathX2","pathY2","pathX3","pathY3","CurrentLegendRect","LegendRange","currentPage","ToggleVisibility","MultiLevelPosition","Axis","nearSizes","farSizes","maxLabelSize","titleSize","axisLabels","tooltipLabels","labelValue","axisLabelSize","axisLabelInterval","dateTimeAxisLabelInterval","maxLength","min","max","isIntersect","jsonCellLabel","multiLevelSize","xAxisMultiLabelHeight","yAxisMultiLabelHeight","multiLevelPosition","computeSize","axis","getTitleSize","getMaxLabelSize","getMultilevelLabelsHeight","multiLevelLabels","multiLevelLabelSize","multiPosition","innerPadding","orientation","level0","level1","isInversed","opposedPosition","labelSize","multiLevel","categoryLabel","categories","size_1","textStyle","gap","startPosition","endPosition","multiLevelLabelsHeight","isVertical","padding","map","heatMapAxis","calculateLeftPosition","calculateWidth","maximumTextWidth","abs","overflow","labels","labelIntersectAction","showLabelOn","startX","previousEnd","previousStart","elementSize","axisInterval","startPoint","endPoint","calculateNumericAxisLabels","adaptorMin","adaptorMax","adaptorModule","isCellData","adaptiveXMinMax","adaptiveYMinMax","minimum","maximum","temp","labelFormat","match","intl","getNumberFormat","floor","reverse","calculateCategoryAxisLabels","calculateDateTimeAxisLabel","option","skeleton","dateParser","getDateParser","dateFormatter","getDateFormat","parse","DataUtil","parseJson","val","getTime","getSkeleton","calculateLabelInterval","getTotalLabelLength","numberOfDays","year","month","day","minutes","difference","days","years","months","hours","clearAxisLabel","AxisHelper","drawSvgCanvas","renderAxes","axisElement","createGroup","axes","axisCollections","drawXAxisLine","drawXAxisTitle","drawXAxisLabels","drawYAxisLine","drawYAxisTitle","drawYAxisLabels","drawMultiLevels","parent","titlepadding","axisTitle","calculateVisibleLabels","axisCollection","data","dataSourceSettings","processLabels","isJsonData","adaptorType","measureAxis","calculateAxisSize","axis_1","i_1","compactInterval","tempintervel","labelPadding","lableStrtX","labelElement","borderElement","lableRect","drawXAxisBorder","rotateSize","diffHeight","axisLabel","labelInterval","lableStartY","labelRect","Browser","isIE","drawYAxisBorder","lableX","endX","endY","startY","createAxisBorderElement","lableY","labelBorder","pathOptions","canvasTranslate","renderXAxisMultiLevelLabels","renderYAxisMultiLevelLabels","textLength","pathRect","level","alignment","textBasic","i_2","renderXAxisLabelBorder","createBorderElement","labelIndex","renderYAxisLabelBorder","borderIndex","calculateNumberOfDays","date","firstDate","secondDate","givenDate","CellSettings","Series","cellColor","renderRectSeries","createSeriesGroup","isValueInRange","xLength","yLength","tempBorder","circleRadius","tempX","tempY","dataXIndex","dataYIndex","cellSetting","tempWidth","tempHeight","tempVal","tempRectPosition","rectPositionCollection","bubbleColorValue","yAxis","getBubbleRadius","dataMin","dataMax","setTextAndColor","rectPosition","renderingMode","updateRectDetails","showLabel","getFormatedText","cellRender","cellRendering","renderTileCell","updateLabelVisibleStatus","renderBubbleCell","renderSectorCell","checkLabelXDisplay","checkLabelYDisplay","tempCircleRadius","getRadiusBypercentage","rangeSelection","isCellValueInRange","themeCellTextStyle","getSaturatedColor","containerTextObject","containerRectObject","toggleValue","clonedDataSource","bubbleText","xAxis","xLabels","yLabels","slice","yLabelValue","argData","isBlazor","cancel","name","trigger","adaptData","isColorValueExist","tempBubbleCollection","bubbleDataMapping","cellBorder","bubblePosition","curve","startAngle","endAngle","cX","cY","X1","Y1","tempcX","tempcY","pathBorderWidth","centerX","centerY","tempColor","sectorContibution","cos","sin","sector","calculateShapes","pathString","merge","circle","bubbleSize","valueInPrecentage","isInversedBubbleSize","saturatedColor","rgbValue","backgroundColor","highlightSvgRect","tempID","tempIndex","tempRectHoverClass","enableCellHighlighting","oldElement","rectSelected","setAttribute","getFormat","getCurrentRect","currentRect","firstRectDetails","heatMapSeries","rectX","rectY","hoverXAxisLabel","hoverXAxisValue","hoverYAxisLabel","hoverYAxisValue","TooltipSettings","Tooltip","isFirst","isFadeout","getModuleName","showHideTooltip","isShow","ele","tooltipObject","fadeOut","firstChild","destroy","createTooltip","tempTooltipText","tool","enableAnimation","location","theme","content","tooltipSettings","template","areaBounds","createTooltipDiv","allowSelection","element2","getTooltipContent","hetmapSeries","value1","value2","renderTooltip","tooltipRender","tooltipCallback","observedArgs","TwoDimensional","processDataSource","dataSource","tempCloneData","completeDataSource","minVal","maxVal","tempVariable","dataLength","labelLength","cloneDataIndex","minMaxDatasource","tempSizeArray","tempColorArray","z","processDataArray","minMaxVal","getMinMaxValue","internalArray","tempx","minMaxValue","getMinValue","getMaxValue","performSort","filter","checkmin","LegendSettings","Legend","maxLegendLabelSize","gradientScaleSize","segmentCollections","textWrapCollections","labelCollections","legendSize","previousOptions","listPerPage","numberOfPages","listWidth","fillRect","legendRect","lastList","navigationCollections","pagingRect","listInterval","legendLabelTooltip","labelXCollections","labelYCollections","legendXCollections","legendYCollections","legendRectPositionCollection","legendTextRange","visibilityCollections","renderLegendItems","legend","rectItems","legendGroup","legendBound","legendRectScale","rectItemsSvg","legendSettings","enableSmartLegend","resizing","legendOnLoad","rendering","grd","horizontalGradient","createLinearGradient","legendMinValue","legendMaxValue","addColorStop","gradientOptions","gradientColor","cgradientColors","gradientPercentage","linearGradient","drawGradient","rectItem","renderColorAxisGrid","renderSmartLegend","renderLegendLabel","legendScale","listRect","translategroup","calculateListPerPage","paginggroup","renderListLegendMode","smartLegendRect","legendX","legendY","legendWidth","legendHeight","labelDisplayType","dominantBaseline","legendLabel","textWrapWidth","clip","labelX","labelY","legendRectPadding","textPosition","lastChild","clippath","createClipPath","clipRect","renderGradientPointer","e","pageX","pageY","direction","legendPath","cellValue","removeGradientPointer","gradientPointer","keys","background","calculateLegendBounds","legendEventArg","legendRender","calculateListLegendBounds","listHeight","perListWidth","numberOfRows","calculateLegendSize","legendTop","axisTitlePadding","axisHeight","margin","axisWidth","calculateGradientScale","measureListLegendBound","maxHeight","renderPagingElements","rightArrowX","rightArrowY","textSize","textX","pagingTextRect","rightArrowRect","iconSize","rightArrow","leftX","leftArrow","leftArrowRect","leftOption","rightOption","arrow","rightarrow","scale","calculateColorAxisGrid","legendPart","maxTextWrapLength","previousSegmentWidth","nextSegmentWidth","legendElement","renderLegendLabelTooltip","textContent","targetId","offsetWidth","division","legendEventArgs","rectPosition_1","listColor","translatePage","page","isNext","removeChild","childNodes","secondaryCanvasRenderer","initialRect","rectWidth","rectHeight","clearRect","oldCanvas","newCanvas","rectImage","getContext","getImageData","putImageData","currentLegendRect","inverted","legendRangeSelection","clearSelection","updateLegendRangeCollections","Data","AdaptiveMinMax","Adaptor","reconstructedXAxis","reconstructedYAxis","constructDatasource","completeAdaptDataSource","processJsonTableData","processJsonCellData","constructAdaptiveAxis","processCellData","getNumericAxisCollection","getDateAxisCollection","loopIndex","tempAxisColl","adapData","dataIndex","xDataIndex","yDataIndex","tempDataCollection","currentDataXIndex","currentDataYIndex","reconstructData","xindex","adaptordata","xAxisLabels","yAxisLabels","generateAxisLabels","getSplitDataValue","xDataMapping","yDataMapping","valueMapping","hasXLabels","hasYLabels","hasLabels","dataMapping","tempSplitDataCollection","tempSplitData","splitIndex","HeatMap","isCellTapHold","selectedCellCount","multiSelection","previousSelectedCellsRect","multiCellCollection","selectedMultiCellCollection","tempMultiCellCollection","preRender","initPrivateVariable","unWireEvents","wireEvents","CanvasRenderer","twoDimensional","tempTooltipRectId","setCulture","Internationalization","render","updateBubbleHelperProperty","initAxis","processInitData","setTheme","calculateMaxLength","calculateBounds","renderElements","appendSvgObject","tooltipModule","renderComplete","reRenderDatasource","setRenderMode","renderSecondaryElement","renderBorder","renderTitle","getPersistData","onPropertyChanged","newProp","oldProp","refreshBounds","isUpdateSelection","_a","paletteCellSelectionUpdation","refresh","refreshBound","updateCellSelection","removeSvg","calculateSize","createCanvas","createMultiCellDiv","tooltipDiv","divElement","requiredModules","modules","member","args","innerHTML","classList","add","offsetHeight","heatMapTitle","titleTooltip","event","axisTooltip","tooltipText","isHeatmapRect","lastRectDetails","cellTextColor","getThemeColor","titleHeight","titleRect","isIE11Pointer","isPointer","touchStartEvent","stop","touchEndEvent","move","touchMoveEvent","EventHandler","isDevice","heatMapMouseClick","heatMapMouseMove","heatMapMouseLeave","addEventListener","heatMapResize","bind","Touch","tapHold","getDataCollection","setCellOpacity","tap","isCellTap","tooltipOnMouseMove","setStyle","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","display","removeEventListener","currentSize","previousSize","resizeTimer","clearTimeout","isDestroyed","wSize","hSize","topPositions","bottomPositions","rightPosition","leftPosition","containersRect","containerText","cellIndex","getText","addSvgClass","clearSVGSelection","elementClassName","getAttribute","removeSvgClass","xAxisMax","yAxisMax","length_1","setMouseXY","svgCanvasRect","mouseX","mouseY","touchArg","elementRect","changedTouches","clientY","clientX","notify","loop","toggleVisibility","isheatmapRect","showGradientPointer","renderMousePointer","isshowTooltip","which","cellSelectionOnMouseMove","tooltipRect","previousRect","initialCellX","initialCellY","preventDefault","highlightSelectedCells","tooltipTimer","pXIndex","pYIndex","cXIndex","cYIndex","selectedCellsRect","ctrlKey","removeSelectedCellsBorder","parentDiv","minX","maxX","minY","maxY","cellX","cellY","getCellCollection","checkSelectedCells","canvasSelectedCells","singleCellData","getSelectedCellData","rects","containerRect","highlightSelectedAreaInCanvas","topPosition","bottomPosition","cellCollection","cellDetails","j","rectElement","splice","className","cursor","tooltipElement_1","legendTooltipTimer","gradientTimer","main","removeOpacity","collectionClasss","onLoad","zIndex","secondaryCanvas","Event","NotifyPropertyChanges","Component"],"mappings":"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"}