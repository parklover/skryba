/*!
*  filename: ej2-angular-heatmap.umd.min.js.map
*  version : 17.3.27
*  Copyright Syncfusion Inc. 2001 - 2018. All rights reserved.
*  Use of this code is subject to the terms of our license.
*  A copy of the current license can be obtained at any time by e-mailing
*  licensing@syncfusion.com. Any infringement will be prosecuted under
*  applicable laws. 
*/

{"version":3,"file":"ej2-angular-heatmap.umd.min.js","sources":["~/@syncfusion/ej2-angular-heatmap/src/heatmap/heatmap.component.ts","~/@syncfusion/ej2-angular-heatmap/src/heatmap/heatmap.module.ts","~/@syncfusion/ej2-angular-heatmap/src/heatmap/heatmap-all.module.ts"],"sourcesContent":["import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { HeatMap } from '@syncfusion/ej2-heatmap';\n\n\n\nexport const /** @type {?} */ inputs: string[] = ['allowSelection','cellSettings','dataSource','dataSourceSettings','enablePersistence','enableRtl','height','legendSettings','locale','margin','paletteSettings','renderingMode','showTooltip','theme','titleSettings','tooltipSettings','width','xAxis','yAxis'];\nexport const /** @type {?} */ outputs: string[] = ['cellClick','cellRender','cellSelected','created','legendRender','load','loaded','resized','tooltipRender'];\nexport const /** @type {?} */ twoWays: string[] = [''];\n/**\n * `ejs-heatmap` represents the Angular HeatMap Component.\n * ```html\n * <ejs-heatmap></ejs-heatmap>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class HeatMapComponent extends HeatMap implements IComponentBase {\npublic tags: string[] = [''];\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('HeatMapLegend');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('HeatMapTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('HeatMapAdaptor');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-heatmap',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        \n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\n}\n\nfunction HeatMapComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nHeatMapComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHeatMapComponent.ctorParameters;\n/** @type {?} */\nHeatMapComponent.prototype.tags;\n/** @type {?} */\nHeatMapComponent.prototype.registerEvents;\n/** @type {?} */\nHeatMapComponent.prototype.addTwoWay;\n/** @type {?} */\nHeatMapComponent.prototype.ngEle;\n/** @type {?} */\nHeatMapComponent.prototype.srenderer;\n/** @type {?} */\nHeatMapComponent.prototype.viewContainerRef;\n/** @type {?} */\nHeatMapComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeatMapComponent } from './heatmap.component';\n/**\n * NgModule definition for the HeatMap component.\n */\nexport class HeatMapModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        HeatMapComponent\n    ],\n    exports: [\n        HeatMapComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HeatMapModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHeatMapModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHeatMapModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeatMapComponent } from './heatmap.component';\nimport { HeatMapModule } from './heatmap.module';\nimport {Legend, Tooltip, Adaptor} from '@syncfusion/ej2-heatmap';\n\n\nexport const /** @type {?} */ LegendService: ValueProvider = { provide: 'HeatMapLegend', useValue: Legend};\nexport const /** @type {?} */ TooltipService: ValueProvider = { provide: 'HeatMapTooltip', useValue: Tooltip};\nexport const /** @type {?} */ AdaptorService: ValueProvider = { provide: 'HeatMapAdaptor', useValue: Adaptor};\n/**\n * NgModule definition for the HeatMap component with providers.\n */\nexport class HeatMapAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, HeatMapModule],\n    exports: [\n        HeatMapModule\n    ],\n    providers:[\n        LegendService,\n        TooltipService,\n        AdaptorService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HeatMapAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHeatMapAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHeatMapAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["inputs","outputs","twoWays","exports","HeatMapComponent","_super","ngEle","srenderer","viewContainerRef","injector","_this","call","this","tags","element","nativeElement","injectedModules","mod","get","indexOf","push","_a","_b","_c","registerEvents","addTwoWay","setValue","__extends","prototype","ngOnInit","ngAfterViewInit","ngOnDestroy","ngAfterContentChecked","HeatMap","decorators","type","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","queries","ctorParameters","ElementRef","Renderer2","ViewContainerRef","Injector","__decorate","ComponentMixins","ComponentBase","__metadata","HeatMapModule","NgModule","imports","CommonModule","declarations","LegendService","provide","useValue","Legend","TooltipService","Tooltip","AdaptorService","Adaptor","HeatMapAllModule","providers"],"mappings":"4wCAMaA,GAAmB,iBAAkB,eAAe,aAAa,qBAAqB,oBAAoB,YAAY,SAAS,iBAAiB,SAAS,SAAS,kBAAkB,gBAAgB,cAAc,QAAQ,gBAAgB,kBAAkB,QAAQ,QAAQ,SAC5QC,GAAoB,YAAa,aAAa,eAAe,UAAU,eAAe,OAAO,SAAS,UAAU,iBAChHC,GAAoB,IAQjCC,EAAAC,iBAAA,SAAAC,GAQA,SAAAD,EADwBE,EAA2BC,EAA8BC,EAA2CC,GAC5H,IAAAC,EAIQL,EAJRM,KAAAC,OAAAA,KADwBF,EAAxBJ,MAAwBA,EAA2BI,EAAnDH,UAAmDA,EAA8BG,EAAjFF,iBAAiFA,EAA2CE,EAA5HD,SAA4HA,EAHjHC,EAAXG,MAA4B,IASpBH,EAAKI,QAAUJ,EAAKJ,MAAMS,cAC1BL,EAAKM,gBAAkBN,EAAKM,oBAC5B,IACQ,IAAIC,EAAMP,EAAKD,SAASS,IAAI,kBACc,IAAvCR,EAAKM,gBAAgBG,QAAQF,IAC5BP,EAAKM,gBAAgBI,KAAKH,GAEhC,MAAOI,IACb,IACYJ,EAAMP,EAAKD,SAASS,IAAI,mBACc,IAAvCR,EAAKM,gBAAgBG,QAAQF,IAC5BP,EAAKM,gBAAgBI,KAAKH,GAEhC,MAAOK,IACb,IACYL,EAAMP,EAAKD,SAASS,IAAI,mBACc,IAAvCR,EAAKM,gBAAgBG,QAAQF,IAC5BP,EAAKM,gBAAgBI,KAAKH,GAEhC,MAAOM,WAEbb,EAAKc,eAAevB,GACpBS,EAAKe,UAAUd,KAAKD,EAAMR,GAC1BwB,EAAAA,SAAS,kBAAmBhB,EAAMA,EAAKF,oBA6C/C,OAjFsCmB,EAAtCvB,EAAAC,GAmCKD,EAALwB,UAAAC,SAAK,aAGAzB,EAALwB,UAAAE,gBAAK,aAGA1B,EAALwB,UAAAG,YAAK,aAGA3B,EAALwB,UAAAI,sBAAK,aAqCL5B,EAjF6B,CAAS6B,EAAAA,SAiD/B7B,EAAAA,iBAAP8B,aACEC,KAAMC,EAAAA,UAAWC,OAYfC,SAXU,cAYVtC,OAXQA,EAYRC,QAXSA,EAYTsC,SAXU,GAYVC,gBAXiBC,EAAAA,wBAAwBC,OAYzCC,eALHvC,EAAAA,iBAADwC,eAAC,WAAA,QAcAT,KAAMU,EAAAA,aACNV,KAAMW,EAAAA,YACNX,KAAMY,EAAAA,mBACNZ,KAAMa,EAAAA,YA/EM5C,EAAAA,iBAAb6C,GACCC,EAAAA,iBAAAC,EAAAA,gBAMDC,EAAA,qBAA+BP,EAAAA,WAA+BC,EAAAA,UAAoCC,EAAAA,iBAAoCC,EAAAA,YAPzH5C,EAAAA,kBCVb,IAAAiD,EAAA,kBAAA,aAAA,GAEoCA,EAApCnB,aACEC,KAAMmB,EAAAA,SAAUjB,OADdkB,SAESC,EAAAA,cADTC,cACIrD,EAAAA,kBAEJD,SACIC,EAAAA,sBAOPiD,EAADT,eAAC,WAAA,UCbM,IAAMc,GAAiCC,QAAS,gBAAiBC,SAAUC,EAAAA,QACrEC,GAAkCH,QAAS,iBAAkBC,SAAUG,EAAAA,SACvEC,GAAkCL,QAAS,iBAAkBC,SAAUK,EAAAA,SAIpFC,EAAA,kBAAA,aAAA,GAEuCA,EAAvChC,aACEC,KAAMmB,EAAAA,SAAUjB,OADdkB,SAESC,EAAAA,aAAeH,GADxBlD,SACIkD,GAEJc,WACIT,EACAI,EACAE,OAOPE,EAADtB,eAAC,WAAA"}
