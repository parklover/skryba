/*!
*  filename: ej2-angular-maps.umd.min.js.map
*  version : 17.3.27
*  Copyright Syncfusion Inc. 2001 - 2018. All rights reserved.
*  Use of this code is subject to the terms of our license.
*  A copy of the current license can be obtained at any time by e-mailing
*  licensing@syncfusion.com. Any infringement will be prosecuted under
*  applicable laws. 
*/

{"version":3,"file":"ej2-angular-maps.umd.min.js","sources":["~/@syncfusion/ej2-angular-maps/src/maps/markersettings.directive.ts","~/@syncfusion/ej2-angular-maps/src/maps/colormapping.directive.ts","~/@syncfusion/ej2-angular-maps/src/maps/bubblesettings.directive.ts","~/@syncfusion/ej2-angular-maps/src/maps/navigationlinesettings.directive.ts","~/@syncfusion/ej2-angular-maps/src/maps/layers.directive.ts","~/@syncfusion/ej2-angular-maps/src/maps/annotations.directive.ts","~/@syncfusion/ej2-angular-maps/src/maps/maps.component.ts","~/@syncfusion/ej2-angular-maps/src/maps/maps.module.ts","~/@syncfusion/ej2-angular-maps/src/maps/maps-all.module.ts"],"sourcesContent":["import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet /** @type {?} */ input: string[] = ['animationDelay', 'animationDuration', 'border', 'dashArray', 'dataSource', 'fill', 'height', 'highlightSettings', 'imageUrl', 'legendText', 'offset', 'opacity', 'selectionSettings', 'shape', 'template', 'tooltipSettings', 'visible', 'width'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Layer Directive\n * ```html\n * <e-layers>\n * <e-layer>\n * <e-markerSettings>\n * <e-markerSetting>\n * </e-markerSetting>\n * </e-markerSettings>\n * </e-layer>\n * </e-layers>\n * ```\n */\nexport class MarkerDirective extends ComplexBase<MarkerDirective> {\n/**\n * Animation delay time\n */\npublic animationDelay: any;\n/**\n * Animation duration time\n */\npublic animationDuration: any;\n/**\n * Options for customizing the color and width of the marker.\n */\npublic border: any;\n/**\n * Options for customizing the dash array options\n */\npublic dashArray: any;\n/**\n * To configure the dataSource of the marker.\n */\npublic dataSource: any;\n/**\n * To customize the fill color of the marker.\n */\npublic fill: any;\n/**\n * To customize the height of the marker.\n */\npublic height: any;\n/**\n * To configure the highlight settings of the maps.\n */\npublic highlightSettings: any;\n/**\n * To provide the image url for rendering marker image\n */\npublic imageUrl: any;\n/**\n * To provide the dataSource field to display legend text\n */\npublic legendText: any;\n/**\n * To move the marker by setting offset values\n */\npublic offset: any;\n/**\n * To customize the opacity of the marker.\n */\npublic opacity: any;\n/**\n * To configure the selection settings of the maps.\n */\npublic selectionSettings: any;\n/**\n * To customize the shape of the marker.\n */\npublic shape: any;\n/**\n * To configure the tooltip settings of the maps marker.\n */\npublic tooltipSettings: any;\n/**\n * Toggle the visibility of the marker.\n */\npublic visible: any;\n/**\n * To customize the width of the marker.\n */\npublic width: any;\n/**\n * To customize the template of the marker.\n */\n@Template()\n    public template: any;\n    \n    @Template()\npublic tooltipSettings_template: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-layer>e-markerSettings>e-markerSetting',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'template': [{ type: ContentChild, args: ['template', ] },],\n'tooltipSettings_template': [{ type: ContentChild, args: ['tooltipSettingsTemplate', ] },],\n};\n}\n\nfunction MarkerDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMarkerDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarkerDirective.ctorParameters;\n/** @type {?} */\nMarkerDirective.propDecorators;\n/**\n * Animation delay time\n * @type {?}\n */\nMarkerDirective.prototype.animationDelay;\n/**\n * Animation duration time\n * @type {?}\n */\nMarkerDirective.prototype.animationDuration;\n/**\n * Options for customizing the color and width of the marker.\n * @type {?}\n */\nMarkerDirective.prototype.border;\n/**\n * Options for customizing the dash array options\n * @type {?}\n */\nMarkerDirective.prototype.dashArray;\n/**\n * To configure the dataSource of the marker.\n * @type {?}\n */\nMarkerDirective.prototype.dataSource;\n/**\n * To customize the fill color of the marker.\n * @type {?}\n */\nMarkerDirective.prototype.fill;\n/**\n * To customize the height of the marker.\n * @type {?}\n */\nMarkerDirective.prototype.height;\n/**\n * To configure the highlight settings of the maps.\n * @type {?}\n */\nMarkerDirective.prototype.highlightSettings;\n/**\n * To provide the image url for rendering marker image\n * @type {?}\n */\nMarkerDirective.prototype.imageUrl;\n/**\n * To provide the dataSource field to display legend text\n * @type {?}\n */\nMarkerDirective.prototype.legendText;\n/**\n * To move the marker by setting offset values\n * @type {?}\n */\nMarkerDirective.prototype.offset;\n/**\n * To customize the opacity of the marker.\n * @type {?}\n */\nMarkerDirective.prototype.opacity;\n/**\n * To configure the selection settings of the maps.\n * @type {?}\n */\nMarkerDirective.prototype.selectionSettings;\n/**\n * To customize the shape of the marker.\n * @type {?}\n */\nMarkerDirective.prototype.shape;\n/**\n * To configure the tooltip settings of the maps marker.\n * @type {?}\n */\nMarkerDirective.prototype.tooltipSettings;\n/**\n * Toggle the visibility of the marker.\n * @type {?}\n */\nMarkerDirective.prototype.visible;\n/**\n * To customize the width of the marker.\n * @type {?}\n */\nMarkerDirective.prototype.width;\n/**\n * To customize the template of the marker.\n * @type {?}\n */\nMarkerDirective.prototype.template;\n/** @type {?} */\nMarkerDirective.prototype.tooltipSettings_template;\n/** @type {?} */\nMarkerDirective.prototype.viewContainerRef;\n}\n\n/**\n * Marker Array Directive\n */\nexport class MarkersDirective extends ArrayBase<MarkersDirective> {\nconstructor() {\n        super('markersettings');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-layer>e-markerSettings',\n    queries: {\n        children: new ContentChildren(MarkerDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MarkersDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMarkersDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarkersDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['color', 'from', 'label', 'maxOpacity', 'minOpacity', 'showLegend', 'to', 'value'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * ColorMapping Directive\n * ```html\n * <e-layers>\n * <e-layer>\n * <e-bubbleSettings>\n * <e-colorMappings>\n * <e-colorMapping>\n * </e-colorMapping>\n * </e-colorMappings>\n * </e-bubbleSettings>\n * </e-layer>\n * </e-layers>\n * ```\n */\nexport class ColorMappingDirective extends ComplexBase<ColorMappingDirective> {\n/**\n * To configure color\n */\npublic color: any;\n/**\n * To configure from\n */\npublic from: any;\n/**\n * To configure labels\n */\npublic label: any;\n/**\n * To configure max opacity\n */\npublic maxOpacity: any;\n/**\n * To configure min opacity\n */\npublic minOpacity: any;\n/**\n * To enable or disable the legend\n */\npublic showLegend: any;\n/**\n * To configure to\n */\npublic to: any;\n/**\n * To configure value\n */\npublic value: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-bubbleSettings>e-colorMappings>e-colorMapping',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction ColorMappingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColorMappingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColorMappingDirective.ctorParameters;\n/**\n * To configure color\n * @type {?}\n */\nColorMappingDirective.prototype.color;\n/**\n * To configure from\n * @type {?}\n */\nColorMappingDirective.prototype.from;\n/**\n * To configure labels\n * @type {?}\n */\nColorMappingDirective.prototype.label;\n/**\n * To configure max opacity\n * @type {?}\n */\nColorMappingDirective.prototype.maxOpacity;\n/**\n * To configure min opacity\n * @type {?}\n */\nColorMappingDirective.prototype.minOpacity;\n/**\n * To enable or disable the legend\n * @type {?}\n */\nColorMappingDirective.prototype.showLegend;\n/**\n * To configure to\n * @type {?}\n */\nColorMappingDirective.prototype.to;\n/**\n * To configure value\n * @type {?}\n */\nColorMappingDirective.prototype.value;\n/** @type {?} */\nColorMappingDirective.prototype.viewContainerRef;\n}\n\n/**\n * ColorMapping Array Directive\n */\nexport class ColorMappingsDirective extends ArrayBase<ColorMappingsDirective> {\nconstructor() {\n        super('colormapping');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-bubbleSettings>e-colorMappings',\n    queries: {\n        children: new ContentChildren(ColorMappingDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColorMappingsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColorMappingsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColorMappingsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { ColorMappingsDirective } from './colormapping.directive';\n\nlet /** @type {?} */ input: string[] = ['animationDelay', 'animationDuration', 'border', 'bubbleType', 'colorMapping', 'colorValuePath', 'dataSource', 'fill', 'highlightSettings', 'maxRadius', 'minRadius', 'opacity', 'selectionSettings', 'tooltipSettings', 'valuePath', 'visible'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Layer Directive\n * ```html\n * <e-layers>\n * <e-layer>\n * <e-bubbleSettings>\n * <e-bubbleSetting>\n * </e-bubbleSetting>\n * </e-bubbleSettings>\n * </e-layer>\n * </e-layers>\n * ```\n */\nexport class BubbleDirective extends ComplexBase<BubbleDirective> {\npublic childColorMapping: any;\npublic tags: string[] = ['colorMapping'];\n/**\n * Animation duration\n */\npublic animationDelay: any;\n/**\n * To configure bubble animation duration\n */\npublic animationDuration: any;\n/**\n * Configures the bubble border\n */\npublic border: any;\n/**\n * To configure bubble shape type\n */\npublic bubbleType: any;\n/**\n * To configure bubble colorMapping\n */\npublic colorMapping: any;\n/**\n * To configure bubble colorValuePath\n */\npublic colorValuePath: any;\n/**\n * Specifies the data source for bubble.\n */\npublic dataSource: any;\n/**\n * To configure bubble fill color\n */\npublic fill: any;\n/**\n * To configure the highlight settings of the maps.\n */\npublic highlightSettings: any;\n/**\n * To configure bubble maxRadius\n */\npublic maxRadius: any;\n/**\n * To configure bubble minRadius\n */\npublic minRadius: any;\n/**\n * To configure bubble opacity\n */\npublic opacity: any;\n/**\n * To configure the selection settings of the maps.\n */\npublic selectionSettings: any;\n/**\n * To configure the tooltip settings of the bubble .\n */\npublic tooltipSettings: any;\n/**\n * To configure bubble valuePath\n */\npublic valuePath: any;\n/**\n * Toggle the visibility of bubble\n */\npublic visible: any;\n    \n    @Template()\npublic tooltipSettings_template: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-layer>e-bubbleSettings>e-bubbleSetting',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n        childColorMapping: new ContentChild(ColorMappingsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltipSettings_template': [{ type: ContentChild, args: ['tooltipSettingsTemplate', ] },],\n};\n}\n\nfunction BubbleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nBubbleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBubbleDirective.ctorParameters;\n/** @type {?} */\nBubbleDirective.propDecorators;\n/** @type {?} */\nBubbleDirective.prototype.childColorMapping;\n/** @type {?} */\nBubbleDirective.prototype.tags;\n/**\n * Animation duration\n * @type {?}\n */\nBubbleDirective.prototype.animationDelay;\n/**\n * To configure bubble animation duration\n * @type {?}\n */\nBubbleDirective.prototype.animationDuration;\n/**\n * Configures the bubble border\n * @type {?}\n */\nBubbleDirective.prototype.border;\n/**\n * To configure bubble shape type\n * @type {?}\n */\nBubbleDirective.prototype.bubbleType;\n/**\n * To configure bubble colorMapping\n * @type {?}\n */\nBubbleDirective.prototype.colorMapping;\n/**\n * To configure bubble colorValuePath\n * @type {?}\n */\nBubbleDirective.prototype.colorValuePath;\n/**\n * Specifies the data source for bubble.\n * @type {?}\n */\nBubbleDirective.prototype.dataSource;\n/**\n * To configure bubble fill color\n * @type {?}\n */\nBubbleDirective.prototype.fill;\n/**\n * To configure the highlight settings of the maps.\n * @type {?}\n */\nBubbleDirective.prototype.highlightSettings;\n/**\n * To configure bubble maxRadius\n * @type {?}\n */\nBubbleDirective.prototype.maxRadius;\n/**\n * To configure bubble minRadius\n * @type {?}\n */\nBubbleDirective.prototype.minRadius;\n/**\n * To configure bubble opacity\n * @type {?}\n */\nBubbleDirective.prototype.opacity;\n/**\n * To configure the selection settings of the maps.\n * @type {?}\n */\nBubbleDirective.prototype.selectionSettings;\n/**\n * To configure the tooltip settings of the bubble .\n * @type {?}\n */\nBubbleDirective.prototype.tooltipSettings;\n/**\n * To configure bubble valuePath\n * @type {?}\n */\nBubbleDirective.prototype.valuePath;\n/**\n * Toggle the visibility of bubble\n * @type {?}\n */\nBubbleDirective.prototype.visible;\n/** @type {?} */\nBubbleDirective.prototype.tooltipSettings_template;\n/** @type {?} */\nBubbleDirective.prototype.viewContainerRef;\n}\n\n/**\n * Bubble Array Directive\n */\nexport class BubblesDirective extends ArrayBase<BubblesDirective> {\nconstructor() {\n        super('bubblesettings');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-layer>e-bubbleSettings',\n    queries: {\n        children: new ContentChildren(BubbleDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BubblesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nBubblesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBubblesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet /** @type {?} */ input: string[] = ['angle', 'arrowSettings', 'color', 'dashArray', 'highlightSettings', 'latitude', 'longitude', 'selectionSettings', 'visible', 'width'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Layer Directive\n * ```html\n * <e-layers>\n * <e-layer>\n * <e-navigationLineSettings>\n * <e-navigationLineSetting>\n * </e-navigationLineSetting>\n * </e-navigationLineSettings>\n * </e-layer>\n * </e-layers>\n * ```\n */\nexport class NavigationLineDirective extends ComplexBase<NavigationLineDirective> {\n/**\n * Specifies the angle of curve connecting different locations in map\n */\npublic angle: any;\n/**\n * arrow\n */\npublic arrowSettings: any;\n/**\n * NavigationSelectedLine color\n */\npublic color: any;\n/**\n * dashArray\n */\npublic dashArray: any;\n/**\n * To configure the highlight settings of the maps.\n */\npublic highlightSettings: any;\n/**\n * NavigationSelectedLine latitude\n */\npublic latitude: any;\n/**\n * NavigationSelectedLine longitude\n */\npublic longitude: any;\n/**\n * To configure the selection settings of the maps.\n */\npublic selectionSettings: any;\n/**\n * NavigationSelectedLine visible\n */\npublic visible: any;\n/**\n * Configures the label border\n */\npublic width: any;\n    \n    @Template()\npublic tooltipSettings_template: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-layer>e-navigationLineSettings>e-navigationLineSetting',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltipSettings_template': [{ type: ContentChild, args: ['tooltipSettingsTemplate', ] },],\n};\n}\n\nfunction NavigationLineDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigationLineDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavigationLineDirective.ctorParameters;\n/** @type {?} */\nNavigationLineDirective.propDecorators;\n/**\n * Specifies the angle of curve connecting different locations in map\n * @type {?}\n */\nNavigationLineDirective.prototype.angle;\n/**\n * arrow\n * @type {?}\n */\nNavigationLineDirective.prototype.arrowSettings;\n/**\n * NavigationSelectedLine color\n * @type {?}\n */\nNavigationLineDirective.prototype.color;\n/**\n * dashArray\n * @type {?}\n */\nNavigationLineDirective.prototype.dashArray;\n/**\n * To configure the highlight settings of the maps.\n * @type {?}\n */\nNavigationLineDirective.prototype.highlightSettings;\n/**\n * NavigationSelectedLine latitude\n * @type {?}\n */\nNavigationLineDirective.prototype.latitude;\n/**\n * NavigationSelectedLine longitude\n * @type {?}\n */\nNavigationLineDirective.prototype.longitude;\n/**\n * To configure the selection settings of the maps.\n * @type {?}\n */\nNavigationLineDirective.prototype.selectionSettings;\n/**\n * NavigationSelectedLine visible\n * @type {?}\n */\nNavigationLineDirective.prototype.visible;\n/**\n * Configures the label border\n * @type {?}\n */\nNavigationLineDirective.prototype.width;\n/** @type {?} */\nNavigationLineDirective.prototype.tooltipSettings_template;\n/** @type {?} */\nNavigationLineDirective.prototype.viewContainerRef;\n}\n\n/**\n * NavigationLine Array Directive\n */\nexport class NavigationLinesDirective extends ArrayBase<NavigationLinesDirective> {\nconstructor() {\n        super('navigationlinesettings');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-layer>e-navigationLineSettings',\n    queries: {\n        children: new ContentChildren(NavigationLineDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NavigationLinesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigationLinesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavigationLinesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\nimport { MarkersDirective } from './markersettings.directive';\nimport { BubblesDirective } from './bubblesettings.directive';\nimport { NavigationLinesDirective } from './navigationlinesettings.directive';\n\nlet /** @type {?} */ input: string[] = ['animationDuration', 'bingMapType', 'bubbleSettings', 'dataLabelSettings', 'dataSource', 'geometryType', 'highlightSettings', 'key', 'layerType', 'markerClusterSettings', 'markerSettings', 'navigationLineSettings', 'query', 'selectionSettings', 'shapeData', 'shapeDataPath', 'shapePropertyPath', 'shapeSettings', 'toggleLegendSettings', 'tooltipSettings', 'type', 'urlTemplate', 'visible'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Layer Directive\n * ```html\n * <e-layers>\n * <e-layer></e-layer>\n * </e-layers>\n * ```\n */\nexport class LayerDirective extends ComplexBase<LayerDirective> {\npublic childMarkerSettings: any;\npublic childBubbleSettings: any;\npublic childNavigationLineSettings: any;\npublic tags: string[] = ['markerSettings', 'bubbleSettings', 'navigationLineSettings'];\n/**\n * Specifies the type for the layer.\n */\npublic type: any;\n/**\n * Specifies the animation duration for the layer.\n */\npublic animationDuration: any;\n/**\n * Specifies the type for the bing map.\n */\npublic bingMapType: any;\n/**\n * To configure the bubble settings of the maps.\n */\npublic bubbleSettings: any;\n/**\n * To configure the datalabel settings of the maps.\n */\npublic dataLabelSettings: any;\n/**\n * Specifies the data source for the layer.\n */\npublic dataSource: any;\n/**\n * Specifies the geometry type\n */\npublic geometryType: any;\n/**\n * To configure the highlight settings of the maps.\n */\npublic highlightSettings: any;\n/**\n * Specifies the key for the layer.\n */\npublic key: any;\n/**\n * Specifies the layerType for the layer.\n */\npublic layerType: any;\n/**\n * To configure the cluster settings.\n */\npublic markerClusterSettings: any;\n/**\n * To configure the marker settings.\n */\npublic markerSettings: any;\n/**\n * navigationLineSetting\n */\npublic navigationLineSettings: any;\n/**\n * Specifies the query to select particular data from the shape data. \n * This property is applicable only when the DataSource is `ej.DataManager`.\n */\npublic query: any;\n/**\n * To configure the selection settings of the maps.\n */\npublic selectionSettings: any;\n/**\n * Specifies the shape data for the layer.\n */\npublic shapeData: any;\n/**\n * Specifies the shapeDataPath for the layer.\n */\npublic shapeDataPath: any;\n/**\n * Specifies the shapePropertyPath for the layer.\n */\npublic shapePropertyPath: any;\n/**\n * Specifies the shape properties\n */\npublic shapeSettings: any;\n/**\n * To configure the legend toggle settings.\n */\npublic toggleLegendSettings: any;\n/**\n * To configure the tooltip settings of the maps layer.\n */\npublic tooltipSettings: any;\n/**\n * Specifies the urlTemplate for the layer.\n */\npublic urlTemplate: any;\n/**\n * Toggle the visibility of the layers.\n */\npublic visible: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-layers>e-layer',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n        childMarkerSettings: new ContentChild(MarkersDirective), \n        childBubbleSettings: new ContentChild(BubblesDirective), \n        childNavigationLineSettings: new ContentChild(NavigationLinesDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction LayerDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLayerDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayerDirective.ctorParameters;\n/** @type {?} */\nLayerDirective.prototype.childMarkerSettings;\n/** @type {?} */\nLayerDirective.prototype.childBubbleSettings;\n/** @type {?} */\nLayerDirective.prototype.childNavigationLineSettings;\n/** @type {?} */\nLayerDirective.prototype.tags;\n/**\n * Specifies the type for the layer.\n * @type {?}\n */\nLayerDirective.prototype.type;\n/**\n * Specifies the animation duration for the layer.\n * @type {?}\n */\nLayerDirective.prototype.animationDuration;\n/**\n * Specifies the type for the bing map.\n * @type {?}\n */\nLayerDirective.prototype.bingMapType;\n/**\n * To configure the bubble settings of the maps.\n * @type {?}\n */\nLayerDirective.prototype.bubbleSettings;\n/**\n * To configure the datalabel settings of the maps.\n * @type {?}\n */\nLayerDirective.prototype.dataLabelSettings;\n/**\n * Specifies the data source for the layer.\n * @type {?}\n */\nLayerDirective.prototype.dataSource;\n/**\n * Specifies the geometry type\n * @type {?}\n */\nLayerDirective.prototype.geometryType;\n/**\n * To configure the highlight settings of the maps.\n * @type {?}\n */\nLayerDirective.prototype.highlightSettings;\n/**\n * Specifies the key for the layer.\n * @type {?}\n */\nLayerDirective.prototype.key;\n/**\n * Specifies the layerType for the layer.\n * @type {?}\n */\nLayerDirective.prototype.layerType;\n/**\n * To configure the cluster settings.\n * @type {?}\n */\nLayerDirective.prototype.markerClusterSettings;\n/**\n * To configure the marker settings.\n * @type {?}\n */\nLayerDirective.prototype.markerSettings;\n/**\n * navigationLineSetting\n * @type {?}\n */\nLayerDirective.prototype.navigationLineSettings;\n/**\n * Specifies the query to select particular data from the shape data. \n * This property is applicable only when the DataSource is `ej.DataManager`.\n * @type {?}\n */\nLayerDirective.prototype.query;\n/**\n * To configure the selection settings of the maps.\n * @type {?}\n */\nLayerDirective.prototype.selectionSettings;\n/**\n * Specifies the shape data for the layer.\n * @type {?}\n */\nLayerDirective.prototype.shapeData;\n/**\n * Specifies the shapeDataPath for the layer.\n * @type {?}\n */\nLayerDirective.prototype.shapeDataPath;\n/**\n * Specifies the shapePropertyPath for the layer.\n * @type {?}\n */\nLayerDirective.prototype.shapePropertyPath;\n/**\n * Specifies the shape properties\n * @type {?}\n */\nLayerDirective.prototype.shapeSettings;\n/**\n * To configure the legend toggle settings.\n * @type {?}\n */\nLayerDirective.prototype.toggleLegendSettings;\n/**\n * To configure the tooltip settings of the maps layer.\n * @type {?}\n */\nLayerDirective.prototype.tooltipSettings;\n/**\n * Specifies the urlTemplate for the layer.\n * @type {?}\n */\nLayerDirective.prototype.urlTemplate;\n/**\n * Toggle the visibility of the layers.\n * @type {?}\n */\nLayerDirective.prototype.visible;\n/** @type {?} */\nLayerDirective.prototype.viewContainerRef;\n}\n\n/**\n * Layer Array Directive\n */\nexport class LayersDirective extends ArrayBase<LayersDirective> {\nconstructor() {\n        super('layers');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-maps>e-layers',\n    queries: {\n        children: new ContentChildren(LayerDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LayersDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLayersDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayersDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet /** @type {?} */ input: string[] = ['content', 'horizontalAlignment', 'verticalAlignment', 'x', 'y', 'zIndex'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Annotation Directive\n * ```html\n * <e-maps-annotations>\n * <e-maps-annotation></e-maps-annotation>\n * </e-maps-annotations>\n * ```\n */\nexport class AnnotationDirective extends ComplexBase<AnnotationDirective> {\n/**\n * Specifies the horizontal alignment of annotation.\n */\npublic horizontalAlignment: any;\n/**\n * Specifies the vertical alignment of annotation.\n */\npublic verticalAlignment: any;\n/**\n * Specifies the position of x.\n */\npublic x: any;\n/**\n * Specifies the position of y.\n */\npublic y: any;\n/**\n * Specifies the zIndex of the annotation.\n */\npublic zIndex: any;\n/**\n * Specifies the id of html element.\n */\n@Template()\n    public content: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-maps-annotations>e-maps-annotation',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: ContentChild, args: ['content', ] },],\n};\n}\n\nfunction AnnotationDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAnnotationDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAnnotationDirective.ctorParameters;\n/** @type {?} */\nAnnotationDirective.propDecorators;\n/**\n * Specifies the horizontal alignment of annotation.\n * @type {?}\n */\nAnnotationDirective.prototype.horizontalAlignment;\n/**\n * Specifies the vertical alignment of annotation.\n * @type {?}\n */\nAnnotationDirective.prototype.verticalAlignment;\n/**\n * Specifies the position of x.\n * @type {?}\n */\nAnnotationDirective.prototype.x;\n/**\n * Specifies the position of y.\n * @type {?}\n */\nAnnotationDirective.prototype.y;\n/**\n * Specifies the zIndex of the annotation.\n * @type {?}\n */\nAnnotationDirective.prototype.zIndex;\n/**\n * Specifies the id of html element.\n * @type {?}\n */\nAnnotationDirective.prototype.content;\n/** @type {?} */\nAnnotationDirective.prototype.viewContainerRef;\n}\n\n/**\n * Annotation Array Directive\n */\nexport class AnnotationsDirective extends ArrayBase<AnnotationsDirective> {\nconstructor() {\n        super('annotations');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-maps>e-maps-annotations',\n    queries: {\n        children: new ContentChildren(AnnotationDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AnnotationsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAnnotationsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAnnotationsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { Maps } from '@syncfusion/ej2-maps';\n\nimport { LayersDirective } from './layers.directive';\nimport { AnnotationsDirective } from './annotations.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['annotations','background','baseLayerIndex','border','centerPosition','description','enablePersistence','enableRtl','format','height','layers','legendSettings','locale','mapsArea','margin','projectionType','tabIndex','theme','titleSettings','tooltipDisplayMode','useGroupingSeparator','width','zoomSettings'];\nexport const /** @type {?} */ outputs: string[] = ['animationComplete','annotationRendering','beforePrint','bubbleClick','bubbleMouseMove','bubbleRendering','click','dataLabelRendering','doubleClick','itemHighlight','itemSelection','layerRendering','load','loaded','markerClick','markerClusterClick','markerClusterMouseMove','markerClusterRendering','markerMouseMove','markerRendering','pan','resize','rightClick','shapeHighlight','shapeRendering','shapeSelected','tooltipRender','tooltipRenderComplete','zoom','dataSourceChange'];\nexport const /** @type {?} */ twoWays: string[] = ['dataSource'];\n/**\n * Represents Maps Component\n * ```html\n * <ej-maps></ej-maps>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class MapsComponent extends Maps implements IComponentBase {\npublic childLayers: any;\npublic childAnnotations: any;\npublic tags: string[] = ['layers', 'annotations'];\npublic dataSourceChange: any;\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('MapsBubble');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('MapsLegend');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('MapsMarker');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('MapsHighlight');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('MapsSelection');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('MapsMapsTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('MapsZoom');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('MapsDataLabel');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('MapsNavigationLine');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('MapsAnnotations');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-maps',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childLayers: new ContentChild(LayersDirective), \n        childAnnotations: new ContentChild(AnnotationsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\n}\n\nfunction MapsComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMapsComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMapsComponent.ctorParameters;\n/** @type {?} */\nMapsComponent.prototype.childLayers;\n/** @type {?} */\nMapsComponent.prototype.childAnnotations;\n/** @type {?} */\nMapsComponent.prototype.tags;\n/** @type {?} */\nMapsComponent.prototype.dataSourceChange;\n/** @type {?} */\nMapsComponent.prototype.registerEvents;\n/** @type {?} */\nMapsComponent.prototype.addTwoWay;\n/** @type {?} */\nMapsComponent.prototype.ngEle;\n/** @type {?} */\nMapsComponent.prototype.srenderer;\n/** @type {?} */\nMapsComponent.prototype.viewContainerRef;\n/** @type {?} */\nMapsComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MarkerDirective, MarkersDirective } from './markersettings.directive';\nimport { ColorMappingDirective, ColorMappingsDirective } from './colormapping.directive';\nimport { BubbleDirective, BubblesDirective } from './bubblesettings.directive';\nimport { NavigationLineDirective, NavigationLinesDirective } from './navigationlinesettings.directive';\nimport { LayerDirective, LayersDirective } from './layers.directive';\nimport { AnnotationDirective, AnnotationsDirective } from './annotations.directive';\nimport { MapsComponent } from './maps.component';\n/**\n * NgModule definition for the Maps component.\n */\nexport class MapsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        MapsComponent,\n        MarkerDirective,\n        MarkersDirective,\n        ColorMappingDirective,\n        ColorMappingsDirective,\n        BubbleDirective,\n        BubblesDirective,\n        NavigationLineDirective,\n        NavigationLinesDirective,\n        LayerDirective,\n        LayersDirective,\n        AnnotationDirective,\n        AnnotationsDirective\n    ],\n    exports: [\n        MapsComponent,\n        MarkerDirective,\n        MarkersDirective,\n        ColorMappingDirective,\n        ColorMappingsDirective,\n        BubbleDirective,\n        BubblesDirective,\n        NavigationLineDirective,\n        NavigationLinesDirective,\n        LayerDirective,\n        LayersDirective,\n        AnnotationDirective,\n        AnnotationsDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MapsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMapsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMapsModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MarkerDirective, MarkersDirective } from './markersettings.directive';\nimport { ColorMappingDirective, ColorMappingsDirective } from './colormapping.directive';\nimport { BubbleDirective, BubblesDirective } from './bubblesettings.directive';\nimport { NavigationLineDirective, NavigationLinesDirective } from './navigationlinesettings.directive';\nimport { LayerDirective, LayersDirective } from './layers.directive';\nimport { AnnotationDirective, AnnotationsDirective } from './annotations.directive';\nimport { MapsComponent } from './maps.component';\nimport { MapsModule } from './maps.module';\nimport {Bubble, Legend, Marker, Highlight, Selection, MapsTooltip, Zoom, DataLabel, NavigationLine, Annotations} from '@syncfusion/ej2-maps';\n\n\nexport const /** @type {?} */ BubbleService: ValueProvider = { provide: 'MapsBubble', useValue: Bubble};\nexport const /** @type {?} */ LegendService: ValueProvider = { provide: 'MapsLegend', useValue: Legend};\nexport const /** @type {?} */ MarkerService: ValueProvider = { provide: 'MapsMarker', useValue: Marker};\nexport const /** @type {?} */ HighlightService: ValueProvider = { provide: 'MapsHighlight', useValue: Highlight};\nexport const /** @type {?} */ SelectionService: ValueProvider = { provide: 'MapsSelection', useValue: Selection};\nexport const /** @type {?} */ MapsTooltipService: ValueProvider = { provide: 'MapsMapsTooltip', useValue: MapsTooltip};\nexport const /** @type {?} */ ZoomService: ValueProvider = { provide: 'MapsZoom', useValue: Zoom};\nexport const /** @type {?} */ DataLabelService: ValueProvider = { provide: 'MapsDataLabel', useValue: DataLabel};\nexport const /** @type {?} */ NavigationLineService: ValueProvider = { provide: 'MapsNavigationLine', useValue: NavigationLine};\nexport const /** @type {?} */ AnnotationsService: ValueProvider = { provide: 'MapsAnnotations', useValue: Annotations};\n/**\n * NgModule definition for the Maps component with providers.\n */\nexport class MapsAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, MapsModule],\n    exports: [\n        MapsModule\n    ],\n    providers:[\n        BubbleService,\n        LegendService,\n        MarkerService,\n        HighlightService,\n        SelectionService,\n        MapsTooltipService,\n        ZoomService,\n        DataLabelService,\n        NavigationLineService,\n        AnnotationsService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MapsAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMapsAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMapsAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["outputs","MarkerDirective","_super","viewContainerRef","_this","call","this","setValue","registerEvents","__extends","ComplexBase","decorators","type","Directive","args","selector","inputs","queries","ctorParameters","ViewContainerRef","propDecorators","template","ContentChild","tooltipSettings_template","__decorate","Template","prototype","MarkersDirective","ArrayBase","children","ContentChildren","ColorMappingDirective","ColorMappingsDirective","BubbleDirective","tags","childColorMapping","BubblesDirective","NavigationLineDirective","NavigationLinesDirective","LayerDirective","childMarkerSettings","childBubbleSettings","childNavigationLineSettings","LayersDirective","AnnotationDirective","content","AnnotationsDirective","twoWays","exports","MapsComponent","ngEle","srenderer","injector","element","nativeElement","injectedModules","mod","get","indexOf","push","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","addTwoWay","ngOnInit","ngAfterViewInit","ngOnDestroy","ngAfterContentChecked","Maps","Component","changeDetection","ChangeDetectionStrategy","OnPush","childLayers","childAnnotations","ElementRef","Renderer2","Injector","ComponentMixins","ComponentBase","__metadata","MapsModule","NgModule","imports","CommonModule","declarations","BubbleService","provide","useValue","Bubble","LegendService","Legend","MarkerService","Marker","HighlightService","Highlight","SelectionService","Selection","MapsTooltipService","MapsTooltip","ZoomService","Zoom","DataLabelService","DataLabel","NavigationLineService","NavigationLine","AnnotationsService","Annotations","MapsAllModule","providers"],"mappings":"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"}
