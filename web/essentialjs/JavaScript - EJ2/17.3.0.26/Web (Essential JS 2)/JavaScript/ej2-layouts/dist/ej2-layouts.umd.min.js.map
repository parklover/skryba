{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains('e-pane')) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                this.updateResizablePanes(i);\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.nextPane.style.flexGrow = '0';\n                if (_this.previousPane.classList.contains('e-collapsed') && _this.previousPane.style.flexGrow === '0') {\n                    _this.previousPane.style.flexGrow = '0';\n                }\n                else {\n                    _this.previousPane.style.flexGrow = '1';\n                }\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.previousElementSibling.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.splitInstance.prevPaneCollapsed && this.splitInstance.nextPaneExpanded) {\n            addClass([e.target], HIDE_ICON);\n            this.showCurrentBarIcon();\n            this.resizableModel(this.currentBarIndex, false);\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n                // first pane collapsible false\n                this.showTargetBarIcon(this.prevBar, this.leftArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            this.showCurrentBarIcon();\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                if (!this.paneSettings[this.currentBarIndex].collapsible && this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            this.showCurrentBarIcon();\n            removeClass([e.target], HIDE_ICON);\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n                else {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            this.showCurrentBarIcon();\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n                // only when middle pane collapsible to true\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                if (_this.previousPane.style.flexBasis.indexOf('%') > 0 || _this.nextPane.style.flexBasis.indexOf('%') > 0) {\n                    var previousFlexBasis = _this.updatePaneFlexBasis(_this.previousPane);\n                    var nextFlexBasis = _this.updatePaneFlexBasis(_this.nextPane);\n                    _this.totalPercent = previousFlexBasis + nextFlexBasis;\n                    _this.totalWidth = _this.convertPercentageToPixel(_this.totalPercent + '%');\n                }\n                else {\n                    _this.totalWidth = (_this.orientation === 'Horizontal') ? _this.previousPane.offsetWidth + _this.nextPane.offsetWidth :\n                        _this.previousPane.offsetHeight + _this.nextPane.offsetHeight;\n                }\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            val = (val).trim();\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            detach(this.element);\n            this.element = this.wrapper;\n            this.wrapperParent.appendChild(this.wrapper);\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel .e-panel-container .e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(document.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        if (this.table) {\n            this.table.remove();\n        }\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        this.panelCollection.forEach(function (item) {\n            item.remove();\n        });\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.initialize();\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","setAttribute","toLowerCase","wireClickEvents","eventName","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","querySelectorAll","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","beforeExpandArgs","cancel","flexGrow","currentBarIndex","previousElementSibling","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","splitInstance","prevPaneCollapsed","nextPaneExpanded","showCurrentBarIcon","prevBar","nextPaneNextEle","nextBar","nextPaneIndex","beforeCollapseArgs","collapseEventArgs","isBlazor","event","prevPaneIndex","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","nextElementSibling","prevPanePreEle","currentIndex","getSeparatorIndex","getPrevBar","getNextBar","updateBars","preventDefault","resizeStartArgs","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","addPaneClass","removePaneOrders","paneClass","panes","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","item","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","attributes","upTarget","undefined","allowFloating","moveItemsUpwards","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","removePanel","movePanel","resizePanel","removeAttribute","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues"],"mappings":"wPAAA,IAAIA,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,iBAChBC,wBAA2BC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASO,IAAOC,KAAKC,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMO,EAAGG,UAAYV,EAAEU,UAAW,IAAIH,IAV3C,GAaxCK,EAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HjB,EAAvHkB,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOf,OAAOoB,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,iBAAZM,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIQ,EAAIX,EAAWM,OAAS,EAAGK,GAAK,EAAGA,KAASzB,EAAIc,EAAWW,MAAIJ,GAAKH,EAAI,EAAIlB,EAAEqB,GAAKH,EAAI,EAAIlB,EAAEe,EAAQC,EAAKK,GAAKrB,EAAEe,EAAQC,KAASK,GAChJ,OAAOH,EAAI,GAAKG,GAAKnB,OAAOwB,eAAeX,EAAQC,EAAKK,GAAIA,GAK5DM,EAAO,aACPC,EAAkB,wBAClBC,EAAgB,sBAChBC,EAAO,SACPC,EAAe,oBACfC,EAAe,kBACfC,EAAY,cACZC,EAAc,yBACdC,EAAc,uBACdC,EAAc,gBACdC,EAAc,eACdC,EAAa,mBACbC,EAAgB,wBAChBC,EAAkB,oBAClBC,EAAmB,qBACnBC,EAAe,iBAEfC,EAAW,aAGXC,EAAc,gBACdC,EAAiB,mBACjBC,EAAc,gBACdC,EAAa,eACbC,EAAW,aACXC,EAAa,eACbC,EAAY,gBACZC,EAAc,aACdC,EAAgB,cAChBC,EAAc,gBACdC,EAAiB,cAKjBC,EAAgC,SAAUC,GAE1C,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAOC,MAAMhD,KAAMU,YAAcV,KAuB/D,OAzBAX,EAAUyD,EAAgBC,GAI1B3C,GACI6C,cACDH,EAAe5C,UAAW,YAAQ,GACrCE,GACI6C,YAAS,IACVH,EAAe5C,UAAW,mBAAe,GAC5CE,GACI6C,YAAS,IACVH,EAAe5C,UAAW,iBAAa,GAC1CE,GACI6C,YAAS,IACVH,EAAe5C,UAAW,iBAAa,GAC1CE,GACI6C,WAAS,OACVH,EAAe5C,UAAW,WAAO,GACpCE,GACI6C,WAAS,OACVH,EAAe5C,UAAW,WAAO,GACpCE,GACI6C,cACDH,EAAe5C,UAAW,eAAW,GACjC4C,GACTI,iBAsBEC,EAA0B,SAAUJ,GAOpC,SAASI,EAASC,EAASC,GACvB,IAAIC,EAAQP,EAAOQ,KAAKvD,KAAMoD,EAASC,IAAYrD,KAcnD,OAbAsD,EAAME,YACNF,EAAMG,aACNH,EAAMI,kBACNJ,EAAMK,WACNL,EAAMM,uBACNN,EAAMO,sBACNP,EAAMQ,2BAA4B,EAClCR,EAAMS,4BAA6B,EACnCT,EAAMU,mBACNV,EAAMW,OAAS,EACfX,EAAMY,qBAAuB,YAAa,WAAY,WAAY,mBAAoB,iBAAkB,eAAgB,kBACxHZ,EAAMa,wBAA0B,mBAAoB,aAAc,eAClEb,EAAMc,WAAa,IACZd,EAq/CX,OA1gDAjE,EAAU8D,EAAUJ,GA8BpBI,EAASjD,UAAUmE,kBAAoB,SAAUC,EAASC,GACtD,GAAKvE,KAAKqD,QAAQmB,UAAUC,SAASvD,GAGrC,IAAK,IAAIwD,EAAK,EAAGC,EAAKlF,OAAOmF,KAAKN,GAAUI,EAAKC,EAAGhE,OAAQ+D,IAAM,CAE9D,OADWC,EAAGD,IAEV,IAAK,SACD1E,KAAK6E,gBAAgB7E,KAAKqD,QAASiB,EAAQQ,OAAQ,UACnD,MACJ,IAAK,QACD9E,KAAK6E,gBAAgB7E,KAAKqD,QAASiB,EAAQS,MAAO,SAClD,MACJ,IAAK,WACD/E,KAAKgF,YAAYV,EAAQW,UACzB,MACJ,IAAK,UACDjF,KAAKkF,UAAUlF,KAAKmF,SACpB,MACJ,IAAK,gBACDnF,KAAKoF,iBAAiBd,EAAQe,eAC9B,MACJ,IAAK,cACDrF,KAAKsF,kBAAkBhB,EAAQiB,aAC/B,MACJ,IAAK,eACD,GAAMjB,EAAQkB,wBAAwB5F,OAAS2E,EAAQiB,wBAAwB5F,MAqC3EI,KAAKyF,sBACLzF,KAAK2D,WACL3D,KAAKwD,YACLxD,KAAK0F,gBAAgB1F,KAAKqD,SAC1BrD,KAAK2F,aAAa3F,KAAKqD,SACvBrD,KAAK4F,qBACL5F,KAAK6F,OAAO7F,KAAK8F,WACjB9F,KAAK+F,mBA1CL,IAAK,IADDC,EAAavG,OAAOmF,KAAKN,EAAQkB,cAC5BxE,EAAI,EAAGA,EAAIgF,EAAWrF,OAAQK,IAGnC,IAAK,IAFDiF,EAAQC,SAASzG,OAAOmF,KAAKN,EAAQkB,cAAcxE,GAAI,IACvDmF,EAAoB1G,OAAOmF,KAAKN,EAAQkB,aAAaS,IAAQtF,OACxDyF,EAAI,EAAGA,EAAID,EAAmBC,IAAK,CACxC,IAAIC,EAAW5G,OAAOmF,KAAKN,EAAQkB,aAAaS,IAAQG,GACxD,OAAQC,GACJ,IAAK,UACD,IAAIC,EAAW7G,OAAO6E,EAAQkB,aAAaS,IAAQI,GAC9CE,oBAAkBD,KACnBtG,KAAKwD,SAASyC,GAAOO,UAAY,GACjCxG,KAAKyG,YAAYH,EAAUtG,KAAKwD,SAASyC,KAE7C,MACJ,IAAK,YACD,IAAIS,EAASjH,OAAO6E,EAAQkB,aAAaS,IAAQI,GACjDrG,KAAK2G,eAAeV,EAAOS,GAC3B,MACJ,IAAK,cACD1G,KAAK4G,uBAAuBX,GAC5B,MACJ,IAAK,YACD3B,EAAQkB,aAAaS,GAAOY,UAAY7G,KAAK+F,cAAgB/F,KAAK8G,kBAAkBb,GACpF,MACJ,IAAK,OACD,IAAIc,EAAatH,OAAO6E,EAAQkB,aAAaS,IAAQI,GAClC,KAAfU,GAAsBR,oBAAkBQ,KACxC/G,KAAKwD,SAASyC,GAAOe,MAAMC,UAAYF,EACvC/G,KAAKwD,SAASyC,GAAOzB,UAAU0C,IAAIvF,KAiB3D,MACJ,IAAK,YACD3B,KAAK6F,OAAOvB,EAAQwB,cAKpC3C,EAASjD,UAAUiH,UAAY,WAC3BnH,KAAKoH,QAAUpH,KAAKqD,QAAQgE,WAAU,GACtCrH,KAAKsH,cAAgBtH,KAAKqD,QAAQkE,cAClCC,eAAaxH,KAAKoH,UAAW,YAAa,QAASlG,IACnD,IAAIqE,EAAmC,eAArBvF,KAAKuF,YAA+BpE,EAAkBC,EACxEqG,YAAUzH,KAAKqD,SAAUkC,GACzB,IACImC,EAAgB,SADTC,UAAQC,KAAKC,KACM,OAAS,GACvC7H,KAAKgF,YAAY0C,GACbC,UAAQG,UACRL,YAAUzH,KAAKqD,SA5LT,qBA+LdF,EAASjD,UAAU6H,eAAiB,WAChC,OAAO/H,KAAKgI,kBAOhB7E,EAASjD,UAAU+H,cAAgB,WAC/B,MAAO,YAMX9E,EAASjD,UAAUgI,OAAS,WACxBlI,KAAKmI,sBACLnI,KAAKgF,YAAYhF,KAAKiF,UACtBjF,KAAKkF,UAAUlF,KAAKmF,SACpBnF,KAAKoI,aAAapI,KAAKqI,UAAUrI,KAAKqD,SAAUrD,KAAKsI,SAAStI,KAAKqD,UACnErD,KAAK0F,gBAAgB1F,KAAKqD,SAC1BrD,KAAK2F,aAAa3F,KAAKqD,SACvBrD,KAAK4F,qBACL5F,KAAKuI,kBACLvI,KAAK6F,OAAO7F,KAAK8F,WACjB9F,KAAK+F,cACLyC,eAAatB,IAAIuB,SAAU,mBAAoBzI,KAAK0I,gBAAiB1I,MACrEA,KAAK2I,kBAETxF,EAASjD,UAAUwI,gBAAkB,SAAUE,GACtCA,EAAEtI,OAAOkE,UAAUC,SAASjD,IAAe+E,oBAAkBvG,KAAK6I,oBACnE7I,KAAK6I,iBAAiBrE,UAAUsE,OAAO/G,GACvC/B,KAAK6I,iBAAiBrE,UAAUsE,OAAO9G,KAG/CmB,EAASjD,UAAUiI,oBAAsB,WAIrC,IAAK,IAHDY,EACAC,EAEKC,EAAY,EAAGA,EAAYjJ,KAAKmE,uBAAuBxD,OAAQsI,IACpED,EAAQhJ,KAAKqD,QAAQ6F,aAAalJ,KAAKmE,uBAAuB8E,IACzD1C,oBAAkByC,KAGnBhJ,KAFA+I,EAAM/I,KAAKmJ,iBAAiBnJ,KAAKmE,uBAAuB8E,KAE5CD,GAIpB,IAAK,IAAII,EAAY,EAAGA,EAAYpJ,KAAKqD,QAAQgG,SAAS1I,OAAQyI,IAC9D,IAAK,IAAIE,EAAW,EAAGA,EAAWtJ,KAAKkE,oBAAoBvD,OAAQ2I,IAE/D,GADAN,EAAQhJ,KAAKqD,QAAQgG,SAASD,GAAWF,aAAalJ,KAAKkE,oBAAoBoF,KAC1E/C,oBAAkByC,GAAQ,CAE3BA,EAAiB,iBADjBD,EAAM/I,KAAKmJ,iBAAiBnJ,KAAKkE,oBAAoBoF,MACX,cAARP,EAAkC,SAAVC,EAAoBA,EAC1EzC,oBAAkBvG,KAAKwF,aAAa4D,MACpCpJ,KAAKwF,aAAa4D,IACdG,KAAM,GACNC,IAAK,KACLC,IAAK,KACLC,QAAS,GACTC,WAAW,EACXC,aAAa,EACb/C,WAAW,IAInB,IAAIgD,EAAU7J,KAAKwF,aAAa4D,GAAWL,GAC/B,cAARA,GAA+B,gBAARA,GAAiC,cAARA,IAEhD/I,KAAKwF,aAAa4D,GAAWL,GAAOC,IAEpCzC,oBAAkBsD,IAAwB,KAAZA,KAE9B7J,KAAKwF,aAAa4D,GAAWL,GAAOC,KAMxD7F,EAASjD,UAAUuF,oBAAsB,cAClCqE,MAAMvG,KAAKvD,KAAKqD,QAAQgG,UAAUU,QAAQ,SAAUC,GAAMC,SAAOD,MAExE7G,EAASjD,UAAUqI,gBAAkB,WAYjC,IAAK,IAXD2B,EAAalK,KAAKwD,SAAS7C,OAC3BwJ,KACAC,GACAb,KAAM,GACNC,IAAK,KACLC,IAAK,KACLC,QAAS,GACTC,WAAW,EACX9C,WAAW,EACX+C,aAAa,GAER5I,EAAI,EAAGA,EAAIkJ,EAAYlJ,IACxBuF,oBAAkBvG,KAAKwF,aAAaxE,IACpCmJ,EAAenJ,GAAKoJ,EAGpBD,EAAenJ,GAAKhB,KAAKwF,aAAaxE,GAG9ChB,KAAKqK,eAAgB7E,aAAgB2E,IAAkB,IAE3DhH,EAASjD,UAAUoK,WAAa,SAAUlB,EAAWmB,GACjD,OAAQvK,KAAK2D,QAAQyF,GAAWoB,cAAc,IAAMpI,EAAiB,IAAMmI,IAE/EpH,EAASjD,UAAUiJ,iBAAmB,SAAUsB,GAC5C,OAAOA,EAAUX,MAAMW,EAAUC,YAAY,KAAO,IAExDvH,EAASjD,UAAU2F,OAAS,SAAU8E,GAClCA,EAAMlD,YAAUzH,KAAKqD,SA5SnB,SA4SoCmE,eAAaxH,KAAKqD,SA5StD,UA8SNF,EAASjD,UAAU2E,gBAAkB,SAAUxB,EAASkG,EAAMlD,GAC1D,IAAIW,EAAqB,UAAbX,GAAyBtB,MAAS6F,aAAWrB,KAAYzE,OAAU8F,aAAWrB,IAC1FsB,oBAAkBxH,EAAS2D,IAE/B7D,EAASjD,UAAU0F,mBAAqB,WACpC,IAAK,IAAIK,EAAQ,EAAGA,EAAQjG,KAAKwD,SAAS7C,OAAQsF,IACzB,eAArBjG,KAAKuF,YAA+BvF,KAAKgE,gBAAgB8G,KAAK9K,KAAKwD,SAASyC,GAAO8E,wBAAwBhG,OACvG/E,KAAKgE,gBAAgB8G,KAAK9K,KAAKwD,SAASyC,GAAO8E,wBAAwBjG,SAGnF3B,EAASjD,UAAU8E,YAAc,SAAUgG,GACnCA,GACAvD,YAAUzH,KAAKqD,SAAU2H,EAAUC,MAAMD,EAAUE,QAAQ,MAAQ,EAAI,IAAM,OAGrF/H,EAASjD,UAAUiL,YAAc,SAAU7K,GACvCmH,YAAU2D,SAAO,IAAMvJ,EAAYvB,IAAU2B,IAEjDkB,EAASjD,UAAUmL,YAAc,SAAU/K,IAClCiG,oBAAkBvG,KAAKsL,eAAiBtL,KAAKsL,aAAa9G,UAAUC,SAAS5B,KAC7E0D,oBAAkBvG,KAAKuL,WAAavL,KAAKuL,SAAS/G,UAAUC,SAAS5B,IACtE2E,eAAa4D,SAAO,IAAMvJ,EAAYvB,IAAU2B,IAGxDkB,EAASjD,UAAUyG,eAAiB,SAAUV,EAAOS,GACjD,IAAI0C,EACApI,EAAIiF,EACRmD,EAAanD,IAAWjG,KAAK2D,QAAc,OAAMsC,EAAQ,EAAKA,EAC9DuC,eAAaM,OAAO9I,KAAK2D,QAAQyF,GAAY,YAAapJ,KAAKwL,aAC3D9E,GACA8B,eAAatB,IAAIlH,KAAK2D,QAAQyF,GAAY,YAAapJ,KAAKwL,YAAaxL,MACrEA,KAAKyL,gBACLzL,KAAKqL,YAAYrL,KAAK2D,QAAQyF,IAC9B5B,eAAa4D,SAAO,IAAMvJ,EAAY7B,KAAK2D,QAAQyF,KAAcnH,GACjEjC,KAAK2D,QAAQyF,GAAW5E,UAAU0C,IAAIpF,GACrCmE,IAAWjG,KAAK2D,QAAc,OAAK3D,KAAKwD,SAASyC,GAAOzB,UAAU0C,IAAIrE,GACnE7C,KAAKwD,SAAS4F,GAAW5E,UAAU0C,IAAIrE,GAC3C7C,KAAK0L,qBAAqB1K,MAI9BhB,KAAK0L,qBAAqB1K,GAC1BhB,KAAKmL,YAAYnL,KAAK2D,QAAQyF,IAC9BpJ,KAAK2D,QAAQyF,GAAW5E,UAAUsE,OAAOhH,GACxCmE,IAAWjG,KAAK2D,QAAc,OAAK3D,KAAKwD,SAASyC,GAAOzB,UAAUsE,OAAOjG,GACtE7C,KAAKwD,SAAS4F,GAAW5E,UAAUsE,OAAOjG,KAGtDM,EAASjD,UAAU0G,uBAAyB,SAAUX,GAClD,IAAI0F,EACAC,EACAxC,EACJA,EAAYnD,IAAWjG,KAAK2D,QAAc,OAAKsC,EAAQ,EAAKA,EAC5D0F,EAA+B,eAArB3L,KAAKuF,YAAgCvF,KAAKsK,WAAWlB,EAAW9G,GAActC,KAAKsK,WAAWlB,EAAW7G,GACnHqJ,EAA+B,eAArB5L,KAAKuF,YAAgCvF,KAAKsK,WAAWlB,EAAW/G,GAAerC,KAAKsK,WAAWlB,EAAW5G,GACpHxC,KAAK6L,gBAAgB7L,KAAKwD,SAASyC,GAAQA,GAC3CjG,KAAK8L,oBAAoB1C,EAAWwC,EAAQD,IAEhDxI,EAASjD,UAAU6L,cAAgB,SAAUC,EAAUC,GACnD,OAAOC,YAAU,IAAMD,EAAOjM,KAAK2D,QAAQqI,IAAW,IAE1D7I,EAASjD,UAAUiM,kBAAoB,SAAUlG,EAAO8F,EAAeK,GACnE,IAAK7F,oBAAkBN,GAAQ,CAC3B,IACIoG,EAAgBpG,IAAUjG,KAAK2D,QAAQhD,OACvCqL,EAAWK,EAAepG,EAAQ,EAAIA,IACrCoG,GAAgBrM,KAAKwD,SAASyC,EAAQ,GAAGzB,UAAUC,SAAS9B,IAA4B,IAAVsD,EACnEjG,KAAK+L,cAAcC,EAAW,EAAGI,GAGjC,EAAiBpM,KAAK+L,cAAcC,EAAUI,GAAgBpM,KAAK+L,cAAcC,EAAUD,IAEjGO,UAGlBnJ,EAASjD,UAAU6F,YAAc,SAAUE,GACvC,GAAKM,oBAAkBN,GAGlB,CACD,IAAK,IAAIsG,EAAI,EAAGA,EAAIvM,KAAKwD,SAAS7C,OAAQ4L,KACjChG,oBAAkBvG,KAAKwF,aAAa+G,KAAOvM,KAAKwF,aAAa+G,GAAG1F,WACjE7G,KAAKmM,kBAAkBI,EAAGvM,KAAKwM,eAAeT,cAAe/L,KAAKwM,eAAeJ,cAGzF,IAASG,EAAIvM,KAAKwD,SAAS7C,OAAS,EAAG4L,GAAK,EAAGA,IAC3C,IAAKhG,oBAAkBvG,KAAKwF,aAAa+G,KAAOvM,KAAKwF,aAAa+G,GAAG1F,YAChE7G,KAAKwD,SAAS+I,GAAG/H,UAAUC,SAAS9B,GAAgB,CACrD,IAAIoJ,EAAqC,eAArB/L,KAAKuF,YAA+BlD,EAAcG,EACtE,GAAU,IAAN+J,EAAS,CACOvM,KAAK+L,cAAcQ,EAAI,EAAGR,GAChCO,QAEd,IAAKtM,KAAKuL,SAAS/G,UAAUC,SAAS9B,GAAgB,CAClC3C,KAAK+L,cAAcQ,EAAI,EAAGR,GAChCO,eAlBtBtM,KAAKmM,kBAAkBlG,EAAOjG,KAAKwM,eAAeT,cAAe/L,KAAKwM,eAAeJ,eAwB7FjJ,EAASjD,UAAUsM,aAAe,WAE9B,OADAxM,KAAKyM,oBACIV,cAAqC,eAArB/L,KAAKuF,YAAgCjD,EAAaC,EACvE6J,aAAoC,aAArBpM,KAAKuF,YAA8B/C,EAAaH,IAGvEc,EAASjD,UAAU4G,kBAAoB,SAAUb,GACxCM,oBAAkBvG,KAAKwF,aAAaS,KAAYM,oBAAkBvG,KAAKwF,aAAaS,GAAOY,aACzF7G,KAAKwD,SAASyC,GAAOzB,UAAUC,SAAS9B,IAC3C3C,KAAKmM,kBAAkBlG,EAAOjG,KAAKwM,eAAeJ,aAAcpM,KAAKwM,eAAeT,gBAG5F5I,EAASjD,UAAUgF,UAAY,SAAUC,GACrCA,EAAUqC,eAAaxH,KAAKqD,SAAUnB,GAAYuF,YAAUzH,KAAKqD,SAAUnB,IAE/EiB,EAASjD,UAAUkF,iBAAmB,SAAUmE,GAG5C,IAAK,IAFDmD,EAAYnG,oBAAkBgD,GAAQ,OAASA,EAAO,KACtDoD,EAAiC,eAArB3M,KAAKuF,YAA+B9D,EAAcC,EACzDuE,EAAQ,EAAGA,EAAQjG,KAAK2D,QAAQhD,OAAQsF,IAAS,CACtD,IAAI2G,EAAWV,YAAU,IAAMS,EAAW3M,KAAKqD,SAAS4C,GACpD4G,EAAYX,YAAU,IAAMrK,EAAY+K,GAAU,GAC7B,eAArB5M,KAAKuF,aACLqH,EAAS5F,MAAMjC,MAAQ2H,EAClBnG,oBAAkBsG,KACnBA,EAAU7F,MAAMjC,MAAQ2H,KAI5BE,EAAS5F,MAAMlC,OAAS4H,EACnBnG,oBAAkBsG,KACnBA,EAAU7F,MAAMlC,OAAS4H,MAKzCvJ,EAASjD,UAAUoF,kBAAoB,SAAUC,GAC7C,IAAIuH,EAA6B,aAAhBvH,EACjBvF,KAAKqD,QAAQmB,UAAUsE,OAAOgE,EAAa3L,EAAkBC,GAC7DpB,KAAKqD,QAAQmB,UAAU0C,IAAI4F,EAAa1L,EAAgBD,GACxD,IAAK,IAAI8E,EAAQ,EAAGA,EAAQjG,KAAKwD,SAAS7C,OAAQsF,IAC9CjG,KAAKwD,SAASyC,GAAOzB,UAAUsE,OAAOgE,EAAaxL,EAAeC,GAClEvB,KAAKwD,SAASyC,GAAOzB,UAAU0C,IAAI4F,EAAavL,EAAeD,GAEnE,IAAS2E,EAAQ,EAAGA,EAAQjG,KAAK2D,QAAQhD,OAAQsF,IAC7CgE,SAAOjK,KAAK2D,QAAQsC,IAExBjG,KAAK2D,WACL3D,KAAK2F,aAAa3F,KAAKqD,UAE3BF,EAASjD,UAAU6M,eAAiB,SAAUC,EAAYC,GAEtD,OADcjN,KAAKkN,aAAaF,EAAWzF,cAAc8B,UAAU4D,IAGvE9J,EAASjD,UAAUgN,aAAe,SAAUC,GAExC,IAAK,IADDC,KACKpM,EAAI,EAAGA,EAAImM,EAAWxM,OAAQK,IAC/BmM,EAAWnM,GAAGwD,UAAUC,SAAS,WACjC2I,EAAStC,KAAKqC,EAAWnM,IAGjC,OAAOoM,GAEXjK,EAASjD,UAAUmN,YAAc,SAAUL,EAAYM,GACnD,OAAOtN,KAAK+M,eAAeC,GAAcM,EAAQ,OAErDnK,EAASjD,UAAUqN,YAAc,SAAUP,EAAYM,GACnD,OAAOtN,KAAK+M,eAAeC,GAAeM,EAAQ,GAAK,EAAK,IAEhEnK,EAASjD,UAAUsN,iBAAmB,SAAUR,GAC5C,IAAIS,EAAgBzN,KAAK0N,cAAc,OACvCjG,YAAUgG,IAAiB5L,EAxdrB,YAydN,IAAI6K,EAAYnG,oBAAkBvG,KAAKqF,eAAiB,MAAQrF,KAAKqF,cAAgB,KAChE,eAArBrF,KAAKuF,YAAgCkI,EAAczG,MAAMjC,MAAQ2H,EAAae,EAAczG,MAAMlC,OAAS4H,EAC3GM,EAAWW,YAAYF,IAE3BtK,EAASjD,UAAUmI,UAAY,SAAU/H,GACxBN,KAAK8E,OAElB,MADiC,KAAxBxE,EAAO0G,MAAMlC,QAAiC,SAAhB9E,KAAK8E,OAAoBxE,EAAO0G,MAAMlC,OAAS9E,KAAK8E,QAG/F3B,EAASjD,UAAUoI,SAAW,SAAUhI,GACxBN,KAAK+E,MAEjB,MAD+B,KAAvBzE,EAAO0G,MAAMjC,OAA+B,SAAf/E,KAAK+E,MAAmBzE,EAAO0G,MAAMjC,MAAQ/E,KAAK+E,OAG3F5B,EAASjD,UAAUkI,aAAe,SAAUtD,EAAQC,GAChD8F,oBAAkB7K,KAAKqD,SAAWyB,OAAUA,EAAQC,MAASA,KAEjE5B,EAASjD,UAAU4L,oBAAsB,SAAU7F,EAAO2F,EAAQD,GACzDpF,oBAAkBvG,KAAKwF,aAAaS,KAChCM,oBAAkBvG,KAAKwF,aAAaS,GAAO2D,eAC5C5J,KAAKwF,aAAaS,GAAO2D,YAAcpC,eAAamE,IAAUlJ,IAAcgF,YAAUkE,IAAUlJ,IAC3F8D,oBAAkBvG,KAAKwF,aAAaS,EAAQ,MAC7CjG,KAAKwF,aAAaS,EAAQ,GAAG2D,YAAcpC,eAAaoE,IAAUnJ,IAAcgF,YAAUmE,IAAUnJ,KAEnG8D,oBAAkBvG,KAAKwF,aAAaS,EAAQ,KACxCjG,KAAKwF,aAAaS,EAAQ,GAAc,cACzCjG,KAAKwF,aAAaS,EAAQ,GAAG2D,YAAcpC,eAAaoE,IAAUnJ,IAAcgF,YAAUmE,IAAUnJ,OAMxHU,EAASjD,UAAU0N,gBAAkB,SAAU5M,GAC3C,IAAI6M,EAAY7N,KAAK0N,cAAc,OACnC1N,KAAK2D,QAAQmH,KAAK+C,GAClB,IAEItE,EAFAqC,EAAS5L,KAAK0N,cAAc,UAC5B/B,EAAS3L,KAAK0N,cAAc,UAwBhC,OAtBAnE,EAAOhD,oBAAkBvG,KAAKqF,eAAiB,MAAQrF,KAAKqF,cAAgB,KACnD,eAArBrF,KAAKuF,aACLvF,KAAK8N,UAAYxL,EACjBtC,KAAK+N,WAAa1L,EAClBoF,YAAUkE,IAAUvJ,EAAgBE,EAAYG,IAChDgF,YAAUmE,IAAUxJ,EAAgBC,EAAaI,IACjDgF,YAAUoG,IAAarM,EAAWC,IAClCoM,EAAU7G,MAAMjC,MAAQwE,IAGxB9B,YAAUmE,IAAUxJ,EAAgBI,EAAYC,IAChDgF,YAAUkE,IAAUvJ,EAAgBG,EAAUE,IAC9CgF,YAAUoG,IAAarM,EAAWE,IAClC1B,KAAK8N,UAAYvL,EACjBvC,KAAK+N,WAAavL,EAClBqL,EAAU7G,MAAMlC,OAASyE,GAE7BvJ,KAAKgO,gBAAgBH,GACrBA,EAAUF,YAAYhC,GACtB3L,KAAKwN,iBAAiBK,GACtBA,EAAUF,YAAY/B,GACtB5L,KAAK8L,oBAAoB9K,EAAG4K,EAAQD,GAC7BkC,GAEX1K,EAASjD,UAAUwL,qBAAuB,SAAUzF,GAChDjG,KAAKiO,iBACLjO,KAAKyL,cAAgBzL,KAAKwD,SAASyC,GAAOzB,UAAU0C,IAAIrE,GAAkB7C,KAAKwD,SAASyC,GAAOzB,UAAUsE,OAAOjG,IAEpHM,EAASjD,UAAUyF,aAAe,SAAUrF,GAIxC,IAAK,IADDuN,EAFA3D,EAAalK,KAAKwD,SAAS7C,OAC3BuN,EAAY5N,EAAO+I,SAEdrI,EAAI,EAAGA,EAAIkJ,EAAYlJ,IAC5B,GAAIA,EAAIkJ,EAAa,EASjB,GARA2D,EAAY7N,KAAK4N,gBAAgB5M,GACjC6J,oBAAkBgD,GAAaP,MAAc,EAAJtM,EAAS,IAClDhB,KAAK0D,eAAeoH,KAAU,EAAJ9J,EAAS,GACnCkN,EAAUlN,GAAGmN,WAAWR,YAAYE,GACpC7N,KAAK6I,iBAAmBgF,EACxBA,EAAUO,aAAa,OAAQ,aAC/BP,EAAUO,aAAa,mBAAoBpO,KAAKuF,YAAY8I,eAC5DrO,KAAKsO,kBACDtO,KAAKyL,cAAe,CACpBjD,eAAatB,IAAI2G,EAAW,YAAa7N,KAAKwL,YAAaxL,MAC3D,IAAIuO,EAAmC,SAAtB5G,UAAQC,KAAKC,KAAmB,cAAgB,aACjEW,eAAatB,IAAI2G,EAAWU,EAAWvO,KAAKwL,YAAaxL,MACzD6N,EAAUrJ,UAAU0C,IAAIpF,GACxB9B,KAAK0L,qBAAqB1K,QAG1ByG,YAAU2D,SAAO,IAAMvJ,EAAYgM,IAAa5L,QAIpDjC,KAAK0L,qBAAqB1K,IAItCmC,EAASjD,UAAUuL,YAAc,WAC7B,IAAI9B,GAAY,EAQhB,QAPMpD,oBAAkBvG,KAAKwF,aAAaxF,KAAKwO,0BAC3CxO,KAAKwF,aAAaxF,KAAKwO,wBAAwB7E,YAC9CpD,oBAAkBvG,KAAKwF,aAAaxF,KAAKyO,sBAC1CzO,KAAKwF,aAAaxF,KAAKyO,oBAAoB9E,WAC3CpD,oBAAkBvG,KAAKwF,aAAaxF,KAAKyO,wBACzC9E,GAAY,GAETA,GAEXxG,EAASjD,UAAU8N,gBAAkB,SAAUH,GAC3C,IACIa,EACAC,EAFArL,EAAQtD,KAGZ6N,EAAUe,iBAAiB,aAAc,WAErCF,EAAQG,WAAW,WAAcpH,YAAUoG,IAAa9L,KAAsBuB,EAAMc,cAExFyJ,EAAUe,iBAAiB,aAAc,WACrCE,aAAaJ,GACblH,eAAaqG,IAAa9L,MAE9B8L,EAAUe,iBAAiB,WAAY,WACnCE,aAAaH,KAEjBd,EAAUe,iBAAiB,YAAa,WAEpCD,EAAeE,WAAW,WAAcpH,YAAUoG,IAAa9L,KAAsBuB,EAAMc,eAGnGjB,EAASjD,UAAU6O,aAAe,SAAUnG,GACxC,OAAQA,EAAEsC,QAAQ,UAAY,EAAK,QAAU,SAEjD/H,EAASjD,UAAU8O,uBAAyB,SAAU1O,GAClDN,KAAK6I,iBAAmB7I,KAAKiP,YAAY3O,GAAUA,EAAOiH,cAAgBjH,GAE9E6C,EAASjD,UAAU+O,YAAc,SAAU3O,GACvC,OAASA,EAAOkE,UAAUC,SAAS5C,KAAevB,EAAOkE,UAAUC,SAASjD,IAEhF2B,EAASjD,UAAUgP,aAAe,SAAUtG,GACxC,IAAIuG,GAAU,EAKd,OAJkC,UAA9BnP,KAAK+O,aAAanG,EAAEwG,QAAuB7I,oBAAkBqC,EAAEyG,cAC1B,UAArCrP,KAAK+O,aAAanG,EAAEyG,gBACpBF,GAAU,GAEPA,GAEXhM,EAASjD,UAAUoP,qBAAuB,SAAU1G,EAAGwG,GACnD,GAAIpP,KAAKkP,aAAatG,GAClB5I,KAAKuP,mBAAoBC,EAAG5G,EAAE6G,MAAOC,EAAG9G,EAAE+G,OAASP,OAElD,CACD,IAAIQ,EAAkC,SAAtBjI,UAAQC,KAAKC,KAAkBe,EAAEiH,QAAQ,GAAKjH,EAC9D5I,KAAKuP,mBAAoBC,EAAGI,EAAUH,MAAOC,EAAGE,EAAUD,OAASP,KAG3EjM,EAASjD,UAAUqP,kBAAoB,SAAUO,EAAaV,GAC7C,aAATA,EACApP,KAAK4D,oBAAsBkM,EAG3B9P,KAAK6D,mBAAqBiM,GAGlC3M,EAASjD,UAAU6P,iBAAmB,WAElC,IAAK,IADDC,EAAYhQ,KAAKwD,SAAS7C,OACrBK,EAAI,EAAGA,EAAIgP,EAAWhP,IAI3B,GAHIuF,oBAAkBvG,KAAKwF,aAAaxE,GAAGuI,OACvCvJ,KAAKwD,SAASxC,GAAGwD,UAAUsE,OAAOnH,GAElCqO,EAAY,IAAMhP,EAAG,CACChB,KAAKqD,QAAQ4M,iBAAiB,IAAMtO,GAAahB,SAC/CqP,GACpBxI,eAAaxH,KAAKwD,SAASxC,IAAKW,KAKhDwB,EAASjD,UAAUgQ,iBAAmB,WAClCC,OAAOvB,iBAAiB,SAAU5O,KAAK+P,iBAAiBK,KAAKpQ,OAC7DwI,eAAatB,IAAIuB,SAAU,YAAazI,KAAKqQ,YAAarQ,MAC1DwI,eAAatB,IAAIuB,SAAU,UAAWzI,KAAKsQ,UAAWtQ,MACtD,IAAIuQ,EAAwC,SAAtB5I,UAAQC,KAAKC,KAAmB,cAAgB,YAClE2I,EAAuC,SAAtB7I,UAAQC,KAAKC,KAAmB,YAAc,WACnEW,eAAatB,IAAIuB,SAAU8H,EAAgBvQ,KAAKqQ,YAAarQ,MAC7DwI,eAAatB,IAAIuB,SAAU+H,EAAexQ,KAAKsQ,UAAWtQ,OAE9DmD,EAASjD,UAAUuQ,mBAAqB,WACpCN,OAAOO,oBAAoB,SAAU1Q,KAAK+P,iBAAiBK,KAAKpQ,OAChE,IAAIuQ,EAAwC,SAAtB5I,UAAQC,KAAKC,KAAmB,cAAgB,YAClE2I,EAAuC,SAAtB7I,UAAQC,KAAKC,KAAmB,YAAc,WACnEW,eAAaM,OAAOL,SAAU,YAAazI,KAAKqQ,aAChD7H,eAAaM,OAAOL,SAAU,UAAWzI,KAAKsQ,WAC9C9H,eAAaM,OAAOL,SAAU8H,EAAgBvQ,KAAKqQ,aACnD7H,eAAaM,OAAOL,SAAU+H,EAAexQ,KAAKsQ,YAEtDnN,EAASjD,UAAUoO,gBAAkB,WACjC9F,eAAatB,IAAIlH,KAAK6I,iBAAkB,mBAAoB7I,KAAK2Q,aAAc3Q,OAEnFmD,EAASjD,UAAUyQ,aAAe,SAAU/H,GACxC,IAAKA,EAAEtI,OAAOkE,UAAUC,SAASrC,GAAiB,CAC9C,IAAIwO,EAAY1E,YAAU,IAAMhL,EAAO,OAASM,EAAY,IAAMO,GAC9D6O,EAAUjQ,OAAS,GACnB6G,cAAYoJ,EAAW7O,GAE3B6G,EAAEtI,OAAOkE,UAAU0C,IAAInF,GAE3B,IAAI8O,EAAOjI,EAAEtI,QACTuQ,EAAKrM,UAAUC,SAASnC,IAAeuO,EAAKrM,UAAUC,SAASlC,KAC/DvC,KAAK8Q,eAAelI,IAEpBiI,EAAKrM,UAAUC,SAASpC,IAAgBwO,EAAKrM,UAAUC,SAASjC,KAChExC,KAAK+Q,aAAanI,IAG1BzF,EAASjD,UAAU6Q,aAAe,SAAUnI,GACxC,IAAItF,EAAQtD,KACZA,KAAKgR,gBAAgBpI,GACrB,IAAIqI,GAAiBtO,EAAeC,GAChCsO,EAAYlR,KAAKmR,aAAavI,GAClC5I,KAAKoR,QAAQ,eAAgBF,EAAW,SAAUG,GAC9C,IAAKA,EAAiBC,OAAQ,CAC1BhO,EAAMiI,SAASvE,MAAMuK,SAAW,IAC5BjO,EAAMgI,aAAa9G,UAAUC,SAAS,gBAAwD,MAAtCnB,EAAMgI,aAAatE,MAAMuK,SACjFjO,EAAMgI,aAAatE,MAAMuK,SAAW,IAGpCjO,EAAMgI,aAAatE,MAAMuK,SAAW,IAEnCjO,EAAMgI,aAAa9G,UAAUC,SAAS9B,IAOZ,IAA1BW,EAAMkO,gBACHlO,EAAMgI,aAAamG,uBAAuBzK,MAAMuK,SAAW,GAAKjO,EAAMiI,SAASvE,MAAMuK,SAAW,GACpG/J,eAAalE,EAAMgI,cAAe2F,GAClCzJ,eAAalE,EAAMiI,UAAW7I,KAT9B8E,eAAalE,EAAMiI,UAAW7I,GAC9B8E,eAAalE,EAAMgI,cAAe2F,GAClCxJ,YAAUnE,EAAMgI,cAAe5I,GAC/B+E,YAAUnE,EAAMiI,UAAW0F,IAQ/B3N,EAAMoO,oBAAoB9I,GAC1BtF,EAAMgI,aAAa8C,aAAa,gBAAiB,QACjD9K,EAAMiI,SAAS6C,aAAa,gBAAiB,SAC7C,IAAIuD,EAAkBrO,EAAMsO,YAAYhJ,GACxCtF,EAAM8N,QAAQ,WAAYO,OAItCxO,EAASjD,UAAU2R,kBAAoB,SAAUC,EAAWvH,GACxD9C,YAAU2D,SAAO,IAAMb,EAAauH,IAAarP,IAErDU,EAASjD,UAAU6R,kBAAoB,SAAUD,EAAWvH,GACxD/C,eAAa4D,SAAO,IAAMb,EAAauH,IAAarP,IAExDU,EAASjD,UAAU8R,sBAAwB,SAAUpJ,GACjD5I,KAAKyM,mBACDzM,KAAKiS,cAAcC,mBAAqBlS,KAAKiS,cAAcE,kBAC3D1K,YAAUmB,EAAEtI,QAASmC,GACrBzC,KAAKoS,qBACLpS,KAAK2G,eAAe3G,KAAKwR,iBAAiB,GACrCjL,oBAAkBvG,KAAKqS,WACxBrS,KAAK2G,eAAe3G,KAAKwR,gBAAkB,GAAG,GAC9CxR,KAAK6R,kBAAkB7R,KAAKqS,QAASrS,KAAKiM,OAE1CjM,KAAK+R,kBAAkB/R,KAAKqS,QAASrS,KAAK8N,aAGxC9N,KAAKiS,cAAcC,mBAAsBlS,KAAKiS,cAAcE,mBAClEnS,KAAK2G,eAAe3G,KAAKwR,iBAAiB,GACrCxR,KAAKiS,cAAcK,gBAAgB9N,UAAUC,SAAS,gBACvDzE,KAAK2G,eAAe3G,KAAKwR,gBAAkB,GAAG,GAElDxR,KAAKoS,qBACApS,KAAKwF,aAAaxF,KAAKwR,iBAAiB5H,aACzCnC,YAAUmB,EAAEtI,QAASmC,GAEpB8D,oBAAkBvG,KAAKuS,WACxBvS,KAAK+R,kBAAkB/R,KAAKuS,QAASvS,KAAK8N,YACrC9N,KAAKwF,aAAaxF,KAAKwR,iBAAiB5H,aAAe5J,KAAKwF,aAAaxF,KAAKwR,gBAAkB,GAAG5H,YACpG5J,KAAK6R,kBAAkB7R,KAAKuS,QAASvS,KAAKiM,QAEpCjM,KAAKwF,aAAaxF,KAAKiS,cAAcO,cAAgB,GAAG5I,aAC9D5J,KAAKwF,aAAaxF,KAAKwR,kBACvBxR,KAAK6R,kBAAkB7R,KAAKuS,QAASvS,KAAKiM,UAK1D9I,EAASjD,UAAU4Q,eAAiB,SAAUlI,GAC1C,IAAItF,EAAQtD,KACZA,KAAKgR,gBAAgBpI,GACrB,IAAIqI,GAAiBtO,EAAeC,GACpC5C,KAAKsL,aAAatE,MAAMuK,SAAW,IACnCvR,KAAKuL,SAASvE,MAAMuK,SAAW,IAC/B,IAAIL,EAAYlR,KAAKmR,aAAavI,GAClC5I,KAAKoR,QAAQ,iBAAkBF,EAAW,SAAUuB,GAChD,IAAKA,EAAmBnB,OAAQ,CACxBhO,EAAMiI,SAAS/G,UAAUC,SAAS9B,IAClC6E,eAAalE,EAAMgI,cAAe5I,GAClC8E,eAAalE,EAAMiI,UAAW0F,KAG9BzJ,eAAalE,EAAMgI,cAAe5I,GAClC8E,eAAalE,EAAMiI,UAAW0F,GAC9BxJ,YAAUnE,EAAMiI,UAAW7I,GAC3B+E,YAAUnE,EAAMgI,cAAe2F,IAEnC3N,EAAM0O,sBAAsBpJ,GAC5BtF,EAAMgI,aAAa8C,aAAa,gBAAiB,SACjD9K,EAAMiI,SAAS6C,aAAa,gBAAiB,QAC7C,IAAIsE,EAAoBpP,EAAMsO,YAAYhJ,GAC1CtF,EAAM8N,QAAQ,YAAasB,OAIvCvP,EAASjD,UAAUiR,aAAe,SAAUvI,GAexC,OAdgB+J,cACZtP,QAASrD,KAAKqD,QACduP,MAAOhK,EACP3C,OAAQjG,KAAK6S,cAAe7S,KAAKwS,eACjC3E,UAAW7N,KAAK6I,iBAChByI,QAAQ,IAERjO,QAASrD,KAAKqD,QACduP,MAAOhK,EACPkK,MAAO9S,KAAKsL,aAActL,KAAKuL,UAC/BtF,OAAQjG,KAAK6S,cAAe7S,KAAKwS,eACjC3E,UAAW7N,KAAK6I,iBAChByI,QAAQ,IAIhBnO,EAASjD,UAAUuM,iBAAmB,WAClCzM,KAAKiS,eACDT,gBAAiBxR,KAAKwR,gBACtBuB,oBAAqB/S,KAAKuL,SAAS/G,UAAUC,SAAStC,GACtD6Q,oBAAqBhT,KAAKsL,aAAa9G,UAAUC,SAAStC,GAC1D8Q,iBAAkBjT,KAAKsL,aAAa9G,UAAUC,SAAS/B,GACvDyP,iBAAkBnS,KAAKuL,SAAS/G,UAAUC,SAAS/B,GACnDwQ,kBAAmBlT,KAAKuL,SAAS/G,UAAUC,SAAS9B,GACpDuP,kBAAmBlS,KAAKsL,aAAa9G,UAAUC,SAAS9B,GACxD6P,cAAexS,KAAKyO,mBACpBoE,cAAe7S,KAAKwO,uBACpB8D,gBAAiBtS,KAAKuL,SAAS4H,mBAC/BC,eAAgBpT,KAAKsL,aAAamG,yBAG1CtO,EAASjD,UAAUkS,mBAAqB,WACpC5K,eAAa4D,SAAO,IAAMpL,KAAKiM,MAAOjM,KAAK6I,mBAAoBpG,IAEnEU,EAASjD,UAAUwR,oBAAsB,SAAU9I,GAC/C5I,KAAKyM,mBACLhF,YAAUmB,EAAEtI,QAASmC,GAChBzC,KAAKiS,cAAcgB,kBAAqBjT,KAAKiS,cAAciB,kBA4BvDlT,KAAKiS,cAAcgB,kBAAoBjT,KAAKiS,cAAciB,oBAC/DlT,KAAK2G,eAAe3G,KAAKwR,iBAAiB,GAC1CxR,KAAK2G,eAAe3G,KAAKwR,gBAAkB,GAAG,GAC9CxR,KAAKoS,qBACA7L,oBAAkBvG,KAAKuS,WACxBvS,KAAK6R,kBAAkB7R,KAAKuS,QAASvS,KAAKiM,OAE1CjM,KAAK+R,kBAAkB/R,KAAKuS,QAASvS,KAAK+N,eAlC9C/N,KAAKoS,qBACL5K,eAAaoB,EAAEtI,QAASmC,GACxBzC,KAAK2G,eAAe3G,KAAKwR,iBAAiB,GACrCjL,oBAAkBvG,KAAKqS,UAAarS,KAAKiS,cAAcmB,eAAe5O,UAAUC,SAAS9B,GAgBtF3C,KAAKwF,aAAaxF,KAAKwR,iBAAiB5H,cAAgB5J,KAAKwF,aAAaxF,KAAKwR,gBAAkB,GAAG5H,YACpG5J,KAAK6R,kBAAkB7R,KAAK6I,iBAAkB7I,KAAK+N,YAGnD/N,KAAK+R,kBAAkB/R,KAAKqS,QAASrS,KAAK+N,aAnB9C/N,KAAK2G,eAAe3G,KAAKwR,gBAAkB,GAAG,GAC9CxR,KAAK+R,kBAAkB/R,KAAKqS,QAASrS,KAAK+N,YACrC/N,KAAKwF,aAAaxF,KAAKwR,gBAAkB,GAAG5H,YAOxC5J,KAAKwF,aAAaxF,KAAKwR,iBAAiB5H,cAC5C5J,KAAKwF,aAAaxF,KAAKwR,gBAAkB,GAAG5H,aAC7C5J,KAAK6R,kBAAkB7R,KAAK6I,iBAAkB7I,KAAK+N,aARnD/N,KAAK6R,kBAAkB7R,KAAKqS,QAASrS,KAAKiM,OACtCjM,KAAKwF,aAAaxF,KAAKwR,iBAAiB5H,cACvC5J,KAAKwF,aAAaxF,KAAKwR,gBAAkB,GAAG5H,aAC7C5J,KAAK6R,kBAAkB7R,KAAK6I,iBAAkB7I,KAAK+N,gBA4BvE5K,EAASjD,UAAU0R,YAAc,SAAUhJ,GAavC,OAZgB+J,cACZtP,QAASrD,KAAKqD,QACduP,MAAOhK,EACP3C,OAAQjG,KAAK6S,cAAe7S,KAAKwS,eACjC3E,UAAW7N,KAAK6I,mBAEhBxF,QAASrD,KAAKqD,QACduP,MAAOhK,EACPkK,MAAO9S,KAAKsL,aAActL,KAAKuL,UAC/BtF,OAAQjG,KAAK6S,cAAe7S,KAAKwS,eACjC3E,UAAW7N,KAAK6I,mBAIxB1F,EAASjD,UAAUmT,aAAe,SAAUzK,GACxC5I,KAAKwR,gBAAkBxR,KAAKsT,kBAAkB1K,EAAEtI,OAAOiH,gBAE3DpE,EAASjD,UAAUoT,kBAAoB,SAAUhT,GAE7C,SADewJ,MAAMvG,KAAKvD,KAAK2D,SAClBuH,QAAQ5K,IAEzB6C,EAASjD,UAAUqT,WAAa,SAAUvG,GAEtC,OADchN,KAAK2D,QAASqJ,EAAa,IAG7C7J,EAASjD,UAAUsT,WAAa,SAAUxG,GAEtC,OADchN,KAAK2D,QAASqJ,EAAa,IAG7C7J,EAASjD,UAAUuT,WAAa,SAAUxN,GACtCjG,KAAKqS,QAAUrS,KAAKuT,WAAWtN,GAC/BjG,KAAKuS,QAAUvS,KAAKwT,WAAWvN,IAEnC9C,EAASjD,UAAU8Q,gBAAkB,SAAUpI,GAClB,eAArB5I,KAAKuF,YACLvF,KAAKiM,MAAQrD,EAAEtI,OAAOkE,UAAUC,SAASnC,GAAcD,EAAcC,EAGrEtC,KAAKiM,MAAQrD,EAAEtI,OAAOkE,UAAUC,SAASlC,GAAYC,EAAaD,EAEtEvC,KAAKgP,uBAAuBpG,EAAEtI,QAC9BN,KAAKqT,aAAazK,GAClB5I,KAAKyT,WAAWzT,KAAKwR,iBACrBxR,KAAKiO,kBAET9K,EAASjD,UAAUsL,YAAc,SAAU5C,GACvC,IAAItF,EAAQtD,KACZ4I,EAAE8K,iBACF,IAAIpT,EAASsI,EAAEtI,OACf,IAAIA,EAAOkE,UAAUC,SAASrC,GAA9B,CAGApC,KAAKgP,uBAAuB1O,GAC5BmH,YAAUzH,KAAK6I,kBAAmB7G,GAClChC,KAAKsP,qBAAqB1G,EAAG,YAC7B5I,KAAKiO,iBACL,IAAIiD,EAAYyB,cACZtP,QAASrD,KAAKqD,QACduP,MAAOhK,EACP3C,OAAQjG,KAAKwO,uBAAwBxO,KAAKyO,oBAC1CZ,UAAW7N,KAAK6I,iBAChByI,QAAQ,IAERjO,QAASrD,KAAKqD,QACduP,MAAOhK,EACPkK,MAAO9S,KAAKsL,aAActL,KAAKuL,UAC/BtF,OAAQjG,KAAKwO,uBAAwBxO,KAAKyO,oBAC1CZ,UAAW7N,KAAK6I,iBAChByI,QAAQ,GAEZtR,KAAKoR,QAAQ,cAAeF,EAAW,SAAUyC,GAC7C,IAAKA,EAAgBrC,OAEjB,GADAhO,EAAM4M,mBACF5M,EAAMgI,aAAatE,MAAMC,UAAUiE,QAAQ,KAAO,GAAK5H,EAAMiI,SAASvE,MAAMC,UAAUiE,QAAQ,KAAO,EAAG,CACxG,IAAI0I,EAAoBtQ,EAAMuQ,oBAAoBvQ,EAAMgI,cACpDwI,EAAgBxQ,EAAMuQ,oBAAoBvQ,EAAMiI,UACpDjI,EAAMyQ,aAAeH,EAAoBE,EACzCxQ,EAAM0Q,WAAa1Q,EAAM2Q,yBAAyB3Q,EAAMyQ,aAAe,UAGvEzQ,EAAM0Q,WAAoC,eAAtB1Q,EAAMiC,YAAgCjC,EAAMgI,aAAa4I,YAAc5Q,EAAMiI,SAAS2I,YACtG5Q,EAAMgI,aAAa6I,aAAe7Q,EAAMiI,SAAS4I,iBAKrEhR,EAASjD,UAAU2T,oBAAsB,SAAUf,GAC/C,IAAIsB,EACJ,GAAItB,EAAK9L,MAAMC,UAAUiE,QAAQ,KAAO,EACpCkJ,EAAWpU,KAAKqU,qBAAqBvB,EAAK9L,MAAMC,gBAGhD,GAA6B,KAAzB6L,EAAK9L,MAAMC,UACXmN,EAAWpU,KAAKsU,yBAAyBtU,KAAKuU,qBAAqBzB,EAAK9L,MAAMC,gBAE7E,CACD,IAAIuN,EAA+B,eAArBxU,KAAKuF,YAAiCuN,EAAKoB,YAAclU,KAAK6I,iBAAiBqL,YACxFpB,EAAKqB,aAAenU,KAAK6I,iBAAiBsL,aAC/CC,EAAWpU,KAAKsU,yBAAyBE,GAGjD,OAAOJ,GAEXjR,EAASjD,UAAUmU,qBAAuB,SAAUrL,GAChD,OAAOyL,WAAWzL,EAAMc,MAAM,EAAGd,EAAMkC,QAAQ,QAEnD/H,EAASjD,UAAU+T,yBAA2B,SAAUjL,EAAO0L,GAC3D,IACIC,EADAC,EAAa5L,EAAM6L,WAEvB,GAAID,EAAW1J,QAAQ,MAAQ,EAAG,CAC9ByJ,EAAiBF,WAAWG,EAAW9K,MAAM,EAAG8K,EAAW1J,QAAQ,OACnE,IAAI4J,OAAc,EAKdA,EAJCvO,oBAAkBmO,GAIiB,eAArB1U,KAAKuF,YAAgCvF,KAAKqD,QAAQ6Q,YAAclU,KAAKqD,QAAQ8Q,aAH9EnU,KAAKgE,gBAAgBhE,KAAKwD,SAAS0H,QAAQwJ,IAK7DC,EAAiBI,KAAKC,KAAKF,GAAeH,EAAiB,WAG3DA,EAAiBzO,SAAS0O,EAAY,IAE1C,OAAOD,GAEXxR,EAASjD,UAAUoU,yBAA2B,SAAUtL,GAEpD,OAAQA,GADgC,eAArBhJ,KAAKuF,YAAgCvF,KAAKqD,QAAQ6Q,YAAclU,KAAKqD,QAAQ8Q,cACjE,KAEnChR,EAASjD,UAAUqU,qBAAuB,SAAUvL,GAChD,OAAIA,EAAMkC,QAAQ,MAAQ,EACfuJ,WAAWzL,EAAMc,MAAM,EAAGd,EAAMkC,QAAQ,OAGxCuJ,WAAWzL,IAG1B7F,EAASjD,UAAU+U,iBAAmB,SAAUC,EAAWJ,GACvD,IAAIK,EACAtH,EAKJ,OAJAsH,EAAyC,eAArBnV,KAAKuF,YAAgCvF,KAAK6D,mBAAmB2L,EAAI0F,EAChFlV,KAAK6D,mBAAmB6L,EAAIwF,EACjCrH,EAAYsH,EAAoBL,GAChCjH,EAAaA,EAAY,EAAK,EAAKA,EAAY,EAAK,EAAIA,GACrCiH,GAEvB3R,EAASjD,UAAUkV,qBAAuB,SAAUxM,GAChD5I,KAAKsP,qBAAqB1G,EAAG,WAC7B,IAAIyM,EAAkC,eAArBrV,KAAKuF,YAAgCvF,KAAKqD,QAAQ0H,wBAAwBuK,KACvFtV,KAAKqD,QAAQ0H,wBAAwBwK,IACrCC,EAA+B,eAArBxV,KAAKuF,YAAgCvF,KAAKqD,QAAQ6Q,YAAclU,KAAKqD,QAAQ8Q,aAC3F,OAAOnU,KAAKiV,iBAAiBI,EAAWG,IAE5CrS,EAASjD,UAAUuV,UAAY,SAAUrM,EAAW9I,EAAQoV,GACxD,IAAIC,EAA2B,QAAdD,EAAsB,EAAI,KAEvCtL,EAAY,KAahB,MAZkB,QAAdsL,EACKnP,oBAAkBvG,KAAKwF,aAAa4D,KACpC7C,oBAAkBvG,KAAKwF,aAAa4D,GAAWI,OAChDY,EAAYpK,KAAKwF,aAAa4D,GAAWI,KAIxCjD,oBAAkBvG,KAAKwF,aAAa4D,KACpC7C,oBAAkBvG,KAAKwF,aAAa4D,GAAWK,OAChDW,EAAYpK,KAAKwF,aAAa4D,GAAWK,KAG7CzJ,KAAKwF,aAAa7E,OAAS,IAAM4F,oBAAkBvG,KAAKwF,aAAa4D,MACpE7C,oBAAkB6D,IACfA,EAAUc,QAAQ,KAAO,IACzBd,EAAYpK,KAAKiU,yBAAyB7J,GAAWyK,YAElD7U,KAAKuU,qBAAqBnK,IAG1BuL,GAGfxS,EAASjD,UAAUsO,qBAAuB,WAEtC,OADqBtI,SAASlG,KAAK6I,iBAAiB7B,MAAMsG,MAAO,IAAM,GAAK,GAGhFnK,EAASjD,UAAUuO,iBAAmB,WAElC,OADqBvI,SAASlG,KAAK6I,iBAAiB7B,MAAMsG,MAAO,IAAM,KAChD,GAE3BnK,EAASjD,UAAU+N,eAAiB,WAChC,IAAI2H,EAAW,KACXrK,EAAW,KACfvL,KAAKsN,MAAQpH,SAASlG,KAAK6I,iBAAiB7B,MAAMsG,MAAO,IACrDtN,KAAKwD,SAAS7C,OAAS,IACvBiV,EAAW5V,KAAKqN,YAAYrN,KAAK6I,iBAAkB7I,KAAKsN,OACxD/B,EAAWvL,KAAKuN,YAAYvN,KAAK6I,iBAAkB7I,KAAKsN,QAExDsI,GAAYrK,IACZvL,KAAKsL,aAAesK,EACpB5V,KAAKuL,SAAWA,EAChBvL,KAAK6S,cAAgB7S,KAAKwO,uBAC1BxO,KAAKwS,cAAgBxS,KAAKyO,qBAMlCtL,EAASjD,UAAU2V,cAAgB,SAAU/C,GACzC,MAA8B,eAArB9S,KAAKuF,YAAgCuN,EAAKoB,YAAYW,WAC3D/B,EAAKqB,aAAaU,YAE1B1R,EAASjD,UAAU4V,YAAc,SAAU1M,GACvC,IAAI2M,GAAU,EAMd,OALKxP,oBAAkBvG,KAAKwF,aAAa4D,MACpC7C,oBAAkBvG,KAAKwF,aAAa4D,GAAWG,OAChDvJ,KAAKwF,aAAa4D,GAAWG,KAAK2B,QAAQ,MAAQ,IAClD6K,GAAU,GAEPA,GAEX5S,EAASjD,UAAU8V,kBAAoB,WACnChW,KAAKiW,wBAAiE,KAAtCjW,KAAKsL,aAAatE,MAAMC,UAAoBjH,KAAK6V,cAAc7V,KAAKsL,cAChGtL,KAAKsL,aAAatE,MAAMC,UAC5BjH,KAAKkW,oBAAyD,KAAlClW,KAAKuL,SAASvE,MAAMC,UAAoBjH,KAAK6V,cAAc7V,KAAKuL,UACxFvL,KAAKuL,SAASvE,MAAMC,UACpBjH,KAAK8V,YAAY9V,KAAK6S,iBACtB7S,KAAKiW,wBAA0BjW,KAAKiU,yBAAyBjU,KAAKiW,yBAAyBpB,WAC3F7U,KAAK8D,2BAA4B,GAEjC9D,KAAK8V,YAAY9V,KAAKwS,iBACtBxS,KAAKkW,oBAAsBlW,KAAKiU,yBAAyBjU,KAAKkW,qBAAqBrB,WACnF7U,KAAK+D,4BAA6B,GAEtC/D,KAAKmW,gBAAkBnW,KAAKuU,qBAAqBvU,KAAKiW,wBAAwBpB,YAC9E7U,KAAKoW,kBAAoBpW,KAAKuU,qBAAqBvU,KAAKkW,oBAAoBrB,aAEhF1R,EAASjD,UAAUmW,iBAAmB,SAAU5G,EAAOE,GACnD,IAAI2G,GAAqB,EAIzB,OAHK7G,IAAUzP,KAAK4D,oBAAoB4L,GAAKG,IAAU3P,KAAK4D,oBAAoB8L,IAC5E4G,GAAqB,GAElBA,GAEXnT,EAASjD,UAAUqW,cAAgB,SAAU3N,GAWzC,MATkC,UAA9B5I,KAAK+O,aAAanG,EAAEwG,QAAuB7I,oBAAkBqC,EAAEyG,cAC1B,UAArCrP,KAAK+O,aAAanG,EAAEyG,aACNrP,KAAKqW,iBAAiBzN,EAAE6G,MAAO7G,EAAE+G,OAGV,SAAtBhI,UAAQC,KAAKC,KACxB7H,KAAKqW,iBAAiBzN,EAAEiH,QAAQ,GAAGJ,MAAO7G,EAAEiH,QAAQ,GAAGF,OACvD3P,KAAKqW,iBAAiBzN,EAAE6G,MAAO7G,EAAE+G,QAI7CxM,EAASjD,UAAUsW,UAAY,WAC3BxW,KAAKiE,OAAS,EACd,IAAIA,EAA8B,eAArBjE,KAAKuF,aAAiCvF,KAAKqD,QAAQ6Q,YAAclU,KAAKqD,QAAQoT,aAAe,GACrGzW,KAAKqD,QAAQ8Q,aAAenU,KAAKqD,QAAQqT,cAAgB,EAC9D1W,KAAKiE,OAA+B,WAAtB0D,UAAQC,KAAKC,KAAoB7H,KAAKiE,OAASA,GAEjEd,EAASjD,UAAUmQ,YAAc,SAAUzH,GACvC,GAAK5I,KAAKuW,cAAc3N,GAAxB,CAGA5I,KAAKiO,iBACLjO,KAAKgW,oBACL,IAAI9E,EAAYyB,cACZtP,QAASrD,KAAKqD,QACduP,MAAOhK,EACP3C,OAAQjG,KAAK6S,cAAe7S,KAAKwS,eACjCmE,UAAW3W,KAAKmW,gBAAiBnW,KAAKoW,mBACtCvI,UAAW7N,KAAK6I,mBAEhBxF,QAASrD,KAAKqD,QACduP,MAAOhK,EACPkK,MAAO9S,KAAKsL,aAActL,KAAKuL,UAC/BtF,OAAQjG,KAAK6S,cAAe7S,KAAKwS,eACjCmE,UAAW3W,KAAKmW,gBAAiBnW,KAAKoW,mBACtCvI,UAAW7N,KAAK6I,kBAEpB7I,KAAKoR,QAAQ,WAAYF,GACzB,IACI0F,EADAtB,EAAOtV,KAAK6W,wBAAwB7W,KAAKoV,qBAAqBxM,GAAI5I,KAAKmW,gBAAiBnW,KAAKoW,mBAmCjG,GAjCApW,KAAKwW,YAEDI,EADqB,eAArB5W,KAAKuF,YACmBvF,KAAKqD,QAAQ0H,wBAAwBuK,KAAOA,EAChEtV,KAAK6I,iBAAiBkC,wBAAwBuK,KAAOtV,KAAKiE,OAGtCjE,KAAKqD,QAAQ0H,wBAAwBwK,IAAMD,EAC/DtV,KAAK6I,iBAAiBkC,wBAAwBwK,IAAMvV,KAAKiE,OAEjEjE,KAAKkW,oBACsC,iBAA9BlW,KAAwB,qBAAkBA,KAAKkW,oBAAoBhL,QAAQ,MAAQ,EACxFlL,KAAKuU,qBAAqBvU,KAAKkW,qBAAuBhQ,SAASlG,KAAKkW,oBAAqB,IACjGlW,KAAK8W,qBAAuBF,EAAuB5W,KAAKuU,qBAAqBvU,KAAKiW,yBAClFjW,KAAK+W,qBAAuB/W,KAAKkW,oBAAsBU,EACvD5W,KAAKgX,uBACDhX,KAAK+W,qBAAuB,IAC5B/W,KAAK+W,qBAAuB,GAG5B/W,KAAK8W,qBAAuB,IAC5B9W,KAAK8W,qBAAuB,GAE3B9W,KAAK+W,qBAAuB/W,KAAK8W,qBAAwB9W,KAAKgU,aAC3DhU,KAAK+W,qBAAuB/W,KAAK8W,qBACjC9W,KAAK8W,qBAAuB9W,KAAK8W,sBAAyB9W,KAAK+W,qBAAuB/W,KAAK8W,qBACrF9W,KAAKgU,YAGXhU,KAAK+W,qBAAuB/W,KAAK+W,sBAAyB/W,KAAK+W,qBAAuB/W,KAAK8W,qBACrF9W,KAAKgU,aAIdhU,KAAK+W,qBAAuB/W,KAAK8W,qBAAwB9W,KAAKgU,WAAY,CAC3E,IAAIiD,EAAajX,KAAKgU,YAAehU,KAAK+W,qBAAuB/W,KAAK8W,sBACtE9W,KAAK+W,qBAAuB/W,KAAK+W,qBAAuBE,EAE5DjX,KAAKkX,6BACLlX,KAAKmX,qBACLnX,KAAKsL,aAAatE,MAAMC,UAAYjH,KAAK8W,qBACzC9W,KAAKuL,SAASvE,MAAMC,UAAYjH,KAAK+W,uBAEzC5T,EAASjD,UAAUkX,iBAAmB,SAAUhO,EAAWiO,EAAkBvE,GACzE,IACIwE,EAEAC,EAHAC,EAAe,KAEfP,EAAa,EAkBjB,OAhBK1Q,oBAAkBvG,KAAKwF,aAAa4D,KAAgB7C,oBAAkBvG,KAAKwF,aAAa4D,GAAWI,OACpGgO,EAAexX,KAAKwF,aAAa4D,GAAWI,IAAIqL,YAE/CtO,oBAAkBiR,KACfA,EAAatM,QAAQ,KAAO,IAC5BsM,EAAexX,KAAKiU,yBAAyBuD,GAAc3C,YAG3DwC,GADJC,EAAoBtX,KAAKuU,qBAAqBiD,MAE1CP,EAAcI,EAAmBC,GAAsB,EAAI,EACtDD,EAAmBC,EACxBtX,KAAKgU,WAAahU,KAAKgU,WAAaiD,EACpCjX,KAAK+T,aAAe/T,KAAKsU,yBAAyBtU,KAAKgU,YACvDuD,EAAeD,IAGhB/Q,oBAAkBgR,GAAgBF,EAAmBE,GAEhEpU,EAASjD,UAAUuX,iBAAmB,SAAUrO,EAAWiO,EAAkBvE,GACzE,IACI4E,EACAH,EAFAI,EAAe,KAiBnB,OAdKpR,oBAAkBvG,KAAKwF,aAAa4D,KAAgB7C,oBAAkBvG,KAAKwF,aAAa4D,GAAWK,OACpGkO,EAAe3X,KAAKwF,aAAa4D,GAAWK,IAAIoL,YAE/CtO,oBAAkBoR,KACfA,EAAazM,QAAQ,KAAO,IAC5ByM,EAAe3X,KAAKiU,yBAAyB0D,GAAc9C,YAG3DwC,GADJK,EAAoB1X,KAAKuU,qBAAqBoD,MAE1C3X,KAAKgU,WAAahU,KAAKgU,YAAcqD,EAAmBK,GACxD1X,KAAK+T,aAAe/T,KAAKsU,yBAAyBtU,KAAKgU,YACvDuD,EAAeG,IAGhBnR,oBAAkBgR,GAAgBF,EAAmBE,GAEhEpU,EAASjD,UAAU8W,qBAAuB,WAEtChX,KAAK8W,qBAAuB9W,KAAKoX,iBAAiBpX,KAAK6S,cAAe7S,KAAK8W,qBAAsB9W,KAAKsL,cAEtGtL,KAAK+W,qBAAuB/W,KAAKoX,iBAAiBpX,KAAKwS,cAAexS,KAAK+W,qBAAsB/W,KAAKuL,UAEtGvL,KAAK8W,qBAAuB9W,KAAKyX,iBAAiBzX,KAAK6S,cAAe7S,KAAK8W,qBAAsB9W,KAAKsL,cAEtGtL,KAAK+W,qBAAuB/W,KAAKyX,iBAAiBzX,KAAKwS,cAAexS,KAAK+W,qBAAsB/W,KAAKuL,WAE1GpI,EAASjD,UAAU0X,iBAAmB,WAClC,IAAIX,EACCjX,KAAK8W,qBAAuB9W,KAAK+W,qBAAwB/W,KAAK+T,eAC/DkD,EAAcjX,KAAK8W,qBAAuB9W,KAAK+W,qBAAwB/W,KAAK+T,aAC5E/T,KAAK8W,qBAAuB9W,KAAK8W,qBAAwBG,EAAa,EAAK,IAC3EjX,KAAK+W,qBAAuB/W,KAAK+W,qBAAwBE,EAAa,EAAK,KAE1EjX,KAAK8W,qBAAuB9W,KAAK+W,qBAAwB/W,KAAK+T,eAC/DkD,EAAajX,KAAK+T,cAAgB/T,KAAK8W,qBAAuB9W,KAAK+W,sBACnE/W,KAAK8W,qBAAuB9W,KAAK8W,qBAAwBG,EAAa,EAAK,IAC3EjX,KAAK+W,qBAAuB/W,KAAK+W,qBAAwBE,EAAa,EAAK,MAGnF9T,EAASjD,UAAUgX,2BAA6B,WACxClX,KAAK8D,2BAA6B9D,KAAK+D,4BACvC/D,KAAK8W,qBAAuB/B,KAAK8C,MAAMC,OAAO/C,KAAK8C,MAC7C,GADmD7X,KAAKsU,yBAAyBtU,KAAK8W,uBAChF,KACZ9W,KAAK+W,qBAAuBhC,KAAK8C,MAAMC,OAAO/C,KAAK8C,MAC7C,GADmD7X,KAAKsU,yBAAyBtU,KAAK+W,uBAChF,KACsB,IAA9B/W,KAAK8W,uBACL9W,KAAK+W,qBAAuB/W,KAAK+T,cAEH,IAA9B/T,KAAK+W,uBACL/W,KAAK8W,qBAAuB9W,KAAK+T,cAEjC/T,KAAK8W,qBAAuB9W,KAAK+W,uBAAyB/W,KAAK+T,aAC/D/T,KAAK4X,oBAGL5X,KAAK8W,qBAAuB9W,KAAK8W,qBAAuB,IACxD9W,KAAK+W,qBAAuB/W,KAAK+W,qBAAuB,KAE5D/W,KAAK8W,qBAAwB9W,KAA8B,0BAAIA,KAAK8W,qBAChE9W,KAAKiU,yBAAyBjU,KAAK8W,sBAAwB,KAC/D9W,KAAK+W,qBAAwB/W,KAA+B,2BAAIA,KAAK+W,qBACjE/W,KAAKiU,yBAAyBjU,KAAK+W,sBAAwB,KAC/D/W,KAAK8D,2BAA4B,EACjC9D,KAAK+D,4BAA6B,IAGlC/D,KAAK8W,qBAAuB9W,KAAK8W,qBAAuB,KACxD9W,KAAK+W,qBAAuB/W,KAAK+W,qBAAuB,OAGhE5T,EAASjD,UAAUiX,mBAAqB,WAC/BnX,KAAKsL,aAAa9G,UAAUC,SAAS9C,IACtC3B,KAAKsL,aAAa9G,UAAU0C,IAAIvF,GAE/B3B,KAAKuL,SAAS/G,UAAUC,SAAS9C,IAClC3B,KAAKuL,SAAS/G,UAAU0C,IAAIvF,IAGpCwB,EAASjD,UAAU2W,wBAA0B,SAAUkB,EAAYC,EAAqB9B,GACpF,IAAI+B,EAAyC,eAArBjY,KAAKuF,YAAgCvF,KAAK6I,iBAAiBqP,WAC/ElY,KAAK6I,iBAAiBsP,UACtBC,EAAeH,EAAmBD,EAClCK,EAAgBnC,EAAsB+B,EACtCK,EAAetY,KAAKyV,UAAUzV,KAAK6S,cAAe7S,KAAKsL,aAAc,OACrEiN,EAAevY,KAAKyV,UAAUzV,KAAKwS,cAAexS,KAAKuL,SAAU,OACjEiN,EAAexY,KAAKyV,UAAUzV,KAAK6S,cAAe7S,KAAKsL,aAAc,OACrEmN,EAAezY,KAAKyV,UAAUzV,KAAKwS,cAAexS,KAAKuL,SAAU,OACjEmN,EAAgBX,EAiBpB,OAhBIA,EAAaM,EAAgBE,EAC7BG,EAAgBL,EAAgBE,EAE3BR,EAAaK,EAAeE,IACjCI,EAAgBN,EAAeE,GAE9B/R,oBAAkBiS,GAKbjS,oBAAkBkS,IACpBV,EAAaM,EAAgBI,IAC7BC,EAAgBL,EAAgBI,GANhCV,EAAaK,EAAeI,IAC5BE,EAAgBN,EAAeI,GAQhCE,GAEXvV,EAASjD,UAAUoQ,UAAY,SAAU1H,GACrCpB,eAAaxH,KAAK6I,kBAAmB7G,GACrChC,KAAKyQ,qBACL,IAAIS,EAAYyB,cACZC,MAAOhK,EACPvF,QAASrD,KAAKqD,QACd4C,OAAQjG,KAAK6S,cAAe7S,KAAKwS,eACjC3E,UAAW7N,KAAK6I,iBAChB8N,UAAW3W,KAAKmW,gBAAiBnW,KAAKoW,qBAEtCxD,MAAOhK,EACPvF,QAASrD,KAAKqD,QACdyP,MAAO9S,KAAKsL,aAActL,KAAKuL,UAC/BtF,OAAQjG,KAAK6S,cAAe7S,KAAKwS,eACjC3E,UAAW7N,KAAK6I,iBAChB8N,UAAW3W,KAAKmW,gBAAiBnW,KAAKoW,oBAE1CpW,KAAKoR,QAAQ,aAAcF,IAE/B/N,EAASjD,UAAUyY,eAAiB,SAAU1S,EAAO2S,GACjD,IACIrP,EADAW,EAAa0O,EAAMjY,OAEvBuF,SAASlG,KAAKqI,UAAUrI,KAAKqD,SAAU,IAClCkD,oBAAkBvG,KAAKwF,aAAaS,IAsBrC4E,oBAAkB+N,EAAM3S,IAAUqH,MAAiB,EAARrH,IArBtCM,oBAAkBvG,KAAKwF,aAAaS,GAAOsD,OAgB5CvJ,KAAK6Y,UAAW,EAChBhO,oBAAkB+N,EAAM3S,IAAUqH,MAAiB,EAARrH,MAhB3CsD,EAAOvJ,KAAKwF,aAAaS,GAAOsD,KAC5BtD,EAAQiE,IACRW,oBAAkB+N,EAAM3S,IAAU6S,aAAcvP,EAAM+D,MAAiB,EAARrH,IAC3DA,EAAQiE,EAAa,GAAuC,KAAlClK,KAAKwF,aAAaS,GAAOsD,KACnD9B,YAAUmR,EAAM3S,IAAStE,GAEnB3B,KAAK6Y,WACXD,EAAM3S,GAAOe,MAAMC,UAAY,MAE9BhB,IAAUiE,EAAa,GAAMlK,KAAK6Y,UAA8C,KAAlC7Y,KAAKwF,aAAaS,GAAOsD,MACxE9B,YAAUmR,EAAM3S,IAAStE,KAYzC3B,KAAKyD,UAAUqH,KAAa,EAAR7E,IAExB9C,EAASjD,UAAUuG,YAAc,SAAUsS,EAAUC,GACjDA,EAAUxS,UAAY,GACtBxG,KAAKiZ,gBAAgBD,EAAWD,IAGpC5V,EAASjD,UAAU+Y,gBAAkB,SAAUC,EAAKC,GAChD,IAAIC,EAAgB3Z,OAAOmF,KAAKuL,QAC5BkJ,EAAUrZ,KAAK0N,cAAc,OACjC1N,KAAKsZ,eAAeD,EAASF,EAAK,WACA,IAA9BE,EAAQlM,WAAWxM,YAChBmJ,MAAMvG,KAAK8V,EAAQlM,YAAYpD,QAAQ,SAAUwP,GAChDL,EAAIvL,YAAY4L,MAEyB,IAAzCH,EAAclO,QAAQ,eAAyBlL,KAAKwZ,kBAAmD,IAA/BL,EAAIjO,QAAQ,gBACpFuO,uBAAqBzZ,KAAKqD,QAAQqW,GAAK,UAAY1Z,KAAKwD,SAAS7C,OAAOkU,WAAY,kBAAmB7U,KAAKwF,aAAaxF,KAAKwD,SAAS7C,OAAS,MAI5JwC,EAASjD,UAAUoZ,eAAiB,SAAUJ,EAAKS,EAAKC,GACpD,IAAIR,EAAgB3Z,OAAOmF,KAAKuL,QACX,qBACjBwJ,EAAM,EAAME,QAEhB,IAAIC,EAKAA,EAJCvT,oBAAkBoT,EAAII,WAIVC,UAAQL,GAHRK,UAAQL,EAAII,WAK7B,IAAIE,EACC1T,oBAAkBuT,KAKfG,GAJyC,IAAzCb,EAAclO,QAAQ,eAAyBlL,KAAKwZ,kBAAmD,IAA/BG,EAAIzO,QAAQ,eAItE4O,KAAe9Z,KAAM4Z,EAAM5Z,KAAKqD,QAAQqW,GAAK,UAAY1Z,KAAKwD,SAAS7C,OAAOkU,YAAY,GAH1FiF,KAAe9Z,KAAM4Z,EAAM5Z,KAAKqD,QAAQqW,GAAK,UAAY1Z,KAAKwD,SAAS7C,OAAOkU,WAAY7U,KAAKwZ,oBAMhHjT,oBAAkBuT,IAAeG,EAAYtZ,OAAS,MACpDmJ,MAAMvG,KAAK0W,GAAalQ,QAAQ,SAAUC,GACzCkP,EAAIvL,YAAY3D,MAI5B7G,EAASjD,UAAU2L,gBAAkB,SAAUiH,EAAM7M,GACjDjG,KAAKwF,aAAaS,GAAO2D,YAAcnC,YAAUqL,GAAO3Q,GAAeqF,eAAasL,GAAO3Q,IAE/FgB,EAASjD,UAAUwF,gBAAkB,SAAUpF,GAE3C,IAAK,IADD4J,EAAa5J,EAAO+I,SAAS1I,OACxBK,EAAI,EAAGA,EAAIhB,KAAKwF,aAAa7E,OAAQK,IAC1C,GAAIkJ,EAAalK,KAAKwF,aAAa7E,OAAQ,CACvC,IAAIuZ,EAAela,KAAK0N,cAAc,OACtC1N,KAAKqD,QAAQsK,YAAYuM,GACzBhQ,GAA0B,EAGlCA,EAAa5J,EAAO+I,SAAS1I,OAC7B,IAAIiY,KAAW9O,MAAMvG,KAAKjD,EAAO+I,UAEjC,GADArJ,KAAK6Y,UAAW,EACZ3O,EAAa,EACb,IAASlJ,EAAI,EAAGA,EAAIkJ,EAAYlJ,IAEF,QAAtB4X,EAAM5X,GAAGmZ,UAA4C,SAAtBvB,EAAM5X,GAAGmZ,WACxCna,KAAKwD,SAASsH,KAAK8N,EAAM5X,IACA,eAArBhB,KAAKuF,aACLkC,YAAUmR,EAAM5X,KAAMK,EAAMC,EAAcM,IAC1C5B,KAAK2Y,eAAe3X,EAAG4X,KAGvBnR,YAAUmR,EAAM5X,KAAMK,EAAME,EAAcK,IAC1C5B,KAAK2Y,eAAe3X,EAAG4X,IAEtBrS,oBAAkBvG,KAAKwF,aAAaxE,KAAQuF,oBAAkBvG,KAAKwF,aAAaxE,GAAG0I,UACpF1J,KAAKyG,YAAYzG,KAAKwF,aAAaxE,GAAG0I,QAASkP,EAAM5X,IAEpDuF,oBAAkBvG,KAAKwF,aAAaxE,KACrChB,KAAK6L,gBAAgB+M,EAAM5X,GAAIA,KAYnDmC,EAASjD,UAAUka,OAAS,SAAUnU,GAClCjG,KAAK8G,kBAAkBb,IAO3B9C,EAASjD,UAAUma,SAAW,SAAUpU,GACpCjG,KAAK+F,YAAYE,IAMrB9C,EAASjD,UAAUoa,QAAU,WACpBta,KAAKua,cACNxX,EAAO7C,UAAUoa,QAAQ/W,KAAKvD,MAC9BwI,eAAaM,OAAOL,SAAU,mBAAoBzI,KAAK0I,iBACvDuB,SAAOjK,KAAKqD,SACZrD,KAAKqD,QAAUrD,KAAKoH,QACpBpH,KAAKsH,cAAcqG,YAAY3N,KAAKoH,WAG5CjE,EAASjD,UAAUsa,aAAe,SAAU1H,GAGxC,MAFqB,eAArB9S,KAAKuF,YAA+BkC,YAAUqL,IAAQzR,EAAMC,EAAcM,IACtE6F,YAAUqL,IAAQzR,EAAME,EAAcK,IACnCkR,GAEX3P,EAASjD,UAAUua,iBAAmB,SAAUC,GAE5C,IAAK,IADDC,EAAQlS,SAASwH,iBAAiB,IAAMyK,GACnC1Z,EAAI,EAAGA,EAAI2Z,EAAMha,OAAQK,IAC9B2Z,EAAM3Z,GAAGgG,MAAM4T,eAAe,UAGtCzX,EAASjD,UAAU2a,aAAe,WAC9B,IAAK,IAAI7Z,EAAI,EAAGA,EAAIhB,KAAKwD,SAAS7C,OAAQK,IACtChB,KAAK2Y,eAAe3X,EAAGhB,KAAKwD,WAGpCL,EAASjD,UAAU4a,gBAAkB,WACjC,IAAK,IAAI9Z,EAAI,EAAGA,EAAIhB,KAAK2D,QAAQhD,OAAQK,IACrCiJ,SAAOjK,KAAK2D,QAAQ3C,IAExBhB,KAAK2D,YAETR,EAASjD,UAAU6a,YAAc,WAC7B/a,KAAK6a,eACL7a,KAAK8a,kBACL9a,KAAK2F,aAAa3F,KAAKqD,UAQ3BF,EAASjD,UAAU8a,QAAU,SAAUC,EAAgBhV,GACnD,IAAIiV,EAAUlb,KAAK0N,cAAc,OACjCwN,EAAUlb,KAAKwa,aAAaU,GAC5BjV,EAASA,EAAQjG,KAAKwD,SAAS7C,OAAS,EAAKX,KAAKwD,SAAS7C,OAASsF,EACpE,IAAIkV,GACA5R,KAAMhD,oBAAkB0U,EAAe1R,MAAQ,GAAK0R,EAAe1R,KACnEC,IAAKjD,oBAAkB0U,EAAezR,KAAO,KAAOyR,EAAezR,IACnEC,IAAKlD,oBAAkB0U,EAAexR,KAAO,KAAOwR,EAAexR,IACnEC,QAASnD,oBAAkB0U,EAAevR,SAAW,GAAKuR,EAAevR,QACzEC,YAAWpD,oBAAkB0U,EAAetR,YAAoBsR,EAAetR,UAC/EC,aAAarD,oBAAkB0U,EAAerR,cAAuBqR,EAAerR,YACpF/C,WAAWN,oBAAkB0U,EAAepU,YAAqBoU,EAAepU,WAEpF7G,KAAKwF,aAAa4V,OAAOnV,EAAO,EAAGkV,GACV,eAArBnb,KAAKuF,aACLvF,KAAKqD,QAAQgY,aAAaH,EAASlb,KAAKqD,QAAQ4M,iBAAiB,IAAM3O,GAAc2E,IACrFjG,KAAKya,iBAAiBnZ,KAGtBtB,KAAKqD,QAAQgY,aAAaH,EAASlb,KAAKqD,QAAQ4M,iBAAiB,IAAM1O,GAAc0E,IACrFjG,KAAKya,iBAAiBlZ,IAE1BvB,KAAKwD,SAAS4X,OAAOnV,EAAO,EAAGiV,GAC/Blb,KAAK+a,cACL/a,KAAKyG,YAAYzG,KAAKwF,aAAaS,GAAOyD,QAASwR,GACnDlb,KAAKwD,SAASxD,KAAKwD,SAAS7C,OAAS,GAAG6D,UAAUsE,OAAOnH,IAO7DwB,EAASjD,UAAUob,WAAa,SAAUrV,GACtCA,EAASA,EAAQjG,KAAKwD,SAAS7C,OAAS,EAAKX,KAAKwD,SAAS7C,OAASsF,EACpE,IAAIsV,EAAqC,eAArBvb,KAAKuF,YAAgCjE,EAAeC,EACpEgF,oBAAkBvG,KAAKqD,QAAQ4M,iBAAiB,IAAMsL,GAActV,MAGxEgE,SAAOjK,KAAKqD,QAAQ4M,iBAAiB,IAAMsL,GAActV,IACzDjG,KAAKwD,SAAS4X,OAAOnV,EAAO,GAC5BjG,KAAKya,iBAAiBc,GACtBvb,KAAK+a,cACD/a,KAAKwD,SAAS7C,OAAS,GACvBX,KAAKwD,SAASxD,KAAKwD,SAAS7C,OAAS,GAAG6D,UAAUsE,OAAOnH,KAGjEvB,GACI6C,WAAS,SACVE,EAASjD,UAAW,cAAU,GACjCE,GACI6C,WAAS,SACVE,EAASjD,UAAW,aAAS,GAChCE,GACIob,gBAAe1Y,IAChBK,EAASjD,UAAW,oBAAgB,GACvCE,GACI6C,WAAS,eACVE,EAASjD,UAAW,mBAAe,GACtCE,GACI6C,WAAS,KACVE,EAASjD,UAAW,gBAAY,GACnCE,GACI6C,YAAS,IACVE,EAASjD,UAAW,eAAW,GAClCE,GACI6C,WAAS,OACVE,EAASjD,UAAW,qBAAiB,GACxCE,GACIqb,WACDtY,EAASjD,UAAW,eAAW,GAClCE,GACIqb,WACDtY,EAASjD,UAAW,mBAAe,GACtCE,GACIqb,WACDtY,EAASjD,UAAW,gBAAY,GACnCE,GACIqb,WACDtY,EAASjD,UAAW,kBAAc,GACrCE,GACIqb,WACDtY,EAASjD,UAAW,sBAAkB,GACzCE,GACIqb,WACDtY,EAASjD,UAAW,oBAAgB,GACvCE,GACIqb,WACDtY,EAASjD,UAAW,iBAAa,GACpCE,GACIqb,WACDtY,EAASjD,UAAW,gBAAY,GACnCiD,EAAW/C,GACPsb,yBACDvY,IAELwY,aCtnDEtc,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,iBAChBC,wBAA2BC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASO,IAAOC,KAAKC,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMO,EAAGG,UAAYV,EAAEU,UAAW,IAAIH,IAV3C,GAaxCK,EAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HjB,EAAvHkB,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOf,OAAOoB,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,iBAAZM,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIQ,EAAIX,EAAWM,OAAS,EAAGK,GAAK,EAAGA,KAASzB,EAAIc,EAAWW,MAAIJ,GAAKH,EAAI,EAAIlB,EAAEqB,GAAKH,EAAI,EAAIlB,EAAEe,EAAQC,EAAKK,GAAKrB,EAAEe,EAAQC,KAASK,GAChJ,OAAOH,EAAI,GAAKG,GAAKnB,OAAOwB,eAAeX,EAAQC,EAAKK,GAAIA,GAO5Dgb,EAAgB,YAChBC,EAAW,aAGXC,EAAa,eAYbC,EAAe,kBACfC,EAAiB,oBAEjBC,EAAS,iBAKTC,EAAuB,SAAUnZ,GAEjC,SAASmZ,IACL,OAAkB,OAAXnZ,GAAmBA,EAAOC,MAAMhD,KAAMU,YAAcV,KA4C/D,OA9CAX,EAAU6c,EAAOnZ,GAIjB3C,GACI6C,WAAS,KACViZ,EAAMhc,UAAW,UAAM,GAC1BE,GACI6C,WAAS,KACViZ,EAAMhc,UAAW,gBAAY,GAChCE,GACI6C,WAAS,KACViZ,EAAMhc,UAAW,cAAU,GAC9BE,GACI6C,WAAS,KACViZ,EAAMhc,UAAW,eAAW,GAC/BE,GACI6C,YAAS,IACViZ,EAAMhc,UAAW,eAAW,GAC/BE,GACI6C,WAAS,IACViZ,EAAMhc,UAAW,WAAO,GAC3BE,GACI6C,WAAS,IACViZ,EAAMhc,UAAW,WAAO,GAC3BE,GACI6C,WAAS,IACViZ,EAAMhc,UAAW,aAAS,GAC7BE,GACI6C,WAAS,IACViZ,EAAMhc,UAAW,aAAS,GAC7BE,GACI6C,WAAS,IACViZ,EAAMhc,UAAW,gBAAY,GAChCE,GACI6C,WAAS,IACViZ,EAAMhc,UAAW,gBAAY,GAChCE,GACI6C,WAAS,OACViZ,EAAMhc,UAAW,gBAAY,GAChCE,GACI6C,WAAS,OACViZ,EAAMhc,UAAW,gBAAY,GAChCE,GACI6C,WAAS,MACViZ,EAAMhc,UAAW,cAAU,GACvBgc,GACThZ,iBAgBEiZ,EAAiC,SAAUpZ,GAE3C,SAASoZ,EAAgB/Y,EAASC,GAC9B,IAAIC,EAAQP,EAAOQ,KAAKvD,KAAMoD,EAASC,IAAYrD,KAanD,OAZAsD,EAAM8Y,KAAO,EACb9Y,EAAM+Y,QAAU,EAChB/Y,EAAMgZ,iBAAkB,EACxBhZ,EAAMiZ,cAAe,EACrBjZ,EAAMkZ,MAAQ,EACdlZ,EAAMmZ,MAAQ,EACdnZ,EAAMoZ,OAAS,KACfpZ,EAAMqZ,QAAU,IAChBrZ,EAAMsZ,OAAS,EACftZ,EAAMuZ,OAAS,EACfvZ,EAAMwZ,OAAS,EACfxZ,EAAMyZ,QAAU,EACTzZ,EAihFX,OAhiFAjE,EAAU8c,EAAiBpZ,GAqB3BoZ,EAAgBjc,UAAUiH,UAAY,WAClCnH,KAAKgd,mBACLhd,KAAKid,eACLjd,KAAKkd,uBACLld,KAAKmd,kBACLnd,KAAKod,uBACLpd,KAAKqd,0BACLrd,KAAKsd,oBACLtd,KAAKud,kBACLvd,KAAKwd,YAAejI,IAAK,GAAID,KAAM,GAAIxQ,OAAQ,GAAIC,MAAO,IAC1D/E,KAAKyd,cACLzd,KAAK0d,YACL1d,KAAK2d,aACL3d,KAAK4d,oBACL5d,KAAK6d,eACL7d,KAAK8d,qBAET3B,EAAgBjc,UAAU2d,aAAe,WACrC,IAAK,IAAI7c,EAAI,EAAGA,EAAIhB,KAAK+d,OAAOpd,OAAQK,IAC/BhB,KAAK+d,OAAO/c,GAAG0Y,KAChB1Z,KAAKge,oBAAoBhe,KAAK+d,OAAO/c,IAAM0Y,GAAI,UAAY1Z,KAAKqc,QAAQxH,aACxE7U,KAAKqc,QAAUrc,KAAKqc,QAAU,GAElCrc,KAAK2d,UAAU3d,KAAK+d,OAAO/c,GAAG0Y,KAAQuE,IAAKje,KAAK+d,OAAO/c,GAAGid,IAAKC,IAAKle,KAAK+d,OAAO/c,GAAGkd,MAG3F/B,EAAgBjc,UAAUie,mBAAqB,SAAUlZ,EAAUmZ,GAC/D,IAAIlF,EAAMlZ,KAAK0N,cAAc,OAO7B,OANIzI,GACAwC,YAAUyR,IAAOjU,IAEjBmZ,GACAlF,EAAI9K,aAAa,KAAMgQ,GAEpBlF,GAOXiD,EAAgBjc,UAAUgI,OAAS,WAC/BlI,KAAKqe,aACLre,KAAKse,kBAAmB,EACpBte,KAAKue,gBAAkBve,KAAKwe,mBAC5Bxe,KAAKye,gBAETze,KAAK0e,iBACL1e,KAAK2I,kBAETwT,EAAgBjc,UAAUue,cAAgB,WACtCze,KAAK2e,MAAQlW,SAASiF,cAAc,SACpC,IAAIkR,EAAQnW,SAASiF,cAAc,SACnC1N,KAAK2e,MAAMna,UAAU0C,IAAI,8BACzB,IAAK,IAAIlG,EAAI,EAAGA,EAAIhB,KAAK6e,SAAU7d,IAAK,CAEpC,IAAK,IADD8d,EAAKrW,SAASiF,cAAc,MACvBtH,EAAI,EAAGA,EAAIpG,KAAK+e,QAAS3Y,IAAK,CACnC,IAAI4Y,EAAKvW,SAASiF,cAAc,MAChCsR,EAAGxa,UAAU0C,IAAI,wBACjBlH,KAAKif,eAAgBjW,OAASiV,IAAKjd,EAAE6T,WAAYqJ,IAAK9X,EAAEyO,WAAYqK,MAAO,IAAKC,MAAO,MAASH,GAChGA,EAAG5Q,aAAa,KAAM,GAAKhI,GAC3BpG,KAAKof,iBAAiBJ,EAAIhe,EAAGoF,GAC7BpG,KAAKqf,kBAAkBL,GAAMf,IAAKjd,EAAGkd,IAAK9X,EAAG8Y,MAAO,EAAGC,MAAO,IAC9DL,EAAGnR,YAAYqR,GAEnBJ,EAAMjR,YAAYmR,GAEtB9e,KAAK2e,MAAMhR,YAAYiR,GACvB5e,KAAKqD,QAAQsK,YAAY3N,KAAK2e,QAElCxC,EAAgBjc,UAAUme,WAAa,WAEnC,GADAre,KAAKsf,kBACDtf,KAAKqD,QAAQkc,kBAAoB,EAAG,CACpC,IAAIC,KACJxf,KAAKqK,eAAgB0T,YAAc,GACnC,IAAK,IAAI/c,EAAI,EAAGA,EAAIhB,KAAKqD,QAAQ4M,iBAAiB,YAAYtP,OAAQK,IAClEwe,EAAc1U,KAAM9K,KAAKqD,QAAQ4M,iBAAiB,YAAYjP,IAElE,IAASA,EAAI,EAAGA,EAAIwe,EAAc7e,OAAQK,IAAK,CAC3C,IAAIye,EAAeD,EAAcxe,GAC7BhB,KAAK8F,WACL2B,YAAUgY,GAAe,SAE7Bzf,KAAK0f,gBAAgBD,GACrBzf,KAAK2f,SACL3f,KAAK6e,SAET,IAAS7d,EAAI,EAAGA,EAAIhB,KAAK+d,OAAOpd,OAAQK,IAAK,CACrCye,EAAezf,KAAKqD,QAAQmH,cAAc,IAAMxK,KAAK+d,OAAO/c,GAAG0Y,IAEnE,GADA1Z,KAAK4f,gBAAgB5f,KAAK+d,OAAO/c,IAC7BhB,KAAK6f,eAAiB7f,KAAK+d,OAAO/c,GAAGkd,KAAOle,KAAK6f,eAAkB7f,KAAK+d,OAAO/c,GAAGkd,IAAMle,KAAK+d,OAAO/c,GAAGke,MAAQ,CAC/G,IAAIY,EAAW9f,KAAK6f,eAAiB7f,KAAK+d,OAAO/c,GAAGke,MACpDlf,KAAKge,oBAAoBhe,KAAK+d,OAAO/c,IAAMkd,IAAK4B,EAAW,EAAI,EAAIA,IAEvE9f,KAAK+f,gBAAgBN,EAAczf,KAAK+d,OAAO/c,IAC/C,IAAIgf,EAAUhgB,KAAKigB,aAAaR,EAAczf,KAAK+d,OAAO/c,GAAIhB,KAAK+d,OAAO/c,GAAG0Y,IAAI,GACjF1Z,KAAKgd,gBAAgBlS,KAAKkV,GAC1BhgB,KAAKqf,kBAAkBI,EAAczf,KAAK+d,OAAO/c,IACjDhB,KAAKkgB,WAAalgB,KACdA,KAAKmgB,aAAehQ,OAAOiQ,WAAW,IAAMpgB,KAAKmgB,WAAa,KAAKE,UACnErgB,KAAKof,iBAAiBK,EAAczf,KAAK+d,OAAO/c,GAAGid,IAAKje,KAAK+d,OAAO/c,GAAGkd,KACvEle,KAAKsgB,YAAcb,EACnBzf,KAAKugB,kBAAkBd,EAAczf,KAAK+d,OAAO/c,IACjDhB,KAAKsgB,YAAc,MAEvBtgB,KAAKwgB,YAAYf,IAEjBzf,KAAKwe,mBACLxe,KAAKygB,6BAITzgB,KAAK0gB,qBAAqB1gB,KAAK+d,SAE/B/d,KAAK2gB,eAAkB3gB,KAAKmgB,YAAchQ,OAAOiQ,WAAW,IAAMpgB,KAAKmgB,WAAa,KAAKE,SACzFrgB,KAAK4gB,sBAAsB5gB,KAAKgd,iBAEpChd,KAAK6gB,cACL7gB,KAAK8gB,aACL9gB,KAAK+gB,eACL/gB,KAAKghB,yBACLhhB,KAAKihB,iBAAmBjhB,KAAK6f,eACvB7f,KAAKwe,mBACPxe,KAAKkhB,wBAETlhB,KAAKmhB,gBAEThF,EAAgBjc,UAAUse,gBAAkB,WACxC,OAAQxe,KAAKmgB,YAAchQ,OAAOiQ,WAAW,IAAMpgB,KAAKmgB,WAAa,KAAKE,SAE9ElE,EAAgBjc,UAAU4d,kBAAoB,WAC1C9d,KAAKohB,YACAphB,KAAKwe,kBACNxe,KAAKohB,SAAS,GAAKphB,KAAKqD,QAAQkE,eACzBwN,KAAKsM,MAAOrhB,KAAKqD,QAAQkE,cAAyB,aAAKvH,KAAKshB,iBAGnEthB,KAAKohB,SAAS,GAAKphB,KAAKqD,QAAQkE,eAC5BwN,KAAKsM,MAAOrhB,KAAKqD,QAAQkE,cAAyB,aACtDvH,KAAKohB,SAAS,GAAKphB,KAAKqD,QAAQkE,eACzBwN,KAAKsM,OAAOrhB,KAAKqD,QAAQkE,cAAc2M,aAAgBlU,KAAK2f,SAAW,GAAK3f,KAAKuhB,YAAY,IACzFvhB,KAAK2f,UAChB3f,KAAKohB,SAAS,GAAKphB,KAAKohB,SAAS,GAAKphB,KAAKshB,kBAGnDnF,EAAgBjc,UAAU2e,OAAS,SAAU2C,GACzC,IAAI3C,EAAS,EACb,GAAI7e,KAAKoc,KAAO,GAAK7V,oBAAkBib,GAEnC,OADA3C,EAAS7e,KAAKoc,KAGlB,IAAK,IAAIpb,EAAI,EAAGA,EAAIhB,KAAK+d,OAAOpd,OAAQK,IAChChB,KAAK+d,OAAO/c,GAAGme,MAAQnf,KAAK+d,OAAO/c,GAAGid,IAAMY,IAC5CA,EAAS7e,KAAK+d,OAAO/c,GAAGme,MAAQnf,KAAK+d,OAAO/c,GAAGid,KAMvD,OAH2B,IAAvBje,KAAK+d,OAAOpd,SACZke,EAAS7e,KAAK+e,SAEXF,GAEX1C,EAAgBjc,UAAUyf,OAAS,WAC/B,IAAIA,EAAS,EAGb,OAFAA,EAAS3f,KAAK+e,QACd/e,KAAK6f,eAAiBF,EACfA,GAEXxD,EAAgBjc,UAAUuhB,mBAAqB,WAC3C,IAAK,IAAIzgB,EAAI,EAAGA,EAAIhB,KAAK+d,OAAOpd,OAAQK,IAAK,CACzC,IAAI0Y,EAAK1Z,KAAK+d,OAAO/c,GAAG0Y,GACxB,GAAIjR,SAASiZ,eAAehI,GAA5B,CACI,IAAIuE,EAAM/X,SAASuC,SAASiZ,eAAehI,GAAIxQ,aAAa,YAAa,IACrEgV,EAAMhY,SAASuC,SAASiZ,eAAehI,GAAIxQ,aAAa,YAAa,IACzElJ,KAAK2d,UAAU3d,KAAK+d,OAAO/c,GAAG0Y,KAAQuE,IAAKA,EAAKC,IAAKA,MAOjE/B,EAAgBjc,UAAUyhB,iBAAmB,SAAU1c,EAAUmZ,EAASpT,GACtE,IAAI3H,EAAUrD,KAAK0N,cAAc,OAUjC,OATI1C,GACAvD,YAAUpE,IAAW2H,IAErB/F,GACAwC,YAAUpE,IAAW4B,IAErBmZ,GACA/a,EAAQ+K,aAAa,KAAMgQ,GAExB/a,GAEX8Y,EAAgBjc,UAAU0hB,eAAiB,SAAU7I,GACjD,GAAIA,EACA,IACI,GAAItQ,SAASwH,iBAAiB8I,GAAUpY,OACpC,OAAOqZ,UAAQvR,SAAS+B,cAAcuO,GAAUvS,UAAUqT,QAGlE,MAAOgI,GACH,OAAO7H,UAAQjB,KAK3BoD,EAAgBjc,UAAU4hB,eAAiB,SAAUpY,EAASqY,EAAe3S,EAAMoK,GAG/E,IAAK,IADDwI,KACKtd,EAAK,EAAGC,EAFA3E,KAAK4hB,eAAelY,EAEfoQ,IAAe,KAAM,KAAM1K,EAAMoK,GAAmB9U,EAAKC,EAAGhE,OAAQ+D,IAAM,CAC5F,IAAIud,EAAOtd,EAAGD,GACdsd,EAAiBlX,KAAKmX,GAE1BC,YAAUpY,MAAMvG,KAAKye,GAAmBD,IAE5C5F,EAAgBjc,UAAU+f,aAAe,SAAUkC,EAAaC,EAAYC,EAAS7I,GASjF,GARA/R,YAAU0a,IAvTN,UAKU,uBAmTdniB,KAAK+b,aAAeoG,EAAY3X,cAAc,sBAC1C2X,EAAY3X,cAAc,sBAC1BxK,KAAK2hB,iBAAiBS,EAAWnd,SAAUkd,EAAYzI,GAAK,WAAYsC,GAC5EmG,EAAYxU,YAAY3N,KAAK+b,cACxBqG,EAAWjd,SACZnF,KAAKsiB,aAAaH,GAElBC,EAAWnG,OAAQ,CACnB,IAAIsG,EAAwBJ,EAAY3X,cAAc,mBAClD2X,EAAY3X,cAAc,mBAAqBxK,KAAK2hB,iBAAiB,GAAIQ,EAAYzI,GAAK,WAAY,IAE1G,GADAjS,YAAU8a,IAAyBtG,KAC9BkG,EAAY3X,cAAc,mBAAoB,CAC/C,IAAIkP,EAAK1Z,KAAKqD,QAAQqW,GAAK,iBAAmB2I,EAC9CriB,KAAK8hB,eAAeM,EAAWnG,OAAQsG,EAAuB7I,EAAIF,GAClExZ,KAAK+b,aAAapO,YAAY4U,GAC9B9I,uBAAqBC,EAAI,iBAAkB0I,IAGnD,GAAIA,EAAW1Y,QAAS,CACpB1J,KAAKwiB,UAAYL,EAAY3X,cAAc,oBAAsB2X,EAAY3X,cAAc,oBACvFxK,KAAK2hB,iBAAiBS,EAAWnd,SAAUkd,EAAYzI,GAAK,QAASqC,GACzE,IAEI0G,EAAqB,iBAFNziB,KAAK+b,aAAavR,cAAc,mBAC/C2F,OAAOuS,iBAAiB1iB,KAAK+b,aAAavR,cAAc,oBAAoB1F,OAAS,OAC/B,IAE1D,GADA6d,oBAAS3iB,KAAKwiB,WAAa1d,OAAQ2d,KAC9BN,EAAY3X,cAAc,oBAAqB,CAC5CkP,EAAK1Z,KAAKqD,QAAQqW,GAAK,kBAAoB2I,EAC/CriB,KAAK8hB,eAAeM,EAAW1Y,QAAS1J,KAAKwiB,UAAW9I,EAAIF,GAC5DxZ,KAAK+b,aAAapO,YAAY3N,KAAKwiB,WACnC/I,uBAAqBC,EAAI,kBAAmB0I,IAGpD,OAAOD,GAEXhG,EAAgBjc,UAAUoiB,aAAe,SAAU7C,GAC/ChY,YAAUgY,IAxVJ,gBA0VVtD,EAAgBjc,UAAUwf,gBAAkB,SAAUD,GAClD,IAAImD,GACA1D,MAAOO,EAAaoD,aAAa,cAAgB3c,SAASuZ,EAAavW,aAAa,cAAe,IAAM,EACzGiW,MAAOM,EAAaoD,aAAa,cAAgB3c,SAASuZ,EAAavW,aAAa,cAAe,IAAM,EACzG4Z,SAAUrD,EAAaoD,aAAa,iBAAmB3c,SAASuZ,EAAavW,aAAa,iBAAkB,IAAM,EAClH6Z,SAAUtD,EAAaoD,aAAa,iBAAmB3c,SAASuZ,EAAavW,aAAa,iBAAkB,IAAM,EAClH8Z,SAAUvD,EAAaoD,aAAa,iBAAmB3c,SAASuZ,EAAavW,aAAa,iBAAkB,IAAM,KAClH+Z,SAAUxD,EAAaoD,aAAa,iBAAmB3c,SAASuZ,EAAavW,aAAa,iBAAkB,IAAM,KAClH+U,IAAKwB,EAAaoD,aAAa,YAAc3c,SAASuZ,EAAavW,aAAa,YAAa,IAAM,EACnGgV,IAAKuB,EAAaoD,aAAa,YAAc3c,SAASuZ,EAAavW,aAAa,YAAa,IAAM,EACnGwQ,GAAI+F,EAAavW,aAAa,MAC9Bga,OAAQzD,EAAaoD,aAAa,eAAiB3c,SAASuZ,EAAavW,aAAa,eAAgB,IAAM,IAC5G+S,OAAQwD,EAAajV,cAAc,oBAAsB,kBACzDd,QAAS+V,EAAajV,cAAc,qBAAuB,oBAE1DoY,EAAMlJ,KACPkJ,EAAMlJ,GAAK,UAAY1Z,KAAKqc,QAAQxH,WACpC4K,EAAarR,aAAa,KAAMwU,EAAMlJ,IACtC1Z,KAAKqc,QAAUrc,KAAKqc,QAAU,GAE9B8G,cAAYP,EAAMzd,WAClByd,EAAMzd,SAAU,GAEpBsa,EAAazY,MAAMkc,OAAS,GAAKN,EAAMM,OAEvC,IAAIE,EAAY,IAAIlH,EAAMlc,KAAM,SAAU4iB,GAC1C5iB,KAAK+d,OAAOjT,KAAKsY,IAErBjH,EAAgBjc,UAAUmjB,aAAe,WACrC,GAAIrjB,KAAKsjB,cACL,IAAK,IAAItiB,EAAI,EAAGA,EAAIhB,KAAKqD,QAAQ4M,iBAAiB,yCAAyCtP,OAAQK,IAAK,CACpG,IAAIuN,EAAmC,SAAtB5G,UAAQC,KAAKC,KAAmB,wBAA0B,YAC3EW,eAAatB,IAAIuB,SAASwH,iBAAiB,aAAajP,GAAIuN,EAAWvO,KAAKujB,kBAAmBvjB,MACrE,SAAtB2H,UAAQC,KAAKC,MACbW,eAAatB,IAAIuB,SAASwH,iBAAiB,aAAajP,GAAI,aAAchB,KAAKwjB,uBAAwBxjB,QAKvHmc,EAAgBjc,UAAU4gB,WAAa,WACnC3Q,OAAOvB,iBAAiB,SAAU5O,KAAKyjB,QAAQrT,KAAKpQ,OACpDA,KAAKqjB,gBAETlH,EAAgBjc,UAAUqjB,kBAAoB,SAAU3a,GACpD5I,KAAK0jB,YAAY9a,GACjB5I,KAAK2jB,WAAa/a,EAAE6G,MACpBzP,KAAK4jB,WAAahb,EAAE+G,MACpB,IAAIkU,EAAuC,SAAtBlc,UAAQC,KAAKC,KAAmB,wBAA0B,YAC3Eic,EAAqC,SAAtBnc,UAAQC,KAAKC,KAAmB,oBAAsB,UACzEW,eAAatB,IAAIuB,SAAUob,EAAe7jB,KAAK+jB,kBAAmB/jB,MAC7DA,KAAKgkB,iBACNxb,eAAatB,IAAIuB,SAAUqb,EAAa9jB,KAAKikB,gBAAiBjkB,MAC9DA,KAAKgkB,gBAAiB,IAI9B7H,EAAgBjc,UAAUwjB,YAAc,SAAU9a,GAC9C5I,KAAKuc,cAAe,EACpB,IAAIvS,EAAKka,UAAStb,EAAe,cAAG,YAChCub,GAASvR,MAAOhK,EAAGvF,QAAS2G,GAChChK,KAAKoR,QAAQ,cAAe+S,GAC5BnkB,KAAKokB,WAAaxb,EAAEyb,cACpBrkB,KAAKskB,UAAY7b,SAASiF,cAAc,OACxC1N,KAAKskB,UAAU9f,UAAU0C,IAAI,YAC7BO,YAAUzH,KAAKqD,UAAWuY,IAC1B5b,KAAKqD,QAAQsK,YAAY3N,KAAKskB,WAC9BtkB,KAAKukB,SAAWre,SAAS8D,EAAGhD,MAAMsO,KAAM,IACxCtV,KAAKwkB,SAAWte,SAAS8D,EAAGhD,MAAMuO,IAAK,IACvCvV,KAAKykB,aAAeza,EAAGkK,YACvBlU,KAAK0kB,cAAgB1a,EAAGmK,aACxBnU,KAAK2kB,cAAgB3kB,KAAK4kB,gBAAgB5a,EAAG0P,IAAIwF,MACjDlf,KAAK6kB,eAAiB7kB,KAAK4kB,gBAAgB5a,EAAG0P,IAAIyF,MAClDnf,KAAK8kB,YAAc9kB,KAAK4kB,gBAAgB5a,EAAG0P,IAAIuE,KAEnD9B,EAAgBjc,UAAUsjB,uBAAyB,SAAU5a,GACzD5I,KAAK0jB,YAAY9a,GACjB5I,KAAK2jB,WAAa/a,EAAEmc,eAAe,GAAGtV,MACtCzP,KAAK4jB,WAAahb,EAAEmc,eAAe,GAAGpV,MACtCnH,eAAatB,IAAIuB,SAAU,YAAazI,KAAKglB,uBAAwBhlB,MAChEA,KAAKgkB,iBACNxb,eAAatB,IAAIuB,SAAU,WAAYzI,KAAKikB,gBAAiBjkB,MAC7DA,KAAKgkB,gBAAiB,IAG9B7H,EAAgBjc,UAAU+kB,YAAc,WACpC,OAAQ/e,SAAUlG,KAAKohB,SAAS,GAAK,IAAKlb,SAASlG,KAAKohB,SAAS,GAAI,MAEzEjF,EAAgBjc,UAAUglB,iBAAmB,SAAUtc,GACnD5I,KAAKmlB,WAAanlB,KAAKokB,WACvB,IACID,GAASvR,MAAOhK,EAAGvF,QADd6gB,UAASlkB,KAAe,WAAG,aAEpCA,KAAKoR,QAAQ,SAAU+S,IAE3BhI,EAAgBjc,UAAUklB,oBAAsB,SAAUpb,GACtDhK,KAAKqlB,QAAUrlB,KAAKqD,QAAQ6Q,YAAc,EAC1ClU,KAAK0c,OAAS1c,KAAKohB,SAAS,GAAKphB,KAAK2c,QAAU,EAChDnV,eAAawC,GAAK,sBAClBvC,YAAUuC,IAAM6R,IAEhB,IAAK,IADDyJ,GAzcD,SACA,SACC,UACA,UAII,eADA,eAEA,eACA,gBAicCtkB,EAAI,EAAGA,EAAIhB,KAAKmlB,WAAW3gB,UAAU7D,OAAQK,KACS,IAAvDskB,EAAYpa,QAAQlL,KAAKmlB,WAAW3gB,UAAUxD,MAC9ChB,KAAKulB,YAAevlB,KAAKmlB,WAAW3gB,UAAUxD,KAI1Dmb,EAAgBjc,UAAU6jB,kBAAoB,SAAUnb,GACpD5I,KAAKklB,iBAAiBtc,GACtB,IAAIoB,EAAKka,UAASlkB,KAAe,WAAG,YACpC,GAAIA,KAAK2jB,aAAe/a,EAAE6G,OAASzP,KAAK4jB,aAAehb,EAAE+G,MAAzD,CAGA3P,KAAKolB,oBAAoBpb,GACzB,IAAIoY,EAAapiB,KAAK4kB,gBAAgB5a,EAAGd,aAAa,OACtDlJ,KAAK4c,OAAShU,EAAE6G,MAChBzP,KAAK6c,OAASjU,EAAE+G,MAChB,IAAI6V,EAAQxlB,KAAK6c,OAAS7c,KAAK4jB,WAAa5jB,KAAKyc,MAC7CgJ,EAAQzlB,KAAK4c,OAAS5c,KAAK2jB,WAAa3jB,KAAKwc,MACjDxc,KAAKwc,MAAQxc,KAAKyc,MAAQ,EAC1Bzc,KAAK4jB,WAAa5jB,KAAK6c,OACvB7c,KAAK2jB,WAAa3jB,KAAK4c,OACvB5c,KAAK0lB,cAAc1b,EAAIoY,EAAYqD,EAAOD,KAE9CrJ,EAAgBjc,UAAU8kB,uBAAyB,SAAUpc,GACzD5I,KAAKklB,iBAAiBtc,GACtB,IAAIoB,EAAKka,UAASlkB,KAAe,WAAG,YACpC,GAAIA,KAAK2jB,aAAe/a,EAAEmc,eAAe,GAAGtV,OAASzP,KAAK4jB,aAAehb,EAAEmc,eAAe,GAAGpV,MAA7F,CAGA3P,KAAKolB,oBAAoBpb,GACzB,IAAIoY,EAAapiB,KAAK4kB,gBAAgB5a,EAAGd,aAAa,OACtDlJ,KAAK4c,OAAShU,EAAEmc,eAAe,GAAGtV,MAClCzP,KAAK6c,OAASjU,EAAEmc,eAAe,GAAGpV,MAClC,IAAI8V,EAAQzlB,KAAK4c,OAAS5c,KAAK2jB,WAAa3jB,KAAKwc,MAC7CgJ,EAAQxlB,KAAK6c,OAAS7c,KAAK4jB,WAAa5jB,KAAKyc,MACjDzc,KAAKwc,MAAQxc,KAAKyc,MAAQ,EAC1Bzc,KAAK2jB,WAAa3jB,KAAK4c,OACvB5c,KAAK4jB,WAAa5jB,KAAK6c,OACvB7c,KAAK0lB,cAAc1b,EAAIoY,EAAYqD,EAAOD,KAG9CrJ,EAAgBjc,UAAUwlB,cAAgB,SAAU1b,EAAIoY,EAAYuD,EAAUC,GAC1E,IAAIC,EAAW7lB,KAAK4kB,gBAAgB5a,EAAG0P,IAAIwF,MACvC4G,EAAW9lB,KAAK4kB,gBAAgB5a,EAAG0P,IAAIyF,MACvC4G,EAAKH,EACLI,EAAKL,EACL3lB,KAAKulB,YAAYra,QAAQ,UAAY,IACjClL,KAAK0kB,cAAgBqB,EAAK/lB,KAAKimB,aAAa7D,IAC5CwD,EAAW5lB,KAAK0kB,cAAgB1kB,KAAKimB,aAAa7D,GAClDpiB,KAAKyc,MAAQsJ,EAAKH,GAEbxD,EAAWa,UAAYjjB,KAAK0kB,cAAgBqB,EAAK/lB,KAAKkmB,aAAa9D,IACxEwD,EAAW5lB,KAAK0kB,cAAgB1kB,KAAKkmB,aAAa9D,GAClDpiB,KAAKyc,MAAQsJ,EAAKH,GAEb5lB,KAAKwkB,SAAWuB,EAAK/lB,KAAK8c,SAC/B8I,EAAW5lB,KAAK8c,OAAS9c,KAAKwkB,SAC9BxkB,KAAKyc,MAAQsJ,EAAKH,GAEtB5lB,KAAKwkB,UAAYoB,EACjB5lB,KAAK0kB,eAAiBkB,GAEtB5lB,KAAKulB,YAAYra,QAAQ,UAAY,IACjClL,KAAK0kB,cAAgBqB,EAAK/lB,KAAKimB,aAAa7D,IAC5CwD,EAAW5lB,KAAKimB,aAAa7D,GAAcpiB,KAAK0kB,cAChD1kB,KAAKyc,MAAQsJ,EAAKH,GAEbxD,EAAWa,UAAYjjB,KAAK0kB,cAAgBqB,EAAK/lB,KAAKkmB,aAAa9D,IACxEwD,EAAW5lB,KAAKkmB,aAAa9D,GAAcpiB,KAAK0kB,cAChD1kB,KAAKyc,MAAQsJ,EAAKH,GAEb5lB,KAAKwkB,SAAWxkB,KAAK0kB,cAAgBqB,EAAK/lB,KAAK0c,SACpDkJ,EAAW5lB,KAAK0c,OAAS1c,KAAKwkB,SAAWxkB,KAAK0kB,cAC9C1kB,KAAKyc,MAAQsJ,EAAKH,GAEtB5lB,KAAK0kB,eAAiBkB,GAEtB5lB,KAAKulB,YAAYra,QAAQ,SAAW,IAChClL,KAAKykB,aAAeuB,EAAKhmB,KAAKmmB,YAAY/D,IAC1CuD,EAAW3lB,KAAKykB,aAAezkB,KAAKmmB,YAAY/D,GAChDpiB,KAAKwc,MAAQwJ,EAAKL,GAEbvD,EAAWY,UAAYhjB,KAAKykB,aAAeuB,EAAKhmB,KAAKomB,YAAYhE,IACtEuD,EAAW3lB,KAAKykB,aAAezkB,KAAKomB,YAAYhE,GAChDpiB,KAAKwc,MAAQwJ,EAAKL,GAEb3lB,KAAKukB,SAAWyB,EAAKhmB,KAAK+c,UAC/B4I,EAAW3lB,KAAK+c,QAAU/c,KAAKukB,SAC/BvkB,KAAKwc,MAAQwJ,EAAKL,GAEtB3lB,KAAKukB,UAAYoB,EACjB3lB,KAAKykB,cAAgBkB,GAErB3lB,KAAKulB,YAAYra,QAAQ,SAAW,IAChClL,KAAKykB,aAAeuB,EAAKhmB,KAAKmmB,YAAY/D,IAC1CuD,EAAW3lB,KAAKmmB,YAAY/D,GAAcpiB,KAAKykB,aAC/CzkB,KAAKwc,MAAQwJ,EAAKL,GAEbvD,EAAWY,UAAYhjB,KAAKykB,aAAeuB,EAAKhmB,KAAKomB,YAAYhE,IACtEuD,EAAW3lB,KAAKomB,YAAYhE,GAAcpiB,KAAKykB,aAC/CzkB,KAAKwc,MAAQwJ,EAAKL,GAEb3lB,KAAKukB,SAAWvkB,KAAKykB,aAAeuB,EAAKhmB,KAAKqlB,UACnDM,EAAW3lB,KAAKqlB,QAAUrlB,KAAKukB,SAAWvkB,KAAKykB,aAC/CzkB,KAAKwc,MAAQwJ,EAAKL,GAEtB3lB,KAAKykB,cAAgBkB,GAEzB3b,EAAGhD,MAAMuO,IAAMvV,KAAKwkB,SAAW,KAC/Bxa,EAAGhD,MAAMsO,KAAOtV,KAAKukB,SAAW,KAChCva,EAAGhD,MAAMjC,MAAQ/E,KAAKykB,aAAe,KACrCza,EAAGhD,MAAMlC,OAAS9E,KAAK0kB,cAAgB,KACvC,IAAIzC,EAAOjiB,KAAKqmB,mBAAmBjE,EAAYpiB,KAAKmlB,YAQpD,GAPIlD,EAAK/D,IAAM+D,EAAK/C,MAAQlf,KAAK+e,SAC7B/e,KAAKge,oBAAoBiE,GAAQ/C,MAAO+C,EAAK/C,MAAQ,IAEzDlf,KAAKskB,UAAUtd,MAAMuO,IAAQ0M,EAAKhE,IAAMje,KAAKilB,cAAc,GAAMhD,EAAKhE,IAAMje,KAAKuhB,YAAY,GAAQ,KACrGvhB,KAAKskB,UAAUtd,MAAMsO,KAAS2M,EAAK/D,IAAMle,KAAKilB,cAAc,GAAQhD,EAAQ,IAAIjiB,KAAKuhB,YAAY,GAAO,KACxGvhB,KAAKskB,UAAUtd,MAAMlC,OAAWmd,EAAK9C,OAASnf,KAAKilB,cAAc,GAAMjlB,KAAKuhB,YAAY,IAAS,KACjGvhB,KAAKskB,UAAUtd,MAAMjC,MAAUkd,EAAK/C,OAASlf,KAAKilB,cAAc,GAAMjlB,KAAKuhB,YAAY,IAAS,KAC5FsE,IAAa5D,EAAK/C,OAAS4G,IAAa7D,EAAK9C,MAAO,CACpD0G,EAAW5D,EAAK/C,MAChB4G,EAAW7D,EAAK9C,MAChB,IAAIyD,EAAQ5iB,KAAK4kB,gBAAgB5a,EAAG0P,IAChC1Q,GACAsd,YACIrI,IAAK2E,EAAM3E,IAAIpJ,WACfqJ,IAAK0E,EAAM1E,IAAIrJ,WACfqK,MAAO0D,EAAM1D,MAAMrK,WACnBsK,MAAOyD,EAAMzD,MAAMtK,aAG3B7U,KAAKif,cAAcjW,EAAOgB,GAC1BhK,KAAKsgB,YAActW,EACnBhK,KAAKugB,kBAAkBvW,EAAIhK,KAAK4kB,gBAAgB5a,EAAG0P,KACnD1Z,KAAKyhB,qBACLzhB,KAAK6gB,gBAGb1E,EAAgBjc,UAAU+jB,gBAAkB,SAAUrb,GAClD,IAAIrC,oBAAkBvG,KAAKokB,YAA3B,CAGApkB,KAAKumB,SAAWvmB,KAAKokB,WACrB,IAAIpa,EAAKka,UAASlkB,KAAa,SAAG,YAC9BmkB,GAASvR,MAAOhK,EAAGvF,QAAS2G,GAChC,GAAIA,EAAI,CACJvC,YAAUuC,GAAK,sBACf,IAAI6Z,EAAuC,SAAtBlc,UAAQC,KAAKC,KAAmB,wBAA0B,YAC3Eic,EAAqC,SAAtBnc,UAAQC,KAAKC,KAAmB,oBAAsB,UACzEW,eAAaM,OAAOL,SAAUob,EAAe7jB,KAAK+jB,mBAClDvb,eAAaM,OAAOL,SAAUqb,EAAa9jB,KAAKikB,iBACtB,SAAtBtc,UAAQC,KAAKC,OACbW,eAAaM,OAAOL,SAAU,YAAazI,KAAKglB,wBAChDxc,eAAaM,OAAOL,SAAU,WAAYzI,KAAKikB,kBAEnDjkB,KAAKgkB,gBAAiB,EAClBhkB,KAAKskB,WACLra,SAAOjK,KAAKskB,WAEhBtkB,KAAKskB,UAAY,KACjB,IAAIlC,EAAapiB,KAAK4kB,gBAAgB5a,EAAGd,aAAa,OACtDlJ,KAAKof,iBAAiBpV,EAAIoY,EAAWnE,IAAKmE,EAAWlE,KACrDle,KAAKqf,kBAAkBrV,EAAIoY,GAE/BpiB,KAAKoR,QAAQ,aAAc+S,GAC3BnkB,KAAKuc,cAAe,EACpBvc,KAAK2jB,WAAa3jB,KAAK4jB,gBAAa4C,EACpCxmB,KAAKwc,MAAQxc,KAAKyc,MAAQ,EAC1Bzc,KAAKsgB,YAAc,KACftgB,KAAKymB,eACLzmB,KAAK0mB,mBAET1mB,KAAK+gB,eACL/gB,KAAKghB,2BAET7E,EAAgBjc,UAAUmmB,mBAAqB,SAAUpE,EAAMrZ,GAC3D,IAAI+d,GAAY,EACZzI,EAAM+D,EAAK/D,KAC+C,KAAzD,SAAU,gBAAgBhT,QAAQlL,KAAKulB,eACxCrH,EAAMle,KAAK4mB,gBAAgB5mB,KAAKukB,UAAU,IAE9C,IAAItG,EAAMgE,EAAKhE,KACgC,KAA1C,WAAW/S,QAAQlL,KAAKulB,eACzBtH,EAAMje,KAAK6mB,aAAa7mB,KAAKwkB,UAAU,GACnCxkB,KAAK8kB,cAAgB7G,IACrBje,KAAK8kB,YAAc7G,EACnB0I,GAAY,IAGpB,IAAIzH,EAAQ+C,EAAK/C,OACyC,KAArD,UAAW,WAAWhU,QAAQlL,KAAKulB,eACpCrG,EAAQlf,KAAK4mB,gBAAgB5mB,KAAKykB,aAAe,EAAUzkB,KAAKuhB,YAAY,IAAI,IAEpF,IAAIpC,EAAQ8C,EAAK9C,OACuC,KAAnD,SAAU,UAAUjU,QAAQlL,KAAKulB,eACT,YAArBvlB,KAAKulB,aAA4BoB,KACjCxH,EAAQnf,KAAK6mB,aAAa7mB,KAAK0kB,cAAgB,EAAU1kB,KAAKuhB,YAAY,IAAI,IAGlFU,EAAK/D,IAAM+D,EAAK/C,MAAQlf,KAAK+e,UAC7BkD,EAAK/C,MAAQ+C,EAAK/C,MAAQ,GAO9B,OALgBjB,GAAO,GAAKC,GAAO,GAAKgB,EAAQhB,GAAOle,KAAK2f,UAAYR,EAAQlB,GAAOje,KAAK6e,UACK,IAA/E7e,KAAK8mB,WAAW7I,EAAKC,EAAKgB,EAAOC,EAAOnf,KAAK+mB,aAAa9E,EAAKvI,KAAK/Y,SACzD,IAAtBX,KAAKgnB,eACRhnB,KAAKge,oBAAoBiE,GAAQhE,IAAKA,EAAKC,IAAKA,EAAKgB,MAAOA,EAAOC,MAAOA,IAEvE8C,GAEX9F,EAAgBjc,UAAU0mB,gBAAkB,SAAUK,EAAQC,GAC1D,IAAIC,EAAcnnB,KAAKohB,SAAS,GAChC,OAAI8F,EACOnS,KAAKC,KAAKiS,EAASE,GAGnBpS,KAAKsM,MAAM4F,EAASE,IAGnChL,EAAgBjc,UAAU2mB,aAAe,SAAUI,EAAQC,GACvD,OAAIA,EACOnS,KAAK8C,MAAMoP,EAASjnB,KAAKohB,SAAS,IAGlCrM,KAAK8C,MAAMoP,GAAUjnB,KAAKohB,SAAS,GAAKphB,KAAKuhB,YAAY,MAGxEpF,EAAgBjc,UAAUimB,YAAc,SAAUlE,GAC9C,OAAQA,EAAa,SAAIjiB,KAAKilB,cAAc,IAGhD9I,EAAgBjc,UAAUkmB,YAAc,SAAUnE,GAC9C,OAAQA,EAAa,SAAIjiB,KAAKilB,cAAc,IAGhD9I,EAAgBjc,UAAU+lB,aAAe,SAAUhE,GAC/C,OAAQA,EAAa,SAAIjiB,KAAKilB,cAAc,IAGhD9I,EAAgBjc,UAAUgmB,aAAe,SAAUjE,GAC/C,OAAQA,EAAa,SAAIjiB,KAAKilB,cAAc,IAGhD9I,EAAgBjc,UAAU2gB,YAAc,WACpC7gB,KAAKid,eACL,IAAK,IAAIjc,EAAI,EAAGomB,EAAIpnB,KAAKgd,gBAAgBrc,OAAQK,EAAIomB,IAAKpmB,EACtDhB,KAAKqnB,SAASrnB,KAAKgd,gBAAgBhc,KAG3Cmb,EAAgBjc,UAAUwmB,iBAAmB,WACzC,IAA2B,IAAvB1mB,KAAKymB,cAAT,CAGA,IAAK,IAAIa,EAAW,EAAGF,EAAIpnB,KAAKid,YAAYtc,OAAQ2mB,EAAWF,IAAKE,EAAU,CAC1E,IAAIvI,EAAU/e,KAAKid,YAAYqK,GAC/B,GAAKvI,EAGL,IAAK,IAAIwI,EAAW,EAAGC,EAAMzI,EAAQpe,OAAQ4mB,EAAWC,IAAOD,EAAU,CACrE,IAAItF,EAAOlD,EAAQwI,GACftF,GACAjiB,KAAKynB,gBAAgBxF,IAIjCjiB,KAAK0nB,oBAGTvL,EAAgBjc,UAAUunB,gBAAkB,SAAUxF,GAClD,IAA2B,IAAvBjiB,KAAKymB,eAA2BxE,IAASjiB,KAAKsgB,YAAlD,CASA,IANA,IAAIiH,EAAWvnB,KAAK4kB,gBAAgB3C,EAAKvI,IAAIwE,IACzCiB,EAAQjZ,SAAS+b,EAAK/Y,aAAa,cAAe,IAClDgW,EAAQhZ,SAAS+b,EAAK/Y,aAAa,cAAe,IAClDye,EAAe,KACfC,EAAkB,KAClBN,EAAWphB,SAAS+b,EAAK/Y,aAAa,YAAa,IAAM,EACtDoe,GAAY,GAAG,CAElB,GAAqB,IADTtnB,KAAK8mB,WAAWQ,EAAUC,EAAUrI,EAAOC,EAAO8C,GACpDthB,OACN,MAEJgnB,EAAeL,EACfM,EAAkBL,IAChBD,EAEe,OAAjBK,GACA3nB,KAAKqnB,SAASpF,EAAM0F,EAAcC,KAG1CzL,EAAgBjc,UAAUmnB,SAAW,SAAUpF,EAAM4F,EAAUC,EAAaC,GACxE/nB,KAAKmd,kBACL,IAAI6K,EAAS9hB,SAAS+b,EAAK/Y,aAAa,YAAa,IACjD+U,EAAM/X,SAAS+b,EAAK/Y,aAAa,YAAa,IAKlD,GAJKlJ,KAAKid,YAAYgB,KAClBje,KAAKid,YAAYgB,OAErBje,KAAKid,YAAYgB,GAAK+J,GAAU/F,OACnBuE,IAATvE,QAAmCuE,IAAbqB,QAA0CrB,IAAhBsB,EAA2B,CAC3E,QAAgCtB,IAA5BxmB,KAAK2d,UAAUsE,EAAKvI,KAAqD,OAAhC1Z,KAAK2d,UAAUsE,EAAKvI,IAAIuE,UAC1B,IAAhCje,KAAK2d,UAAUsE,EAAKvI,IAAIwE,IAAqB,CAEhD,IAAI+J,EAASjoB,KAAKid,YAAYjd,KAAK2d,UAAUsE,EAAKvI,IAAIuE,KAClDje,KAAK2d,UAAUsE,EAAKvI,KAAOuO,EAAOjoB,KAAK2d,UAAUsE,EAAKvI,IAAIwE,OAAS+D,WAC5DgG,EAAOjoB,KAAK2d,UAAUsE,EAAKvI,IAAIwE,KACtCle,KAAKyhB,qBACLzhB,KAAK6gB,eAIjB7gB,KAAK2d,UAAUsE,EAAKvI,IAAIuE,IAAM4J,EAC9B7nB,KAAK2d,UAAUsE,EAAKvI,IAAIuE,IAAM6J,EACzB9nB,KAAKid,YAAYgB,KAClBje,KAAKid,YAAYgB,OAErBje,KAAKid,YAAYgB,GAAK+J,GAAU/F,GACK,IAAjCjiB,KAAK0d,SAASxS,QAAQ+W,IACtBjiB,KAAK0d,SAAS5S,KAAKmX,GAEvBjiB,KAAKge,oBAAoBhe,KAAK4kB,gBAAgB3C,EAAKvI,KAAOuE,IAAK4J,EAAU3J,IAAK4J,IAC9E,IAAI1F,EAAapiB,KAAK4kB,gBAAgB3C,EAAKvI,IAC3C1Z,KAAKif,eAAgBjW,OAASkV,IAAKkE,EAAWlE,IAAIrJ,WAAYoJ,IAAKmE,EAAWnE,IAAIpJ,aAAgBoN,GAClGjiB,KAAKkoB,aAAajG,EAAMjiB,KAAK4kB,gBAAgB3C,EAAKvI,OAG1DyC,EAAgBjc,UAAUgoB,aAAe,SAAU7kB,EAAS+e,GACxDpiB,KAAKof,iBAAiB/b,EAAS+e,EAAWnE,IAAKmE,EAAWlE,KAC1Dle,KAAKqf,kBAAkBhc,EAAS+e,GAChCpiB,KAAKsf,kBACLtf,KAAK6gB,eAGT1E,EAAgBjc,UAAUujB,QAAU,WAEhC,GADAzjB,KAAK0e,iBACD1e,KAAKwe,kBACLxe,KAAKygB,4BAEJ,CACD,GAAIzgB,KAAKqD,QAAQmB,UAAUC,SAASqX,GAAa,CAC7CtU,eAAaxH,KAAKqD,UAAWyY,IAC7B,IAAK,IAAI9a,EAAI,EAAGA,EAAIhB,KAAKqD,QAAQ4M,iBAAiB,YAAYtP,OAAQK,IAAK,CACvE,IAAIkY,EAAMlZ,KAAKqD,QAAQ4M,iBAAiB,YAAYjP,GAChDmnB,EAAenoB,KAAK4kB,gBAAgB1L,EAAIQ,IACxCuE,EAAM/X,SAASgT,EAAIhQ,aAAa,YAAa,IAC7CgV,EAAMhY,SAASgT,EAAIhQ,aAAa,YAAa,IACjDlJ,KAAKge,oBAAoBmK,GAAgBlK,IAAKA,EAAKC,IAAKA,IACxDle,KAAKqf,kBAAkBnG,EAAKlZ,KAAK4kB,gBAAgB1L,EAAIQ,KACrD1Z,KAAKof,iBAAiBlG,EAAK+E,EAAKC,GAChCle,KAAKsf,mBAGbtf,KAAKkhB,wBACLlhB,KAAK0nB,kBAET1nB,KAAKooB,oBAAoBpoB,KAAKgd,iBAC9Bhd,KAAKwgB,WAAWxgB,KAAKgd,iBACrBhd,KAAKqjB,eACLrjB,KAAKqoB,cAAcroB,KAAKud,iBAE5BpB,EAAgBjc,UAAUwnB,gBAAkB,WACpC1nB,KAAKqD,QAAQmH,cAAc,iCACvBxK,KAAK2e,OACL1U,SAAOjK,KAAK2e,OAEhB3e,KAAKye,kBAGbtC,EAAgBjc,UAAUmoB,cAAgB,SAAU9K,GAChD,GAAIvd,KAAKwe,oBAAsBxe,KAAK2gB,cAChC,IAAK,IAAI3f,EAAI,EAAGA,EAAIuc,EAAe5c,OAAQK,IACvCuc,EAAevc,GAAGsZ,cAGrB,CACD,IAAStZ,EAAI,EAAGA,EAAIuc,EAAe5c,OAAQK,IACvCuc,EAAevc,GAAGsZ,UAEtBta,KAAK4gB,sBAAsB5gB,KAAKgd,mBAGxCb,EAAgBjc,UAAUooB,WAAa,WAenC,IAAK,IAdD1F,KACA2F,EAAU,SAAUtK,GAQpB,IAAK,IAPDuK,EAAU,SAAUtK,GACpBuK,EAAO1K,OAAO2K,OAAO,SAAUC,GACvBA,EAAM1K,MAAQA,GAAO0K,EAAMzK,MAAQA,GACnC0E,EAAM9X,KAAK6d,MAIdzK,EAAM,EAAGA,EAAMuK,EAAO1J,QAASb,IACpCsK,EAAQtK,IAGZuK,EAASzoB,KACJie,EAAM,EAAGA,GAAOje,KAAKoc,KAAM6B,IAChCsK,EAAQtK,GAEZ,OAAO2E,GAEXzG,EAAgBjc,UAAUugB,sBAAwB,WAC9ChZ,YAAUzH,KAAKqD,UAAWyY,IAC1B,IAAI8M,EAAe5oB,KAAKsoB,aACxBtoB,KAAK6oB,YAAcD,EAAajoB,OAChC,IAAK,IAAIK,EAAI,EAAGA,EAAI4nB,EAAajoB,OAAQK,IAAK,CAC1C,IAAIye,EAAehX,SAASiZ,eAAekH,EAAa5nB,GAAG0Y,IACvD+F,IACAkD,oBAASlD,GAAgB1a,MAAS,SAClC0a,EAAazY,MAAMlC,OAAS,KAAO9E,KAAKqD,QAAQkE,eACzCvH,KAAKqD,QAAQkE,cAAc2M,YAAclU,KAAKshB,iBAAmB,KACxEthB,KAAKohB,SAAS,GAAKphB,KAAKqD,QAAQkE,eACxBvH,KAAKqD,QAAQkE,cAAc2M,YAAclU,KAAKshB,gBACtDthB,KAAKge,oBAAoB4K,EAAa5nB,IAAMid,IAAKjd,EAAGkd,IAAK,IACzDle,KAAKof,iBAAiBK,EAAcmJ,EAAa5nB,GAAGid,IAAK2K,EAAa5nB,GAAGkd,KACzEle,KAAKwgB,WAAWxgB,KAAKgd,iBACrBhd,KAAKqoB,cAAcroB,KAAKud,gBACxBvd,KAAKooB,oBAAoBpoB,KAAKgd,kBAGtChd,KAAKsf,mBAETnD,EAAgBjc,UAAUghB,sBAAwB,WAC9ClhB,KAAKqD,QAAQmB,UAAU0C,IAAI,gBAC3BlH,KAAK8d,oBACL,IAAK,IAAI9c,EAAI,EAAGA,EAAIhB,KAAKqD,QAAQ4M,iBAAiB,YAAYtP,OAAQK,IAAK,CACvE,IAAIkY,EAAMlZ,KAAKqD,QAAQ4M,iBAAiB,YAAYjP,GAChDohB,EAAapiB,KAAK4kB,gBAAgB1L,EAAIQ,IAC1C1Z,KAAKqf,kBAAkBnG,EAAKkJ,GAEhC,IAASphB,EAAI,EAAGA,EAAIhB,KAAK+d,OAAOpd,OAAQK,IACpChB,KAAKof,iBAAiB3W,SAASiZ,eAAe1hB,KAAK+d,OAAO/c,GAAG0Y,IAAK1Z,KAAK+d,OAAO/c,GAAGid,IAAKje,KAAK+d,OAAO/c,GAAGkd,KAEzGle,KAAKsf,mBAETnD,EAAgBjc,UAAUof,gBAAkB,WACxCtf,KAAK8oB,eACL9oB,KAAK+oB,kBAET5M,EAAgBjc,UAAU6oB,eAAiB,WACvC,IAAIC,EACAC,EAEAD,EADAhpB,KAAKwe,kBACWxe,KAAK6e,UAChB7e,KAAKqD,QAAQkE,eAAiBwN,KAAKsM,MAAOrhB,KAAKqD,QAAQkE,cAAyB,aAAKvH,KAAKshB,kBAC1FthB,KAAK6e,SAAW,GAAK7e,KAAKuhB,YAAY,GAAM,KAGjCvhB,KAAK6e,UAChB7e,KAAKohB,SAAS,GAAKphB,KAAKshB,kBAAoBthB,KAAK6e,SAAW,GAAK7e,KAAKuhB,YAAY,GAAM,KAEjGoB,oBAAS3iB,KAAKqD,SAAWyB,OAAUkkB,IACnCC,EAAa9Y,OAAOuS,iBAAiB1iB,KAAKqD,SAAS0B,MACnD4d,oBAAS3iB,KAAKqD,SAAW0B,MAASkkB,KAEtC9M,EAAgBjc,UAAUmf,kBAAoB,SAAUI,EAAc2C,GAClEO,oBAASlD,GAAgB3a,OAAU8F,aAAW5K,KAAKkpB,gBAAgB9G,GAAY,MAC/EO,oBAASlD,GAAgB1a,MAAS6F,aAAW5K,KAAKkpB,gBAAgB9G,GAAY,OAElFjG,EAAgBjc,UAAUipB,WAAa,SAAUR,EAAOnP,GACpDxZ,KAAKyd,WAAazd,KAAKkpB,gBAAgBP,GACnCxF,cAAYwF,EAAMxjB,WAClBwjB,EAAMxjB,SAAU,GAEpB,IAAIgd,EAAcniB,KAAKme,mBAAmBwK,EAAM1jB,SAAU0jB,EAAMjP,IAChEyI,EAAYnb,MAAMkc,OAAS,GAAKyF,EAAMzF,OACtCljB,KAAKqD,QAAQsK,YAAYwU,GACzB,IAAIiH,EAAgBppB,KAAKigB,aAAakC,EAAawG,EAAOA,EAAMjP,GAAIF,GAIpE,OAHAxZ,KAAKgd,gBAAgBlS,KAAKse,GAC1BppB,KAAK+f,gBAAgBoC,EAAawG,GAClC3oB,KAAKqf,kBAAkB8C,EAAawG,GAC7BxG,GAEXhG,EAAgBjc,UAAUkf,iBAAmB,SAAU+C,EAAalE,EAAKC,GACrE,GAAKiE,EAAL,CAGA,IAAI6G,EAAchpB,KAAKilB,cAAc,GACjCgE,EAAajpB,KAAKilB,cAAc,GAChC3P,EAAe,IAAR4I,EAAY,EAAM,GAAShY,SAAS+iB,EAAWpU,WAAY,IAAM7U,KAAKuhB,YAAY,IACzFhM,EAAc,IAAR0I,EAAY,EAAM,GAAS/X,SAAS8iB,EAAYnU,WAAY,IAAM7U,KAAKuhB,YAAY,IAC7FoB,oBAASR,GAAe7M,KAAQA,EAAO,KAAMC,IAAOA,EAAM,SAE9D4G,EAAgBjc,UAAU4oB,aAAe,WAErC,GADA9oB,KAAKoc,KAAO,KACRpc,KAAKqD,QAAQ4M,iBAAiB,YAAYtP,OAAS,IAAMX,KAAK6oB,YAE9D,IAAK,IADDrJ,EAAgBxf,KAAKqD,QAAQ4M,iBAAiB,YACzCjP,EAAI,EAAGA,EAAIwe,EAAc7e,OAAQK,IAAK,CAC3C,IAAIye,EAAeD,EAAcxe,GAC7B6mB,EAAW3hB,SAASuZ,EAAavW,aAAa,YAAa,IAC3DmgB,EAASnjB,SAASuZ,EAAavW,aAAa,cAAe,IAC/DlJ,KAAKoc,KAAOrH,KAAKtL,IAAIzJ,KAAKoc,KAAOyL,EAAWwB,OAG/C,CACGrpB,KAAK6oB,cACL7oB,KAAKoc,KAAOpc,KAAK6oB,YACjB7oB,KAAK6oB,YAAc,MAEvB,IAAS7nB,EAAI,EAAGA,EAAIhB,KAAK+d,OAAOpd,OAAQK,IACpChB,KAAKoc,KAAOrH,KAAKtL,IAAIzJ,KAAKoc,KAAMpc,KAAK+d,OAAO/c,GAAGid,OAI3D9B,EAAgBjc,UAAU0f,gBAAkB,SAAU+I,IAC7CA,EAAMzJ,OAASyJ,EAAMzJ,MAAQyJ,EAAM7F,SACpC9iB,KAAKge,oBAAoB2K,GAASzJ,MAAOyJ,EAAM7F,WAEzC6F,EAAM3F,UAAY2F,EAAMzJ,MAAQyJ,EAAM3F,SAC5ChjB,KAAKge,oBAAoB2K,GAASzJ,MAAOyJ,EAAM3F,WAE1C2F,EAAMzJ,MAAQlf,KAAK+e,QACxB/e,KAAKge,oBAAoB2K,GAASzJ,MAAOlf,KAAK+e,UAG9C/e,KAAKge,oBAAoB2K,GAASzJ,MAAOyJ,EAAMzJ,SAE9CyJ,EAAMxJ,OAASwJ,EAAMxJ,MAAQwJ,EAAM5F,SACpC/iB,KAAKge,oBAAoB2K,GAASxJ,MAAOwJ,EAAM5F,WAE1C4F,EAAM1F,UAAY0F,EAAMxJ,MAAQwJ,EAAM1F,SAC3CjjB,KAAKge,oBAAoB2K,GAASxJ,MAAOwJ,EAAM1F,WAG/CjjB,KAAKge,oBAAoB2K,GAASxJ,MAAOwJ,EAAMxJ,SAGvDhD,EAAgBjc,UAAUopB,kBAAoB,SAAUX,GAChDA,EAAMzK,IAAMyK,EAAMzJ,MAAQlf,KAAK+e,SAC/B/e,KAAKge,oBAAoB2K,GAASzJ,MAAOyJ,EAAMzJ,OAASlf,KAAK+e,SAAW4J,EAAMzK,IAAMyK,EAAMzJ,WAGlG/C,EAAgBjc,UAAU8d,oBAAsB,SAAU2K,EAAO3f,GAE7D2f,EAAMte,cAAcrB,GAAO,IAE/BmT,EAAgBjc,UAAUwgB,qBAAuB,SAAU6I,GACvD,GAAIvpB,KAAKqD,QAAQ4M,iBAAiB,YAAYtP,OAAS,GAAKX,KAAK+d,OAAOpd,OAAS,EAC7E,IAAK,IAAIyF,EAAI,EAAGA,EAAImjB,EAAM5oB,OAAQyF,IAAK,CACnCpG,KAAKkd,oBAAoBpS,KAAKye,EAAMnjB,IACpCpG,KAAK4f,gBAAgB2J,EAAMnjB,KACvBpG,KAAK6f,eAAiB0J,EAAMnjB,GAAG8X,KAAOle,KAAK6f,eAAkB0J,EAAMnjB,GAAG8X,IAAMqL,EAAMnjB,GAAG8Y,QACrFlf,KAAKge,oBAAoBuL,EAAMnjB,IAAM8X,IAAKle,KAAK6f,eAAiB0J,EAAMnjB,GAAG8Y,QAE7E,IAAIsK,EAAOxpB,KAAKmpB,WAAWI,EAAMnjB,IAAI,GACjCpG,KAAK8F,WACL2B,YAAU+hB,GAAO,SAErBxpB,KAAKqD,QAAQsK,YAAY6b,GACrBxpB,KAAKwe,mBAAqBpY,IAAMmjB,EAAM5oB,OAAS,EAC/CX,KAAKygB,yBAGLzgB,KAAKof,iBAAiBoK,EAAMD,EAAMnjB,GAAG6X,IAAKsL,EAAMnjB,GAAG8X,KACnDle,KAAKsgB,YAAckJ,EACnBxpB,KAAKugB,kBAAkBiJ,EAAMD,EAAMnjB,IACnCpG,KAAKsgB,YAAc,MAI/BtgB,KAAKwgB,WAAWxgB,KAAKgd,kBAEzBb,EAAgBjc,UAAU4mB,WAAa,SAAU7I,EAAKC,EAAKgB,EAAOC,EAAOsK,GACrE,IAAIC,KACCxK,GAAUC,IACXD,EAAQC,EAAQ,IAEhBsK,GAAYA,aAAkB7pB,QAC9B6pB,GAAUA,IAGd,IAAK,IADDxH,EACK0H,EAAI,EAAGA,EAAIxK,IAASwK,EACzB,IAAK,IAAIC,EAAI,EAAGA,EAAI1K,IAAS0K,IACzB3H,EAAOjiB,KAAK6pB,SAAS5L,EAAM0L,EAAGzL,EAAM0L,EAAGH,KACzBA,IAAgE,IAAtDA,EAAOve,QAAQzC,SAASiZ,eAAeO,EAAKvI,OACX,IAArDgQ,EAAMxe,QAAQzC,SAASiZ,eAAeO,EAAKvI,MAC3CgQ,EAAM5e,KAAKrC,SAASiZ,eAAeO,EAAKvI,KAIpD,OAAOgQ,GAGXvN,EAAgBjc,UAAU4pB,wBAA0B,SAAUC,EAAa7L,EAAKhF,GAC5E,IAAI5V,EAAQtD,KACR+e,KACAiL,KAeJ,GAdAD,EAAYhgB,QAAQ,SAAU1G,GAC1B,IAAIykB,EAAc5hB,SAAS7C,EAAQ6F,aAAa,YAAa,IACzD+gB,EAAa/jB,SAAS7C,EAAQ6F,aAAa,cAAe,IAC9D,GAAIgV,EAAM5a,EAAMyb,SAAW+I,GAAe5J,EACtC,GAAI+L,EAAa,EACb,IAAK,IAAIjpB,EAAI8mB,EAAa9mB,EAAI8mB,EAAcmC,EAAYjpB,IACpD+d,EAAQjU,KAAK9J,QAIjB+d,EAAQjU,KAAKgd,KAIrB/I,EAAQpe,OAAS,EACjB,IAAK,IAAIK,EAAIkd,EAAM,EAAGld,GAAKhB,KAAK+e,QAAU,EAAG/d,KACb,IAAxB+d,EAAQ7T,QAAQlK,IAAaA,IAAMkd,IACD,IAA9B8L,EAAc9e,QAAQlK,IACtBgpB,EAAclf,KAAK9J,GAKnC,IAAIkpB,EAAiBlqB,KAAKmqB,mBAAmBjR,EAAK,SAClDgR,EAAengB,QAAQ,SAAU+V,GACzBA,EAAW5B,IAA4C,IAArC8L,EAAc9e,QAAQ4U,IACxCkK,EAAc5O,OAAO4O,EAAc9e,QAAQ4U,GAAW,KAW9D,OARwB9f,KAAKmqB,mBAAmBnqB,KAAKoqB,gBAAiB,QACpDrgB,QAAQ,SAAUmU,GAC5BA,EAAMhY,SAASgT,EAAIhQ,aAAa,YAAa,MAAwC,IAAjCghB,EAAehf,QAAQgT,KAC3C,IAAhC8L,EAAc9e,QAAQgT,IACtB8L,EAAclf,KAAKoT,KAG3B8L,EAAgBA,EAAcK,KAAK,SAAUC,EAAMlW,GAAY,OAAOkW,EAAOlW,KAGjF+H,EAAgBjc,UAAUiqB,mBAAqB,SAAU9mB,EAAS+L,GAI9D,IAAK,IAHDmb,KACArL,EAAQhZ,SAAS7C,EAAQ6F,aAAa,cAAe,IACrDgV,EAAMhY,SAAS7C,EAAQ6F,aAAa,YAAa,IAC5ClI,EAAIkd,EAAMld,EAAIkd,EAAMgB,GAASle,GAAKhB,KAAK+e,QAAU/d,IACtDupB,EAAczf,KAAK9J,GAEvB,OAAOupB,GAEXpO,EAAgBjc,UAAUsqB,uBAAyB,SAAUT,EAAa7L,EAAKhF,GAC3E,IAAI5V,EAAQtD,KACRgqB,KACAjL,KAeJ,GAdAgL,EAAYhgB,QAAQ,SAAU1G,GAC1B,IAAIyc,EAAW5Z,SAAS7C,EAAQ6F,aAAa,YAAa,IACtDmgB,EAASnjB,SAAS7C,EAAQ6F,aAAa,cAAe,IAC1D,GAAIgV,GAAO5a,EAAMyb,SAAWe,GAAY5B,EACpC,GAAImL,EAAS,EACT,IAAK,IAAIroB,EAAI8e,EAAU9e,EAAI8e,EAAWuJ,EAAQroB,IAC1C+d,EAAQjU,KAAK9J,QAIjB+d,EAAQjU,KAAKgV,KAIrBf,EAAQpe,OAAS,EACjB,IAAK,IAAIK,EAAI,EAAGA,GAAKkd,EAAKld,KACM,IAAxB+d,EAAQ7T,QAAQlK,IAAaA,IAAMkd,IACD,IAA9B8L,EAAc9e,QAAQlK,IACtBgpB,EAAclf,KAAK9J,GAKnC,IAAIkpB,EAAiBlqB,KAAKmqB,mBAAmBjR,EAAK,QAClDgR,EAAengB,QAAQ,SAAU+V,GACzBA,EAAW5B,IAA4C,IAArC8L,EAAc9e,QAAQ4U,IACxCkK,EAAc5O,OAAO4O,EAAc9e,QAAQ4U,GAAW,KAY9D,OATwB9f,KAAKmqB,mBAAmBnqB,KAAKoqB,gBAAiB,QACpDrgB,QAAQ,SAAUmU,GAC5BA,EAAMhY,SAASgT,EAAIhQ,aAAa,YAAa,MAAwC,IAAjCghB,EAAehf,QAAQgT,KAC3C,IAAhC8L,EAAc9e,QAAQgT,IACtB8L,EAAclf,KAAKoT,KAG3B8L,EAAgBA,EAAcK,KAAK,SAAUC,EAAMG,GAAQ,OAAOH,EAAOG,IACzET,EAAgBA,EAAcU,WAGlCvO,EAAgBjc,UAAUyqB,oBAAsB,SAAU1M,EAAKC,EAAKiB,EAAOD,EAAOhG,GAC9ElZ,KAAK4qB,oBAAiBpE,EACtBxmB,KAAK6qB,qBAAkBrE,EACvB,IACIsE,EACAC,EAFAC,GAAe,EAGfC,KACJjrB,KAAKkrB,mBAAgB1E,EACrB,IAAI2E,EAAWjlB,SAASgT,EAAIhQ,aAAa,cAAe,IACpDkiB,EAASllB,SAASgT,EAAIhQ,aAAa,YAAa,IAoCpD,IAlCiC,KADjC+hB,EAAajrB,KAAKqrB,eAAerrB,KAAK8mB,WAAW7I,EAAK,EAAGje,KAAK+e,QAASI,QACxDjU,QAAQgO,IACnB+R,EAAWngB,KAAKoO,IAEpB4R,EAAc9qB,KAAKwqB,uBAAuBS,EAAY/M,EAAKhF,IAC3CvY,OAAS,GACrBX,KAAK4qB,eAAiB5qB,KAAKsrB,iBAAiBR,EAAa5R,EAAK+E,EAAKC,EAAKgB,EAAOC,GAC3Enf,KAAKurB,oBAAsBH,EAASprB,KAAK4kB,gBAAgB5kB,KAAKoqB,gBAAgB1Q,IAAIwF,QAClFlf,KAAK4qB,gBAAiB,GAEtB5qB,KAAK4qB,eACL5qB,KAAK6qB,iBAAkB,GAGvB7qB,KAAK4qB,gBAAiB,EACtBG,EAAe/qB,KAAK8pB,wBAAwBmB,EAAY/M,EAAKhF,GAC7DlZ,KAAK6qB,gBAAkBE,EAAapqB,OAAS,GAAIX,KAAKwrB,kBAAkBT,EAAc7R,EAAK+E,EAAKC,EAAKgB,EAAOC,GACxGnf,KAAKurB,oBAAsBJ,EAAWC,IACtCprB,KAAK6qB,iBAAkB,GAEtB7qB,KAAK6qB,kBACN7qB,KAAK6qB,iBAAkB,MAK/BE,EAAe/qB,KAAK8pB,wBAAwBmB,EAAY/M,EAAKhF,GAC7DlZ,KAAK6qB,gBAAkBE,EAAapqB,OAAS,GAAIX,KAAKwrB,kBAAkBT,EAAc7R,EAAK+E,EAAKC,EAAKgB,EAAOC,GACxGnf,KAAKurB,oBAAsBJ,EAAWC,IACtCprB,KAAK6qB,iBAAkB,GAEvB7qB,KAAK6qB,kBACL7qB,KAAK4qB,gBAAiB,KAGzB5qB,KAAK6qB,kBAAoB7qB,KAAK4qB,gBAAkB3M,EAAM,EAAG,CAC1D,IAAIwN,EAASzrB,KAAK4kB,gBAAgB1L,EAAIQ,IAAIuE,IACtCyN,GAAW,EACX1rB,KAAK2rB,WAAaF,IAClBC,GAAW,GAEf,IAAK,IAAI7D,EAAW5J,EAAK4J,GAAY,EAAGA,IAAY,CAChD,IAAIxkB,EAAWrD,KAAK4kB,gBAAgB1L,EAAIQ,IAAIyF,MAAQ,GAAKuM,EAAY1rB,KAAKoqB,gBAAkBlR,EACvF2O,IAAa4D,IAAYtM,EAAQ,EAAI0I,IAAa4D,EAAStM,EAAQ,EAAI0I,IAAa4D,EAAStM,IAC7B,IAAjEnf,KAAK8mB,WAAWe,EAAU3J,EAAKgB,EAAOC,EAAO9b,GAAS1C,SACtD+qB,GAAW,EACX1rB,KAAKkrB,eAAgB,EACrBlrB,KAAK4rB,eAAiBrlB,oBAAkBvG,KAAK4rB,gBAAkB/D,EAAW7nB,KAAK4rB,eAC/E5rB,KAAKurB,kBAAoBrN,IAUrC,OANIle,KAAK6qB,iBAAmB7qB,KAAK4qB,gBAAkB5qB,KAAKkrB,iBACpDF,GAAe,EACXzkB,oBAAkBvG,KAAK4rB,kBACvB5rB,KAAK4rB,eAAiB3N,IAGvB+M,GAEX7O,EAAgBjc,UAAU2rB,oBAAsB,SAAUC,EAAS5M,GAG/D,IAAK,IAFD6M,GAAmB,EACnBC,KACKhrB,EAAI,EAAGA,EAAI8qB,EAAQnrB,OAAQK,IAChC,GAAI8qB,EAAQ9qB,EAAI,GAAK8qB,EAAQ9qB,IAAO,GAAK8qB,EAAQ9qB,EAAI,GAAK8qB,EAAQ9qB,KAAQ,GAWtE,GAVAgrB,EAAkBlhB,KAAKghB,EAAQ9qB,IACjB,IAAVke,GACA8M,EAAkBlhB,KAAKghB,EAAQ9qB,EAAI,IAEnCA,IAAM8qB,EAAQnrB,OAAS,IACvBqrB,EAAkBlhB,KAAKghB,EAAQ9qB,EAAI,IAC/BgrB,EAAkBrrB,OAASue,GAC3B8M,EAAkB5Q,QAAQ,IAG9B4Q,EAAkBrrB,SAAWue,EAM7B,OALA6M,GAAmB,EACnB/rB,KAAKurB,kBAAoBS,EAAkB3B,KAAK,SAAUC,EAAMlW,GAAY,OAAOkW,EAAOlW,IAAa,GACnGpU,KAAKurB,kBAAoB,IACzBvrB,KAAKurB,kBAAoB,GAEtBQ,OAIXC,KAIR,OAAOD,GAEX5P,EAAgBjc,UAAUmrB,eAAiB,SAAUY,GAEjD,IAAK,IADDlC,KACK/oB,EAAI,EAAGA,EAAIirB,EAAKtrB,OAAQK,IAC7B+oB,EAAYjf,KAAKmhB,EAAKjrB,IAE1B,OAAO+oB,GAEX5N,EAAgBjc,UAAUorB,iBAAmB,SAAUY,EAAQhT,EAAK+E,EAAKC,EAAKgB,EAAOC,GACjF,IAAIgN,EACJ,GAAc,IAAVjN,GAAyB,IAAVC,GAAe+M,EAAOvrB,OAAS,EAC9CX,KAAKurB,kBAAoBW,EAAO,GAChCC,GAAmB,OAElB,GAAIjN,EAAQ,GAAe,IAAVC,EAClBgN,EAAmBnsB,KAAK6rB,oBAAoBK,EAAQhN,QAEnD,GAAIC,EAAQ,EACb,GAAc,IAAVD,EAAa,CACb,IAAIkN,OAAU,EAId,GAHIF,EAAOvrB,QAAU,IACjByrB,GAAU,GAEVA,EACA,IAAK,IAAIprB,EAAI,EAAGA,EAAIkrB,EAAOvrB,OAAQK,IAAK,CAEpC,GAA8B,IADThB,KAAK8mB,WAAW7I,EAAKiO,EAAOlrB,GAAIke,EAAOC,EAAOnf,KAAKoqB,iBACrDzpB,OAGf,OAFAX,KAAKurB,kBAAoBW,EAAOlrB,GAChCmrB,GAAmB,EAInBA,GAAmB,QAM/BA,EAAmBnsB,KAAKqsB,WAAWH,EAAQhN,EAAOjB,EAAKkB,EAAOjG,GAGtE,OAAOiT,GAEXhQ,EAAgBjc,UAAUsrB,kBAAoB,SAAUM,EAAS5S,EAAK+E,EAAKC,EAAKgB,EAAOC,GACnF,IAAImN,EACJ,GAAc,IAAVpN,GAAyB,IAAVC,GAAe2M,EAAQnrB,OAAS,EAC/CX,KAAKurB,kBAAoBO,EAAQ,GACjCQ,GAAoB,OAEnB,GAAIpN,EAAQ,GAAe,IAAVC,EAClBmN,EAAoBtsB,KAAK6rB,oBAAoBC,EAAS5M,QAErD,GAAIC,EAAQ,EACb,GAAc,IAAVD,EAAa,CACb,IAAIkN,OAAU,EAId,GAHIN,EAAQnrB,QAAU,IAClByrB,GAAU,GAEVA,EACA,IAAK,IAAIprB,EAAI,EAAGA,EAAI8qB,EAAQnrB,OAAQK,IAAK,CAErC,IAAK,IADDurB,EAAiBvsB,KAAK8mB,WAAW7I,EAAK6N,EAAQ9qB,GAAIke,EAAOC,EAAOnf,KAAKoqB,iBAChEoC,EAAY,EAAGA,EAAYD,EAAe5rB,OAAQ6rB,IACnDtmB,SAASgT,EAAIhQ,aAAa,YAAa,MAAQ4iB,EAAQ9qB,IACvDurB,EAAenR,OAAOmR,EAAerhB,QAAQqhB,EAAeC,IAAa,GAGjF,GAA8B,IAA1BD,EAAe5rB,OAGf,OAFA2rB,GAAoB,EACpBtsB,KAAKurB,kBAAoBO,EAAQ9qB,GAC1BsrB,EAGPA,GAAoB,QAMhCA,EAAoBtsB,KAAKqsB,WAAWP,EAAS5M,EAAOjB,EAAKkB,EAAOjG,GAGxE,OAAOoT,GAEXnQ,EAAgBjc,UAAUmsB,WAAa,SAAUP,EAAS5M,EAAOjB,EAAKkB,EAAOjG,GAGzE,IAAK,IAFDoT,EACAG,KACKrmB,EAAI,EAAGA,EAAI0lB,EAAQnrB,OAAQyF,IAAK,CAErC,GADcpG,KAAK6rB,oBAAoBC,EAAS5M,GACnC,CACT,IAAIwN,KAGJ,GAFAA,EAAW5hB,KAAK9K,KAAKoqB,iBACrBsC,EAAW5hB,KAAKoO,GACgB,IAA5BuT,EAAiB9rB,OAGjB,OAFA2rB,GAAoB,EACpBtsB,KAAKurB,kBAAoBvrB,KAAKurB,kBACvBe,EAGPA,GAAoB,GAIhC,OAAOA,GAEXnQ,EAAgBjc,UAAUysB,mBAAqB,SAAUC,GAsBrD,IAAK,IApBD7C,EADA0C,KAEAI,EAAU,SAAU5O,GACpB8L,KACA6C,EAAe7iB,QAAQ,SAAU1G,GACzBA,GAAWA,EAAQ6F,aAAa,cAAgB+U,EAAIpJ,YACpDkV,EAAYjf,KAAKzH,KAUzB,IAAK,IAPDypB,EAAU,SAAU9E,GACpB+B,EAAYhgB,QAAQ,SAAUkY,GACtBA,GAAQA,EAAK/Y,aAAa,cAAgB8e,EAAOnT,YACjD4X,EAAiB3hB,KAAKmX,MAIzB+F,EAAS+E,EAAOhO,QAAU,EAAGiJ,GAAU,EAAGA,IAC/C8E,EAAQ9E,IAGZ+E,EAAS/sB,KACJie,EAAMje,KAAKoc,KAAO,EAAG6B,GAAO,EAAGA,IACpC4O,EAAQ5O,GAEZ,OAAOwO,GAEXtQ,EAAgBjc,UAAU8sB,cAAgB,SAAUJ,EAAgBxK,EAAYlJ,GAC5E,IAAI5V,EAAQtD,KAmBZ,OAlBKA,KAAKsgB,aACNtgB,KAAK6gB,cAET+L,EAAe7iB,QAAQ,SAAU1G,GAC7BC,EAAM8mB,gBAAkB/mB,EACxB,IAAIuf,EAAQtf,EAAMshB,gBAAgBvhB,EAAQqW,IACtCuT,GAAU3pB,EAAMqnB,oBAAoB/H,EAAM3E,IAAK2E,EAAM1E,IAAK0E,EAAMzD,MAAOyD,EAAM1D,MAAOhG,GACxF,GAAI0J,EAAM1D,MAAQ,GAAK+N,EACnB,IAAK,IAAIpF,EAAWjF,EAAM3E,IAAK4J,EAAWzF,EAAWnE,IAAMmE,EAAWjD,MAAO0I,IAAY,CACpEvkB,EAAMwjB,WAAWe,EAAUjF,EAAM1E,IAAK0E,EAAM1D,MAAO0D,EAAMzD,MAAO9b,GACtE0G,QAAQ,SAAUkY,GACrB2K,EAAe1hB,QAAQ+W,IAAS,GAChC2K,EAAexR,OAAOwR,EAAe1hB,QAAQ+W,GAAO,QAMjE2K,GAEXzQ,EAAgBjc,UAAUgtB,YAAc,SAAUtK,EAAOvf,GACrD,IAAIyjB,EAAa9mB,KAAK8mB,WAAWlE,EAAM3E,IAAK2E,EAAM1E,IAAK0E,EAAM1D,MAAO0D,EAAMzD,MAAOnf,KAAKsgB,aACtF,IAAKtgB,KAAKsgB,aAAetgB,KAAKmtB,gBAAkBntB,KAAKuc,cAAgBvc,KAAKsc,gBACtE,OAAOwK,EAEX,GAAI9mB,KAAKsgB,aAAetgB,KAAK2d,YAAc3d,KAAKotB,YAC5C,IAAK,IAAIpsB,EAAI,EAAGA,EAAIhB,KAAK+d,OAAOpd,OAAQK,IAAK,CACzC,IAAIqsB,EAAY5kB,SAASiZ,eAAe1hB,KAAK+d,OAAO/c,GAAG0Y,IACvD,GAAI2T,IAAcrtB,KAAKsgB,YAAvB,CAGA,IAAIuH,EAAW7nB,KAAKotB,YAAYC,EAAU3T,IAAIuE,IAC1C6B,EAAW9f,KAAKotB,YAAYC,EAAU3T,IAAIwE,IAC9Cle,KAAKof,iBAAiBiO,EAAWxF,EAAU/H,GAC3C9f,KAAKge,oBAAoBhe,KAAK4kB,gBAAgByI,EAAU3T,KAAOuE,IAAK4J,EAAU3J,IAAK4B,IACnF9f,KAAKif,eAAgBjW,OAASkV,IAAK4B,EAASjL,WAAYoJ,IAAK4J,EAAShT,aAAgBwY,GACtFrtB,KAAKyhB,sBAWb,OARAzhB,KAAKid,YAAcjd,KAAKstB,WACxBxG,EAAa9mB,KAAK8mB,WAAWlE,EAAM3E,IAAK2E,EAAM1E,IAAK0E,EAAM1D,MAAO0D,EAAMzD,MAAOnf,KAAKsgB,aAClFtgB,KAAK6gB,cACL7gB,KAAKyhB,qBACDzhB,KAAKutB,gBAAkBvtB,KAAKutB,eAAe5sB,OAAS,IAAqD,IAAhDmmB,EAAW5b,QAAQlL,KAAKutB,eAAe,KAChGvtB,KAAKotB,YAAYptB,KAAKutB,eAAe,GAAG7T,IAAIuE,MAAQ2E,EAAM3E,KAC1D6I,EAAWhc,KAAK9K,KAAKutB,eAAe,IAEjCzG,GAEX3K,EAAgBjc,UAAUstB,iBAAmB,SAAU1G,EAAYzjB,GAG/D,IAAK,IAFDoqB,GAAY,EACZC,EAAW1tB,KAAK4kB,gBAAgBvhB,EAAQqW,IACnCiU,EAAQ,EAAGA,EAAQ7G,EAAWnmB,OAAQgtB,IAE3C,IAAK,IADDC,EAAe5tB,KAAK4kB,gBAAgBkC,EAAW6G,GAAOjU,IACjD1Y,EAAI,EAAGA,EAAI0sB,EAASvO,MAAOne,IAAK,CACrC,IAAI6sB,KACJA,EAAW/iB,KAAKzH,GAChBwqB,EAAW/iB,KAAKgc,EAAW6G,IAG3B,GADY3tB,KAAK8mB,WAAW4G,EAASzP,IAAMjd,EAAG4sB,EAAa1P,IAAK0P,EAAa1O,MAAO0O,EAAazO,MAAO0O,GAC1FltB,OAAS,EAEnB,OADA8sB,GAAY,GACL,EAOnB,OAAOA,GAEXtR,EAAgBjc,UAAU4tB,iBAAmB,SAAUhH,EAAYzjB,EAAS+e,GACxE,IAAKpiB,KAAKsgB,aAAqC,IAAtBwG,EAAWnmB,OAChC,OAAO,EAEX,IAAIotB,EACAC,EAAa9nB,SAAS4gB,EAAW,GAAG5d,aAAa,YAAa,IAOlE,GANIlJ,KAAK2rB,SAAWqC,EAChBD,EAAY,EAEP/tB,KAAK2rB,SAAWqC,IACrBD,EAAY,IAEX/tB,KAAKwtB,iBAAiB1G,EAAYzjB,GACnC,OAAO,EAGX,IAAK,IADD4qB,GAAc,EACTC,EAAS,EAAGA,EAASpH,EAAWnmB,OAAQutB,IAC7C,GAAIpH,EAAWnmB,QAAU,GAAKX,KAAKotB,YAAYptB,KAAKsgB,YAAY5G,IAAIuE,MAAQje,KAAK2d,UAAU3d,KAAKsgB,YAAY5G,IAAIuE,IAC5G,OAAO,EAMf,IAAK,IAHDkQ,EAA2B,IAAdJ,EACb/tB,KAAK4kB,gBAAgB5kB,KAAKsgB,YAAY5G,IAAIuE,IAAMje,KAAK4kB,gBAAgB5kB,KAAKsgB,YAAY5G,IAAIyF,MACxFnf,KAAK2rB,SACFgC,EAAQ,EAAGA,EAAQ7G,EAAWnmB,OAAQgtB,IAAS,CACpD,IAAIS,EAAkBpuB,KAAK4kB,gBAAgBkC,EAAW6G,GAAOjU,IACzD2U,EAAkBruB,KAAK4kB,gBAAgBvhB,EAAQqW,IAC/C+P,KACJ,GAA8B,IAA1B2E,EAAgBjP,MAChBsK,EAAO3e,KAAKgc,EAAW6G,SAEtB,GAAIS,EAAgBjP,MAAQ,EAC7B,GAAkB,IAAd4O,GAAmBM,EAAgBpQ,MAASje,KAAKotB,YAAYgB,EAAgB1U,IAAIuE,IAAMmQ,EAAgBjP,MAAQ,EAC/GsK,EAAO3e,KAAKgc,EAAW6G,QAEtB,CAAA,GAAkB,IAAdI,GAAmBM,EAAgBpQ,MAASje,KAAKotB,YAAYgB,EAAgB1U,IAAO,IAIzF,OAAO,EAHP+P,EAAO3e,KAAKgc,EAAW6G,IAM3BS,EAAgBjP,OAASkP,EAAgBlP,OACzCsK,EAAO3e,KAAKgc,EAAW6G,IAI3B,GADgB3tB,KAAK8mB,WAAWqH,EAAYC,EAAgBlQ,IAAKkQ,EAAgBlP,MAAOkP,EAAgBjP,MAAOsK,GAC7F9oB,OAAS,EAEvB,OADAstB,GAAc,EAIVN,IAAU7G,EAAWnmB,OAAS,IAC9BstB,GAAc,GAK1B,OAAOA,GAEX9R,EAAgBjc,UAAUouB,UAAY,SAAUxH,EAAYzjB,EAAS+e,GACjE,IACI2L,EADAzqB,EAAQtD,KAERuuB,KACJA,EAAgBzjB,KAAKzH,GACrB,IAAI2qB,EAAa9nB,SAAS4gB,EAAW,GAAG5d,aAAa,YAAa,IAC9DlJ,KAAK2rB,SAAWqC,EAChBD,EAAY,EAEP/tB,KAAK2rB,SAAWqC,IACrBD,EAAY,GAEhB,IAAIS,EAAkC,IAAdT,EAAkBC,EAAa5L,EAAWjD,MAAQnf,KAAK2rB,SAC/E3rB,KAAKge,oBAAoBoE,GAAcnE,IAAmB,IAAd8P,EAAkBC,EAAaQ,EAAoB,IAC/F,IAAK,IAAIb,EAAQ,EAAGA,EAAQ7G,EAAWnmB,OAAQgtB,IAC3CY,EAAgBzjB,KAAKgc,EAAW6G,IAChC3tB,KAAKof,iBAAiB0H,EAAW6G,GAAQa,EAAoBxuB,KAAK4kB,gBAAgBkC,EAAW6G,GAAOjU,IAAKwE,KACzGle,KAAKge,oBAAoBhe,KAAK4kB,gBAAgBkC,EAAW6G,GAAOjU,KAAOuE,IAAKuQ,IAC5E1H,EAAW6G,GAAOvf,aAAa,WAAYogB,EAAkB3Z,YAEjExR,EAAQ+K,aAAa,WAAYgU,EAAWnE,IAAIpJ,YAChD7U,KAAKof,iBAAiBpf,KAAKskB,UAAWlC,EAAWnE,IAAKmE,EAAWlE,KACjE,IAAK,IAAIld,EAAI,EAAGA,EAAIhB,KAAK+d,OAAOpd,OAAQK,IACpChB,KAAK2d,UAAU3d,KAAK+d,OAAO/c,GAAG0Y,KAAQuE,IAAKje,KAAK+d,OAAO/c,GAAGid,IAAKC,IAAKle,KAAK+d,OAAO/c,GAAGkd,KAEvFle,KAAK2rB,SAAWvJ,EAAWnE,IAC3Bje,KAAKyhB,qBACL8M,EAAgBxkB,QAAQ,SAAUkY,GAC9B3e,EAAM8pB,YAAYnL,EAAKvI,IAAMpW,EAAMqa,UAAUsE,EAAKvI,IAElD,IAAK,IADD+U,EAAYnrB,EAAMshB,gBAAgB3C,EAAKvI,IAClC1Y,EAAI,EAAGA,EAAIsC,EAAM2Z,YAAYtc,OAAQK,IAC1C,GAAKsC,EAAM2Z,YAAYjc,GAGvB,IAAK,IAAIoF,EAAI,EAAGA,EAAI9C,EAAM2Z,YAAYjc,GAAGL,OAAQyF,IACzC9C,EAAM2Z,YAAYjc,GAAGoF,KAAO6b,IAC5B3e,EAAM2Z,YAAYjc,GAAGoF,QAAKogB,GAIjCljB,EAAM2Z,YAAYwR,EAAUxQ,OAC7B3a,EAAM2Z,YAAYwR,EAAUxQ,SAEhC3a,EAAM2Z,YAAYwR,EAAUxQ,KAAKwQ,EAAUvQ,KAAO+D,EAClD3e,EAAMgqB,WAAahqB,EAAM2Z,eAGjCd,EAAgBjc,UAAUqgB,kBAAoB,SAAUld,EAAS+e,GAC7DpiB,KAAKsd,oBACL,IAAIoR,KAEAC,KAQJ,IALID,EADA1uB,KAAKsgB,aAAetgB,KAAKse,iBACVte,KAAKktB,YAAY9K,EAAY/e,GAG7BrD,KAAK8mB,WAAW1E,EAAWnE,IAAKmE,EAAWlE,IAAKkE,EAAWlD,MAAOkD,EAAWjD,MAAO9b,IAEtF1C,OAAS,EAItB,GAHA+tB,EAAe1uB,KAAK2sB,mBAAmB+B,GACvCA,EAAe1uB,KAAKgtB,cAAc0B,EAActM,EAAY/e,IACvCkD,oBAAkBvG,KAAK2rB,WAAY3rB,KAAK8tB,iBAAiBY,EAAcrrB,EAAS+e,GAEjGpiB,KAAKsuB,UAAUI,EAAcrrB,EAAS+e,QAGtC,IAAK,IAAIphB,EAAI,EAAGA,EAAI0tB,EAAa/tB,OAAQK,IAAK,CAC1C,IAAI4hB,EAAQ5iB,KAAK4kB,gBAAgB8J,EAAa1tB,GAAG0Y,IAKjD,GAJA1Z,KAAKoqB,gBAAkBsE,EAAa1tB,GACpChB,KAAK4rB,eAAiB,KACtB5rB,KAAKurB,kBAAoB,KACJvrB,KAAK2qB,oBAAoB/H,EAAM3E,IAAK2E,EAAM1E,IAAK0E,EAAMzD,MAAOyD,EAAM1D,MAAO7b,KACnEkD,oBAAkBvG,KAAKurB,mBAAoB,CAClEvrB,KAAKof,iBAAiBsP,EAAa1tB,GAAIhB,KAAK4rB,eAAgB5rB,KAAKurB,mBACjEvrB,KAAK2d,UAAW+Q,EAAa1tB,GAAK,KAAOid,IAAKje,KAAK4rB,eAAgB1N,IAAKle,KAAKurB,mBAC7E,IAAIviB,GACAsd,YACIrI,IAAKje,KAAK4rB,eAAe/W,WACzBqJ,IAAKle,KAAKurB,kBAAkB1W,aAMpC,GAHA7U,KAAKif,cAAcjW,EAAO0lB,EAAa1tB,IACvChB,KAAKge,oBAAoB4E,GAAS1E,IAAKle,KAAKurB,kBAAmBtN,IAAKje,KAAK4rB,iBACzE5rB,KAAK4rB,eAAiB,KAClB5qB,EAAI0tB,EAAa/tB,OACjB,cAIJguB,EAAgB7jB,KAAK4jB,EAAa1tB,IAKlD,GAAI2tB,EAAgBhuB,OAAS,EAAG,CAC5B,IAAIiuB,EAAU5uB,KACd2uB,EAAgB5kB,QAAQ,SAAU8kB,IACiB,IAA3CD,EAAQzR,eAAejS,QAAQ2jB,IAC/BD,EAAQzR,eAAerS,KAAK+jB,KAGhC7uB,KAAKmd,iBAA4D,IAA1Cnd,KAAKmd,eAAejS,QAAQ7H,IACnDrD,KAAKmd,eAAe/B,OAAOpb,KAAKmd,eAAejS,QAAQ7H,GAAU,GAEjEsrB,EAAgBhuB,OAAS,IACzBX,KAAK8uB,gBAAgB1M,EAAWnE,IAAKje,KAAKmd,eAAgB9Z,GAC1DrD,KAAK+uB,2BAGR/uB,KAAKgvB,YACNhvB,KAAK6gB,cAET7gB,KAAKsf,kBACLtf,KAAK0nB,mBAETvL,EAAgBjc,UAAU6uB,wBAA0B,WAChD,IAAK,IAAI/tB,EAAI,EAAGA,EAAIhB,KAAK+d,OAAOpd,OAAQK,IACpC,GAAIhB,KAAKsd,iBAAiBtd,KAAK+d,OAAO/c,GAAG0Y,KAAoD,OAA7C1Z,KAAKsd,iBAAiBtd,KAAK+d,OAAO/c,GAAG0Y,IAAc,CAC/F1Z,KAAKmd,gBAAkBnd,KAAKsd,iBAAiBtd,KAAK+d,OAAO/c,GAAG0Y,IAAIR,KAChE,IAAI3Y,EAAMP,KAAK+d,OAAO/c,GAAG0Y,GACzB1Z,KAAK8uB,gBAAgB9uB,KAAKsd,iBAAiB/c,GAAK0d,IAAKje,KAAKmd,eAAgBnd,KAAKsd,iBAAiB/c,GAAK0uB,UAIjH9S,EAAgBjc,UAAUgvB,uBAAyB,SAAUjN,GACzD,IAAK,IAAI0L,EAAQ,EAAGA,EAAQluB,OAAOmF,KAAK5E,KAAKsd,kBAAkB3c,OAAQgtB,IACnE3tB,KAAKsd,iBAAiB2E,EAAKvI,IAAM,MAGzCyC,EAAgBjc,UAAU4uB,gBAAkB,SAAU7Q,EAAK/E,EAAK+V,GAC5D,GAAKA,EAAL,CAGA,IAAIE,EAAWjpB,SAAS+oB,EAAO/lB,aAAa,cAAe,IACvDkmB,EAASlpB,SAAS+oB,EAAO/lB,aAAa,YAAa,IACvDlJ,KAAKod,qBAAsBpd,KAAKmd,gBAAmBnd,KAAKqvB,eAAiBrvB,KAAKmd,gBAC9E,IAAK,IAAInc,EAAI,EAAGA,EAAIhB,KAAKod,oBAAoBzc,OAAQK,IAAK,CACtD,GAAwC,IAApChB,KAAKod,oBAAoBzc,OACzB,OAEJ,IAAK,IAAI2uB,EAAM,EAAGA,EAAMtvB,KAAKod,oBAAoBzc,OAAQ2uB,IACrDtvB,KAAKsd,iBAAiBtd,KAAKod,oBAAoBkS,GAAK5V,KAChDR,IAAKlZ,KAAKod,oBAAoBkS,GAC9BrR,IAAKA,EACLgR,OAAQA,GAGhB,IAAId,EAAaiB,EAASD,EACtBI,EAAarpB,SAASlG,KAAKod,oBAAoBpc,GAAGkI,aAAa,cAAe,IAC9EsmB,EAAetpB,SAASlG,KAAKod,oBAAoBpc,GAAGkI,aAAa,YAAa,IAC9EumB,EAAavpB,SAASlG,KAAKod,oBAAoBpc,GAAGkI,aAAa,cAAe,IAC9E4W,OAAW,EACX6O,OAAkB,EAOtB,IANqD,IAAjD3uB,KAAKqd,uBAAuBnS,QAAQ+jB,IACpCjvB,KAAKqd,uBAAuBvS,KAAKmkB,IAEqC,IAAtEjvB,KAAKqd,uBAAuBnS,QAAQlL,KAAKod,oBAAoBpc,KAC7DhB,KAAKqd,uBAAuBvS,KAAK9K,KAAKod,oBAAoBpc,IAE1DuuB,EAAa,GAAKE,EAAa,EAAG,CAClC,IAAIC,EAAsB1vB,KAAK4kB,gBAAgB5kB,KAAKod,oBAAoBpc,GAAG0Y,IAC3EoG,EAAW4P,EAAoBxR,IAE/B,IAAK,IADDyR,EAAQlnB,SAASiZ,eAAegO,EAAoBhW,IAC/CkW,EAAIF,EAAoBzR,IAAK2R,EAAIR,EAASD,EAAUS,IAAK,CAC9D5vB,KAAKgvB,YAAa,EAClBhvB,KAAKge,oBAAoB0R,GAAuBzR,IAAKyR,EAAoBzR,IAAM,IAC/E0R,EAAMvhB,aAAa,WAAYshB,EAAoBzR,IAAIpJ,YACvD7U,KAAKof,iBAAiBuQ,EAAOD,EAAoBzR,IAAK6B,GACtD9f,KAAKkvB,uBAAuBS,GAC5B3vB,KAAK2d,UAAWgS,EAAQ,KAAO1R,IAAKyR,EAAoBzR,IAAKC,IAAK4B,GAClE,IAAIsC,EAAapiB,KAAK4kB,gBAAgB+K,EAAMjW,IAC5C1Z,KAAKge,oBAAoBoE,GAAclE,IAAK4B,EAAU7B,IAAKyR,EAAoBzR,MAC/E,IAAI4R,EAAW3pB,SAASypB,EAAMzmB,aAAa,YAAa,IACpDkiB,EAASllB,SAASypB,EAAMzmB,aAAa,YAAa,IAClDgW,EAAQhZ,SAASypB,EAAMzmB,aAAa,cAAe,IACnDiW,EAAQjZ,SAASypB,EAAMzmB,aAAa,cAAe,IACnD4mB,KACJA,EAAgBhlB,KAAK6kB,GACrBG,EAAgBhlB,KAAKmkB,GACrBN,EAAkB3uB,KAAK8mB,WAAW+I,EAAUzE,EAAQlM,EAAOC,EAAO2Q,GAC9D9vB,KAAKsgB,cAA8D,IAA/CqO,EAAgBzjB,QAAQlL,KAAKsgB,cACjDqO,EAAgBvT,OAAOuT,EAAgBzjB,QAAQlL,KAAKsgB,aAAc,GAEtEtgB,KAAK+vB,eAAepB,EAAiBvD,EAAQyE,EAAUF,GAE3D3vB,KAAKgvB,YAAa,MAEjB,CACGhvB,KAAKmtB,iBACLntB,KAAKmtB,gBAAiB,GAE1BntB,KAAKod,oBAAoBpc,GAAGoN,aAAa,WAAY+f,EAAWtZ,YAChE,IAAIgZ,KACJA,EAAW/iB,KAAK9K,KAAKod,oBAAoBpc,IACzC6sB,EAAW/iB,KAAKmkB,GAChBN,EAAkB3uB,KAAK8mB,WAAWqH,EAAYqB,EAAcC,EAAYF,EAAY1B,GAChF7tB,KAAKsgB,cAA8D,IAA/CqO,EAAgBzjB,QAAQlL,KAAKsgB,cACjDqO,EAAgBvT,OAAOuT,EAAgBzjB,QAAQlL,KAAKsgB,aAAc,GAEtER,EAAW5Z,SAASlG,KAAKod,oBAAoBpc,GAAGkI,aAAa,YAAa,IAC1ElJ,KAAKof,iBAAiBpf,KAAKod,oBAAoBpc,GAAImtB,EAAYrO,GAC/D9f,KAAKkvB,uBAAuBlvB,KAAKod,oBAAoBpc,IACrDhB,KAAK2d,UAAW3d,KAAKod,oBAAoBpc,GAAK,KAAOid,IAAKkQ,EAAYjQ,IAAK4B,GACvEsC,EAAapiB,KAAK4kB,gBAAgB5kB,KAAKod,oBAAoBpc,GAAG0Y,IAClE1Z,KAAKge,oBAAoBoE,GAAclE,IAAK4B,EAAU7B,IAAKkQ,IAC3DnuB,KAAK+vB,eAAepB,EAAiB7O,EAAUqO,EAAYnuB,KAAKod,oBAAoBpc,QAIhGmb,EAAgBjc,UAAU6vB,eAAiB,SAAUpB,EAAiB7O,EAAUqO,EAAY6B,GACxF,IAAI5N,EAAapiB,KAAK4kB,gBAAgBoL,EAAMtW,IAE5C,GADA1Z,KAAKge,oBAAoBoE,GAAcnE,IAAKkQ,EAAYjQ,IAAK4B,IACzD6O,EAAgBhuB,OAAS,EAAG,CAC5B,IAAIsvB,EAAUjwB,KACdA,KAAKmd,kBACLnd,KAAKqvB,gBAAiB,EACtBV,EAAgB5kB,QAAQ,SAAU8kB,GAC9BoB,EAAQ9S,eAAerS,KAAK+jB,KAGhC,IAAK,IADDqB,EAAqBhqB,SAAS8pB,EAAM9mB,aAAa,YAAa,IACzDqD,EAAI,EAAGA,EAAIvM,KAAKmd,eAAexc,OAAQ4L,IAC5CvM,KAAK8uB,gBAAgBoB,EAAoBlwB,KAAKmd,eAAgB6S,GAElEhwB,KAAKqvB,gBAAiB,MAErB,CAID,GAHKrvB,KAAKmtB,gBACNntB,KAAK6gB,cAEL7gB,KAAKqd,uBAAuB1c,OAAS,EAoBrC,IAAK,IAnBDwvB,EAAU,SAAUtwB,GACpB,IAAIuwB,EAASlqB,SAASmqB,EAAOhT,uBAAuBxd,GAAGqJ,aAAa,YAAa,IAC7EonB,EAAapqB,SAASmqB,EAAOhT,uBAAuBxd,GAAGqJ,aAAa,YAAa,IACjFgW,EAAQhZ,SAASmqB,EAAOhT,uBAAuBxd,GAAGqJ,aAAa,cAAe,IAC9EiW,EAAQjZ,SAASmqB,EAAOhT,uBAAuBxd,GAAGqJ,aAAa,cAAe,IAC9EqnB,OAAmB,EACvBA,EAAmBF,EAAOvJ,WAAWsJ,EAAQE,EAAYpR,EAAOC,EAAOkR,EAAOhT,wBAC1EgT,EAAO/P,cAAiE,IAAlDiQ,EAAiBrlB,QAAQmlB,EAAO/P,cACtDiQ,EAAiBnV,OAAOmV,EAAiBrlB,QAAQmlB,EAAO/P,aAAc,GAE1E,IAAIkQ,EAAQH,EACZE,EAAiBxmB,QAAQ,SAAU8kB,GAC/B2B,EAAMrT,eAAerS,KAAK+jB,KAE1B0B,EAAiB5vB,OAAS,GAC1B0vB,EAAOvB,gBAAgBsB,EAAQC,EAAOlT,eAAgBkT,EAAOhT,uBAAuBxd,KAGxFwwB,EAASrwB,KACJH,EAAI,EAAGA,EAAIG,KAAKqd,uBAAuB1c,OAAQd,IACpDswB,EAAQtwB,GAGhBG,KAAKqd,4BAGblB,EAAgBjc,UAAUkoB,oBAAsB,SAAU5I,GACtD,IAAK,IAAIxe,EAAI,EAAGA,EAAIwe,EAAc7e,OAAQK,IAGtC,IAAK,IADDyvB,EADUjR,EAAcxe,GACEiP,iBAAiB,aACtCygB,EAAM,EAAGA,EAAMD,EAAgB9vB,OAAQ+vB,IAC5CzmB,SAAOwmB,EAAgBC,KAInCvU,EAAgBjc,UAAUsgB,WAAa,SAAUxD,GAC7C,IAAK,IAAIhc,EAAI,EAAGA,EAAIgc,EAAgBrc,OAAQK,IAAK,CAC7C,IAAIqC,EAAU2Z,EAAgBhc,GAC1B2vB,EAAe3T,EAAgBhc,GAAGwJ,cAAc,sBAChDxK,KAAK2gB,eACD3gB,KAAK4wB,iBAAmBvtB,EAAQ4M,iBAAiBjQ,KAAK4wB,iBAAiB,IACvEnpB,YAAUpE,EAAQ4M,iBAAiBjQ,KAAK4wB,iBAAiB,KAhvD7D,gBAmvDA5wB,KAAKsjB,eACLtjB,KAAKmgB,aAAengB,KAAKwe,mBACzBxe,KAAK6wB,iBAAiBxtB,EAASstB,KAI3CxU,EAAgBjc,UAAU2wB,iBAAmB,SAAU3X,EAAK4X,GACxD9wB,KAAK4d,iBAAmB5d,KAAK+wB,iBAC7B,IAAK,IAAI3qB,EAAI,EAAGA,EAAIpG,KAAK4d,iBAAiBjd,OAAQyF,IAAK,CACnD,IAAI4qB,EAAUhxB,KAAK0N,cAAc,QAC7BujB,OAAgB,EACpBH,EAAUnjB,YAAYqjB,GAGlBC,EAF6B,WAA7BjxB,KAAK4d,iBAAiBxX,IAAgD,WAA7BpG,KAAK4d,iBAAiBxX,IAClC,YAA7BpG,KAAK4d,iBAAiBxX,IAAiD,YAA7BpG,KAAK4d,iBAAiBxX,GAzvDnE,WACA,WA8vDDqB,YAAUupB,IAAWC,EAAejxB,KAAK4d,iBAAiBxX,GArwDzD,eAwwDT+V,EAAgBjc,UAAU6f,gBAAkB,SAAU1c,EAAS+e,GAC3D,IAAIpZ,GACAA,OACIkW,MAAOkD,EAAWlD,MAAMrK,WACxBsK,MAAOiD,EAAWjD,MAAMtK,WACxBiO,SAAUV,EAAWU,SAASjO,WAC9BkO,SAAUX,EAAWW,SAASlO,WAC9BmO,SAAWzc,oBAAkB6b,EAAWY,eAA6CwD,EAAjCpE,EAAWY,SAASnO,WACxEoO,SAAW1c,oBAAkB6b,EAAWa,eAA6CuD,EAAjCpE,EAAWa,SAASpO,WACxEoJ,IAAKmE,EAAWnE,IAAIpJ,WACpBqJ,IAAKkE,EAAWlE,IAAIrJ,aAG5B7U,KAAKif,cAAcjW,EAAO3F,IAE9B8Y,EAAgBjc,UAAUgpB,gBAAkB,SAAU9G,GAClD,IAEI6G,EACAiI,EAHAC,EAAanxB,KAAKilB,cAAc,GAChCmM,EAAYpxB,KAAKilB,cAAc,GAenC,OAXIgE,EADA7G,GAAqC,oBAA0C,iBAAtBA,EAAgB,OAAkBA,EAAWlD,MAAQ,EAChGkD,EAAWlD,MAAQkS,GAAchP,EAAWlD,MAAQ,GAAKlf,KAAKuhB,YAAY,GAG3E6P,EAGbF,EADA9O,GAAsC,oBAAYA,EAAWjD,MAAQ,GAAmC,iBAAtBiD,EAAgB,MACnFA,EAAWjD,MAAQgS,GAAe/O,EAAWjD,MAAQ,GAAKnf,KAAKuhB,YAAY,GAG5E3W,aAAWumB,IAErBD,EAAajI,IAEzB9M,EAAgBjc,UAAUmxB,uBAAyB,SAAUlN,GACzD,IACImN,EAAaprB,SAASie,EAAK9gB,QAAQ2D,MAAMuO,IAAK,IAC9Cgc,EAAcrrB,SAASie,EAAK9gB,QAAQ2D,MAAMsO,KAAM,IAIpD,OAHUP,KAAK8C,MAAMyZ,GAActxB,KAAKilB,cAAc,GAAKjlB,KAAKuhB,YAAY,KAClExM,KAAK8C,MAAM0Z,GAAevxB,KAAKilB,cAAc,KAAMjlB,KAAKuhB,YAAY,OAIlFpF,EAAgBjc,UAAU0gB,sBAAwB,SAAU4Q,GAExD,IAAK,IADDluB,EAAQtD,KACHgB,EAAI,EAAGA,EAAIwwB,EAAY7wB,OAAQK,IAAK,CACzC,IAAImhB,EAAcqP,EAAYxwB,GAE1BhB,KAAKyxB,QAAU,IAAIC,YAAUvP,GACzBzO,gBAAgB,EAChBsc,OAAO,EACP2B,SAAU3xB,KAAKqD,QACfuuB,cAAc,EACdC,OAAQ7xB,KAAK4wB,gBAAkB5wB,KAAK4wB,gBAAkB,WACtDkB,MAAO,YACPC,UAAW/xB,KAAKgyB,gBAAgB5hB,KAAKpQ,MACrCiyB,SAAU,SAAU9N,GAChB,IAAIvB,EAAQtf,EAAMshB,gBAAgBthB,EAAMgd,YAAY5G,IAChDpW,EAAM0jB,cACN1jB,EAAMwjB,WAAWlE,EAAM3E,IAAK2E,EAAM1E,IAAK0E,EAAM1D,MAAO0D,EAAMzD,MAAO7b,EAAMgd,aAAa3f,OAAS,GAC7F2C,EAAM4uB,kBAAkB/N,GACxB7gB,EAAM8b,iBAAiB9b,EAAMgd,YAAasC,EAAM3E,IAAK2E,EAAM1E,KAC3D5a,EAAMid,kBAAkBjd,EAAMgd,YAAasC,IAG3Ctf,EAAM8b,iBAAiB9b,EAAMgd,YAAasC,EAAM3E,IAAK2E,EAAM1E,KAE/D,IAAIiU,KACJ7uB,EAAMgd,YAAc,KACpB,IAAI2B,EAAO3e,EAAMyjB,aAAa5C,GAC1B7gB,EAAMghB,WACNra,SAAO3G,EAAMghB,WAEjB9c,eAAalE,EAAMD,UAAWuY,IAC9BpU,eAAa2c,EAAK9gB,UAAWwY,IAC7BvY,EAAMghB,UAAY,KAClBH,EAAK9gB,QAAQmB,UAAUsE,OAAO,cAC9B,IAAImV,EAAM3a,EAAM+tB,uBAAuBlN,GAAM,GACzCjG,EAAM5a,EAAM+tB,uBAAuBlN,GAAM,GACzC/B,EAAa9e,EAAMshB,gBAAgBT,EAAK9gB,QAAQqW,IAChDpW,EAAM0jB,cACsG,IAA5G1jB,EAAMwjB,WAAW7I,EAAKC,EAAKkE,EAAWlD,MAAOkD,EAAWjD,MAAO1W,SAASiZ,eAAeO,EAAKvI,KAAK/Y,QACjG2C,EAAM0a,oBAAoB1a,EAAMshB,gBAAgBT,EAAK9gB,QAAQqW,KAAOuE,IAAKA,EAAKC,IAAKA,IACnF5a,EAAMqa,UAAUwG,EAAK9gB,QAAQqW,IAAIuE,IAAMA,EACvC3a,EAAMqa,UAAUwG,EAAK9gB,QAAQqW,IAAIwE,IAAMA,EACvC5a,EAAM2b,eAAgBjW,OAASkV,IAAKA,EAAIrJ,WAAYoJ,IAAKA,EAAIpJ,aAAgBsP,EAAK9gB,SAClFC,EAAMud,gBAGNvd,EAAM0a,oBAAoB1a,EAAMshB,gBAAgBT,EAAK9gB,QAAQqW,KACzDuE,IAAK3a,EAAMqa,UAAUwG,EAAK9gB,QAAQqW,IAAIuE,IACtCC,IAAK5a,EAAMqa,UAAUwG,EAAK9gB,QAAQqW,IAAIwE,MAE1CiG,EAAK9gB,QAAQ+K,aAAa,WAAY9K,EAAMshB,gBAAgBT,EAAK9gB,QAAQqW,IAAIwE,IAAIrJ,YACjFsP,EAAK9gB,QAAQ+K,aAAa,WAAY9K,EAAMshB,gBAAgBT,EAAK9gB,QAAQqW,IAAIuE,IAAIpJ,YACjFvR,EAAMud,eAEV,IAAIuR,EAAgB9uB,EAAMshB,gBAAgBT,EAAK9gB,QAAQqW,IACvDpW,EAAM8b,iBAAiB+E,EAAK9gB,QAAS+uB,EAAcnU,IAAKmU,EAAclU,KACtE5a,EAAMyd,eACNzd,EAAM0d,yBACN,IAAK,IAAIqR,EAAM,EAAGA,EAAM/uB,EAAMya,OAAOpd,OAAQ0xB,IACrC/uB,EAAMya,OAAOsU,GAAKpU,MAAQ3a,EAAMgvB,mBAAmBD,GAAKpU,KACxD3a,EAAMya,OAAOsU,GAAKnU,MAAQ5a,EAAMgvB,mBAAmBD,GAAKnU,KACxDiU,EAAcrnB,KAAKxH,EAAMya,OAAOsU,IAGxC,GAAIF,EAAcxxB,OAAS,EAAG,CAC1B,IAAI4xB,GAAgBJ,cAAeA,GACnC7uB,EAAM8N,QAAQ,SAAUmhB,GAE5BjvB,EAAMkvB,mBAAsB5f,MAAOuR,EAAKvR,MAAOvP,QAAS8gB,EAAK9gB,SAC7DC,EAAM8N,QAAQ,WAAY+S,GAC1B7gB,EAAM+f,eACN/f,EAAM8Y,KAAO9Y,EAAMub,QAAO,GAC1Bvb,EAAMylB,iBACNzlB,EAAMob,kBAEV+T,KAAM,SAAUtO,GACZ7gB,EAAMovB,kBACF9f,MAAOuR,EAAKvR,MACZvP,QAAS8gB,EAAK9gB,QACd/C,OAAQ4jB,UAASC,EAAW,OAAG,aAEnC7gB,EAAM8N,QAAQ,OAAQ9N,EAAMovB,kBAC5BpvB,EAAMqvB,YAAYxO,OAGyB,IAA/CnkB,KAAKud,eAAerS,QAAQlL,KAAKyxB,UACjCzxB,KAAKud,eAAezS,KAAK9K,KAAKyxB,WAM9CtV,EAAgBjc,UAAU6gB,aAAe,WACrC/gB,KAAK0mB,mBACL1mB,KAAKyhB,qBACLzhB,KAAK6gB,eAET1E,EAAgBjc,UAAUwe,eAAiB,WACvC1e,KAAKud,eAAexT,QAAQ,SAAU0nB,GAElCA,EAAQmB,iBAGhBzW,EAAgBjc,UAAU2yB,iBAAmB,SAAU5U,EAAKkB,EAAO2T,GAC3D7U,EAAMkB,GAASnf,KAAKoc,OACpBpc,KAAKoc,KAAOpc,KAAKoc,KAAO0W,EACxB9yB,KAAK+oB,mBAGb5M,EAAgBjc,UAAU8xB,gBAAkB,SAAU7N,GAClD,IAAI4O,EAAW5O,EACfnkB,KAAKoR,QAAQ,YAAa2hB,EAAU,SAAUA,GACtCpgB,cACAogB,EAASjS,WAAWqD,EAAK9gB,WAGjCrD,KAAKsyB,mBAAqBtyB,KAAKgzB,YAAYhzB,KAAK+d,QAChD/d,KAAKsgB,YAAc6D,EAAK9gB,QACxBrD,KAAKotB,YAAc6F,KAAKC,MAAMD,KAAKE,UAAUnzB,KAAKotB,cAClD,IAAIgG,EAAcpzB,KAAK2rB,SAAWzlB,SAASie,EAAK9gB,QAAQ6F,aAAa,YAAa,IAClFlJ,KAAKqzB,SAAWntB,SAASie,EAAK9gB,QAAQ6F,aAAa,YAAa,IAChE,IAAIimB,EAAWjpB,SAASie,EAAK9gB,QAAQ6F,aAAa,cAAe,IACjElJ,KAAK6yB,iBAAiBO,EAAajE,EAAUA,GAC7CnvB,KAAK0e,iBACL1e,KAAKskB,UAAY7b,SAASiF,cAAc,OACxC1N,KAAKskB,UAAU9f,UAAU0C,IAAI,YAC7BlH,KAAKskB,UAAU9f,UAAU0C,IAAI,uBAC7Byb,oBAAS3iB,KAAKskB,WAAagP,SAAY,aACvC7rB,YAAUzH,KAAKqD,UAAWuY,IAC1BnU,YAAU0c,EAAK9gB,UAAWwY,IAC1B7b,KAAKqD,QAAQsK,YAAY3N,KAAKskB,WAC9BtkB,KAAKskB,UAAY7b,SAAS+B,cAAc,aACxCxK,KAAKskB,UAAUtd,MAAMlC,OAAU9E,KAAK4kB,gBAAgBT,EAAK9gB,QAAQqW,IAAIyF,MAAQnf,KAAKohB,SAAS,GAAM,KACjGphB,KAAKskB,UAAUtd,MAAMjC,MAAS/E,KAAK4kB,gBAAgBT,EAAK9gB,QAAQqW,IAAIwF,MAAQlf,KAAKohB,SAAS,GAAM,KAChG,IAAIgR,EAAgBpyB,KAAK4kB,gBAAgBT,EAAK9gB,QAAQqW,IACtD1Z,KAAKof,iBAAiBpf,KAAKskB,UAAW8N,EAAcnU,IAAKmU,EAAclU,MAI3E/B,EAAgBjc,UAAU8yB,YAAc,SAAUO,EAAQjzB,QACvCkmB,IAAXlmB,IACAA,MAEJ,IAAK,IAAIU,EAAI,EAAGA,EAAIuyB,EAAO5yB,OAAQK,IAAK,CAE/BV,EAAOU,KACRV,EAAOU,OAGX,IAAK,IAAI4uB,KAAK2D,EAAOvyB,GACjBV,EAAOU,GAAG4uB,GAAK2D,EAAOvyB,GAAG4uB,GAGjC,OAAOtvB,GAGX6b,EAAgBjc,UAAUyyB,YAAc,SAAUxO,GAC9C,IAAIqP,EACA/H,EACAgI,EACAvV,EAAMuV,EAAUzzB,KAAKqxB,uBAAuBlN,GAAM,GAClDlG,EAAMje,KAAKqxB,uBAAuBlN,GAAM,GAC5C,KAAIjG,EAAM,GAAKD,EAAM,GAArB,CAGAje,KAAKge,oBAAoBhe,KAAK4kB,gBAAgBT,EAAK9gB,QAAQqW,KAAOuE,IAAKA,EAAKC,IAAKA,IACjF,IAAIkE,EAAapiB,KAAK4kB,gBAAgBT,EAAK9gB,QAAQqW,IAGnD,GAFA1Z,KAAK6yB,iBAAiBzQ,EAAWnE,IAAKmE,EAAWjD,MAAO,GACxDnf,KAAK0e,iBACD1e,KAAKgnB,eACLhnB,KAAKif,eAAgBjW,OAASkV,IAAKA,EAAIrJ,WAAYoJ,IAAKA,EAAIpJ,aAAgBsP,EAAK9gB,SACjFrD,KAAKge,oBAAoBhe,KAAK4kB,gBAAgBT,EAAK9gB,QAAQqW,KAAOuE,IAAKA,EAAKC,IAAKA,IACjFsV,EAASxzB,KAAK2d,UAAWwG,EAAK9gB,QAAU,IAAG6a,IAC3CuN,EAASzrB,KAAK2d,UAAWwG,EAAK9gB,QAAU,IAAG4a,IAC3Cje,KAAK2d,UAAWwG,EAAK9gB,QAAU,KAAO4a,IAAKA,EAAKC,IAAKA,GACrDle,KAAKyhB,sBACDzhB,KAAKqzB,WAAaG,GAAUxzB,KAAK2rB,WAAaF,KAC9CzrB,KAAKkyB,kBAAkB/N,GACnBnkB,KAAKqzB,WAAaG,IAClBxzB,KAAK2rB,SAAWF,GAEhBzrB,KAAK2rB,WAAaF,IAClBzrB,KAAKqzB,SAAWG,GAEhBxzB,KAAKgnB,eAAc,CACnBhnB,KAAKsgB,YAAc6D,EAAK9gB,QACxB,IAAIuf,EAAQR,EACZpiB,KAAKutB,eAAiBvtB,KAAK8mB,WAAWlE,EAAM3E,IAAK2E,EAAM1E,IAAK0E,EAAM1D,MAAO0D,EAAMzD,MAAOgF,EAAK9gB,SACvF+e,EAAWlE,KAAOle,KAAKihB,mBACvBjhB,KAAKutB,mBAETvtB,KAAKugB,kBAAkB4D,EAAK9gB,QAAS+e,GACrCpiB,KAAK0mB,oBAIS,IAAtB1mB,KAAKgnB,cACLhnB,KAAKge,oBAAoBhe,KAAK4kB,gBAAgBT,EAAK9gB,QAAQqW,KAAOuE,IAAKA,EAAKC,IAAKA,IAEjFle,KAAK2d,UAAUwG,EAAK9gB,QAAQqW,IAAIuE,MAAQA,GAAOje,KAAK2d,UAAUwG,EAAK9gB,QAAQqW,IAAIwE,MAAQA,IACvFle,KAAKge,oBAAoBhe,KAAK4kB,gBAAgBT,EAAK9gB,QAAQqW,KAAOuE,IAAKA,EAAKC,IAAKA,IACjFle,KAAKif,eAAgBjW,OAASkV,IAAKA,EAAIrJ,WAAYoJ,IAAKA,EAAIpJ,aAAgBsP,EAAK9gB,UAEjFrD,KAAKqzB,WAAaI,IAClBzzB,KAAKqzB,SAAWG,EAChBxzB,KAAK0mB,oBAEJ1mB,KAAKgnB,cACNhnB,KAAKkyB,kBAAkB/N,GAE3BnkB,KAAKooB,oBAAoBpoB,KAAKgd,iBAC9Bhd,KAAKwgB,WAAWxgB,KAAKgd,iBACjBhd,KAAKgnB,eAIb7K,EAAgBjc,UAAU6mB,aAAe,SAAU5C,GAE/C,IAAK,IADDlC,EACKjhB,EAAI,EAAGA,EAAIhB,KAAKgd,gBAAgBrc,OAAQK,IACzChB,KAAKgd,gBAAgBhc,GAAG0Y,MAASyK,EAAK9gB,SACnC8gB,EAAK9gB,QAAQqW,IAAOyK,KACvBlC,EAAOjiB,KAAKgd,gBAAgBhc,IAGpC,OAAOihB,GAEX9F,EAAgBjc,UAAU2pB,SAAW,SAAU5L,EAAK+J,EAAQ0L,IACpDA,GAAkBA,aAAwB9zB,QAC1C8zB,GAAgBA,IAGpB,IADA,IAAIvU,EAAQ,EACLlB,GAAO,GAAG,CAGb,IAFA,IAAIiB,EAAQ,EACRhB,EAAM8J,EACH9J,GAAO,GAAG,CACb,IAAIwL,EAAQ1pB,KAAKid,YAAYgB,GAC7B,GAAIyL,EAAO,CACP,IAAIzH,EAAOyH,EAAMxL,GACjB,GAAI+D,KAAUyR,IACsB,IAAhCA,EAAaxoB,QAAQ+W,KAAiB/b,SAAS+b,EAAK/Y,aAAa,cAAe,KAAOgW,GACpFhZ,SAAS+b,EAAK/Y,aAAa,cAAe,KAAOiW,EACpD,OAAO8C,IAGb/C,IACAhB,IAEJD,IACAkB,EAEN,OAAO,MAGXhD,EAAgBjc,UAAUgyB,kBAAoB,SAAU/N,GACpD,IAAIwP,EACAC,EACAzU,EAAQjZ,SAASie,EAAK9gB,QAAQ6F,aAAa,cAAe,IAC1DgV,EAAMhY,SAASie,EAAK9gB,QAAQ6F,aAAa,YAAa,IACtD+U,EAAM/X,SAASie,EAAK9gB,QAAQ6F,aAAa,YAAa,IACtDgW,EAAQhZ,SAASie,EAAK9gB,QAAQ6F,aAAa,cAAe,IAC1D+f,EAAajpB,KAAKilB,cAAc,GAChC+D,EAAchpB,KAAKilB,cAAc,GACjC1P,EAAc,IAAR0I,EAAY,EAAM,GAAS/X,SAAS8iB,EAAYnU,WAAY,IAAM7U,KAAKuhB,YAAY,IACzFjM,EAAe,IAAR4I,EAAY,EAAM,GAAShY,SAAS+iB,EAAWpU,WAAY,IAAM7U,KAAKuhB,YAAY,IAC7FoS,EAAc3zB,KAAKilB,cAAc,GACjC2O,EAAe5zB,KAAKilB,cAAc,GAClCjlB,KAAKwd,WAAWjI,IAAMvV,KAAKskB,UAAUtd,MAAMuO,IAAMA,EAAM,KACvDvV,KAAKwd,WAAWlI,KAAOtV,KAAKskB,UAAUtd,MAAMsO,KAAOA,EAAO,KAC1DtV,KAAKwd,WAAW1Y,OAAS9E,KAAKskB,UAAUtd,MAAMlC,OAAWqa,EAAQwU,GAAiBxU,EAAQ,GAAKnf,KAAKuhB,YAAY,GAAO,KACvHvhB,KAAKwd,WAAWzY,MAAQ/E,KAAKskB,UAAUtd,MAAMjC,MAAUma,EAAQ0U,GAAkB1U,EAAQ,GAAKlf,KAAKuhB,YAAY,GAAO,MAG1HpF,EAAgBjc,UAAU0kB,gBAAkB,SAAUxG,GAElD,IAAK,IADDyV,EACK7yB,EAAI,EAAGA,EAAIhB,KAAK+d,OAAOpd,OAAQK,IAChChB,KAAK+d,OAAO/c,GAAG0Y,KAAO0E,IACtByV,EAAsB7zB,KAAK+d,OAAO/c,IAG1C,OAAO6yB,GAOX1X,EAAgBjc,UAAU4zB,SAAW,SAAUnL,GAC3C3oB,KAAK2f,SACAgJ,EAAM7F,WACP6F,EAAM7F,SAAW,GAEhB6F,EAAM5F,WACP4F,EAAM5F,SAAW,GAEhB4F,EAAMjP,KACPiP,EAAMjP,GAAK,UAAY1Z,KAAKqc,QAAQxH,WACpC7U,KAAKqc,QAAUrc,KAAKqc,QAAU,GAGlC,IAAI+G,EAAY,IAAIlH,EAAMlc,KAAM,SAAU2oB,GAC1C3oB,KAAK+d,OAAOjT,KAAKsY,GACjBpjB,KAAK4f,gBAAgBwD,IACjBpjB,KAAK6f,eAAiBuD,EAAUlF,KAAOle,KAAK6f,eAAkBuD,EAAUlF,IAAMkF,EAAUlE,QACxFlf,KAAKge,oBAAoBoF,GAAalF,IAAKle,KAAK6f,eAAiBuD,EAAUlE,QAE/E,IAAIsK,EAAOxpB,KAAKmpB,WAAW/F,GAAW,GACtCpjB,KAAK2d,UAAUyF,EAAU1J,KAAQuE,IAAKmF,EAAUnF,IAAKC,IAAKkF,EAAUlF,KACpEle,KAAKotB,YAAYhK,EAAU1J,KAAQuE,IAAKmF,EAAUnF,IAAKC,IAAKkF,EAAUlF,KACtEle,KAAKyhB,qBACLzhB,KAAKqD,QAAQ0wB,sBAAsB,aAAcvK,GACjD,IAAIsH,EAAYtH,EAAKhf,cAAc,sBA6BnC,GA5BIxK,KAAKwe,mBACLxe,KAAKygB,wBACLzgB,KAAKooB,oBAAoBpoB,KAAKgd,mBAG9Bhd,KAAKmtB,gBAAiB,EACtBntB,KAAKsgB,YAAckJ,EACdxpB,KAAKutB,iBACNvtB,KAAKutB,mBAETvtB,KAAKof,iBAAiBoK,EAAMpG,EAAUnF,IAAKmF,EAAUlF,KACrDle,KAAKugB,kBAAkBiJ,EAAMpG,GAC7BpjB,KAAKmtB,gBAAiB,GAEtBntB,KAAKsjB,eACLtjB,KAAKmgB,aAAengB,KAAKwe,mBACzBxe,KAAK6wB,iBAAiBrH,EAAMsH,GAE5B9wB,KAAK2gB,eACL3gB,KAAKmgB,aAAengB,KAAKwe,mBACzBxe,KAAK4gB,uBAAuBnY,SAASiZ,eAAe0B,EAAU1J,MAE9D1Z,KAAKymB,eACLzmB,KAAK0mB,mBAET1mB,KAAKyhB,qBACLzhB,KAAK6gB,cACL7gB,KAAKghB,yBACDhhB,KAAKsjB,cACL,IAAK,IAAItiB,EAAI,EAAGA,EAAIwoB,EAAKvZ,iBAAiB,aAAatP,OAAQK,IAAK,CAChE,IAAIuN,EAAmC,SAAtB5G,UAAQC,KAAKC,KAAmB,wBAA0B,YAC3EW,eAAatB,IAAIsiB,EAAKvZ,iBAAiB,aAAajP,GAAIuN,EAAWvO,KAAKujB,kBAAmBvjB,MACjE,SAAtB2H,UAAQC,KAAKC,MACbW,eAAatB,IAAIsiB,EAAKvZ,iBAAiB,aAAajP,GAAI,aAAchB,KAAKwjB,uBAAwBxjB,QAUnHmc,EAAgBjc,UAAU8zB,YAAc,SAAUrL,GAC9C,GAAKA,EAAMjP,GAAX,CAGA,IAAI0Y,EAAgBpyB,KAAK4kB,gBAAgB+D,EAAMjP,IAC/C,GAAK0Y,EAAL,CAGApyB,KAAK2f,SACLgJ,EAAMzK,IAAOyK,EAAMzK,IAAM,EAAK,EAAMyK,EAAMzK,IAAMle,KAAK+e,QAAY/e,KAAK+e,QAAU,EAAI4J,EAAMzK,IACtF3X,oBAAkBoiB,EAAMzK,OACxByK,EAAMzK,IAAMkU,EAAclU,KAE9Ble,KAAKge,oBAAoBoU,EAAezJ,GACxC3oB,KAAK4f,gBAAgBwS,GACrB,IAAI5I,EAAO/gB,SAASiZ,eAAeiH,EAAMjP,IAMzC,GALA1Z,KAAKsgB,YAAckJ,EACnBxpB,KAAK+b,aAAeyN,EAAKhf,cAAc,sBACnCgf,EAAKhf,cAAc,sBACnBxK,KAAK2hB,iBAAiByQ,EAAcntB,SAAUukB,EAAK9P,GAAK,WAAYsC,GACxEwN,EAAK7b,YAAY3N,KAAK+b,cAClBqW,EAAcnW,OAAQ,CACtB,IAAIsG,EAAwBiH,EAAKhf,cAAc,mBAC3Cgf,EAAKhf,cAAc,mBAAqBxK,KAAK2hB,iBAAiB,GAAI6H,EAAK9P,GAAK,WAAY,IAC5FjS,YAAU8a,IAAyBtG,IACnCsG,EAAsB/b,UAAY,GAClC,IAAIkT,EAAK1Z,KAAKqD,QAAQqW,GAAK,iBAAmB0Y,EAAc1Y,GAC5D1Z,KAAK8hB,eAAesQ,EAAcnW,OAAQsG,EAAuB7I,GAAI,GACrE1Z,KAAK+b,aAAapO,YAAY4U,QAG1BiH,EAAKhf,cAAc,oBACnBP,SAAOuf,EAAKhf,cAAc,oBAGlC,GAAI4nB,EAAc1oB,QAAS,CACvB1J,KAAKwiB,UAAYgH,EAAKhf,cAAc,oBAAsBgf,EAAKhf,cAAc,oBACzExK,KAAK2hB,iBAAiByQ,EAAcntB,SAAUukB,EAAK9P,GAAK,QAASqC,GACrE/b,KAAKwiB,UAAUhc,UAAY,GAC3B,IAEIic,EAAqB,iBAFNziB,KAAK+b,aAAavR,cAAc,mBAC/C2F,OAAOuS,iBAAiB1iB,KAAK+b,aAAavR,cAAc,oBAAoB1F,OAAS,OAC/B,IAC1D6d,oBAAS3iB,KAAKwiB,WAAa1d,OAAQ2d,IAC/B/I,EAAK1Z,KAAKqD,QAAQqW,GAAK,kBAAoB0Y,EAAc1Y,GAC7D1Z,KAAK8hB,eAAesQ,EAAc1oB,QAAS1J,KAAKwiB,UAAW9I,GAAI,GAC/D1Z,KAAK+b,aAAapO,YAAY3N,KAAKwiB,gBAG/BgH,EAAKhf,cAAc,qBACnBP,SAAOuf,EAAKhf,cAAc,qBAGlCxK,KAAK+f,gBAAgByJ,EAAM4I,GAC3BpyB,KAAKqf,kBAAkBmK,EAAM4I,GAC7BpyB,KAAKof,iBAAiBoK,EAAM4I,EAAcnU,IAAKmU,EAAclU,KAC7Dle,KAAKugB,kBAAkBiJ,EAAM4I,GAC7BpyB,KAAKsgB,YAAc,KACnBtgB,KAAK+gB,eACL/gB,KAAKghB,4BAET7E,EAAgBjc,UAAU8gB,uBAAyB,WAC/ChhB,KAAKstB,WAAattB,KAAKid,YACvBjd,KAAKotB,YAAc6F,KAAKC,MAAMD,KAAKE,UAAUnzB,KAAK2d,aAMtDxB,EAAgBjc,UAAU+zB,UAAY,WAGlC,IAAK,IAFDC,EAAal0B,KAAKgzB,YAAYhzB,KAAK+d,QACnCoW,KACKnzB,EAAI,EAAGA,EAAIkzB,EAAWvzB,OAAQK,IACnCmzB,EAAarpB,MACT4O,GAAIwa,EAAWlzB,GAAG0Y,GAAIuE,IAAKiW,EAAWlzB,GAAGid,IAAKC,IAAKgW,EAAWlzB,GAAGkd,IAAKgB,MAAOgV,EAAWlzB,GAAGke,MAC3FC,MAAO+U,EAAWlzB,GAAGme,MAAO2D,SAAUoR,EAAWlzB,GAAG8hB,SAAUC,SAAUmR,EAAWlzB,GAAG+hB,SACtFC,SAAUkR,EAAWlzB,GAAGgiB,SAAUC,SAAUiR,EAAWlzB,GAAGiiB,WAGlE,UAKJ9G,EAAgBjc,UAAUk0B,UAAY,WAClC,IAAK,IAAIpzB,EAAI,EAAGA,EAAIhB,KAAKgd,gBAAgBrc,OAAQK,IAC7CiJ,SAAOjK,KAAKgd,gBAAgBhc,IAEhChB,KAAKq0B,iBACLr0B,KAAKoc,KAAO,EACZpc,KAAKkd,uBACLld,KAAK+oB,iBACL/oB,KAAK6gB,cACL7gB,KAAKid,eACLjd,KAAKod,uBACLpd,KAAKmd,kBACLnd,KAAKqd,0BACLrd,KAAKgd,mBACLhd,KAAK2d,aACL3d,KAAKotB,eACLptB,KAAKqK,eAAgB0T,YAAc,GACnC/d,KAAK+gB,eACL/gB,KAAKghB,0BAOT7E,EAAgBjc,UAAUo0B,YAAc,SAAU5a,GAE9C,IAAK,IADDpW,EAAQtD,KACHgB,EAAI,EAAGA,EAAIhB,KAAKgd,gBAAgBrc,OAAQK,IACzChB,KAAKgd,gBAAgBhc,GAAG0Y,KAAOA,IAC/BzP,SAAOjK,KAAKgd,gBAAgBhc,IAC5BhB,KAAKgd,gBAAgB5B,OAAOpa,EAAG,IAE/BhB,KAAK+d,OAAO/c,GAAG0Y,KAAOA,IACtB1Z,KAAK+d,OAAO3C,OAAOpa,EAAG,GACtBhB,KAAKyhB,qBACLzhB,KAAK6gB,eAGb7gB,KAAK+gB,eACL/gB,KAAKkd,oBAAoBnT,QAAQ,SAAUkY,GACnCA,EAAKvI,KAAOA,GACZpW,EAAM4Z,oBAAoB9B,OAAO9X,EAAM4Z,oBAAoBhS,QAAQ+W,GAAO,KAGlFjiB,KAAKghB,0BAST7E,EAAgBjc,UAAUq0B,UAAY,SAAU7a,EAAIuE,EAAKC,GACrDle,KAAKsc,iBAAkB,EACvB,IAAI8V,EAAgBpyB,KAAK4kB,gBAAgBlL,GACrCwE,EAAM,EACNA,EAAM,EAEDA,EAAMle,KAAK+e,UAChBb,EAAMle,KAAK+e,QAAU,GAEzB/e,KAAKge,oBAAoBoU,GAAiBnU,IAAKA,EAAKC,IAAKA,IACzD,IAAIhF,EAAMzQ,SAASiZ,eAAehI,GAClC1Z,KAAKsgB,YAAcpH,EACnBlZ,KAAKif,eAAgBjW,OAASkV,IAAKA,EAAIrJ,WAAYoJ,IAAKA,EAAIpJ,aAAgBqE,GAC5ElZ,KAAKof,iBAAiBlG,EAAK+E,EAAKC,GAChCle,KAAKugB,kBAAkBrH,EAAKkZ,GAC5BpyB,KAAKsf,kBACLtf,KAAK+gB,eACL/gB,KAAKghB,yBACLhhB,KAAKsc,iBAAkB,GAE3BH,EAAgBjc,UAAU+e,cAAgB,SAAUjW,EAAOkQ,GACvD,IAAK,IAAIlY,EAAI,EAAGA,EAAIvB,OAAOmF,KAAKoE,GAAOrI,OAAQK,IACvCvB,OAAOmF,KAAKoE,KACRA,EAAMvJ,OAAOmF,KAAKoE,GAAOhI,IAAIkd,KAC7BhF,EAAI9K,aAAa,WAAYpF,EAAMvJ,OAAOmF,KAAKoE,GAAOhI,IAAIkd,IAAIrJ,YAE9D7L,EAAMvJ,OAAOmF,KAAKoE,GAAOhI,IAAIid,KAC7B/E,EAAI9K,aAAa,WAAYpF,EAAMvJ,OAAOmF,KAAKoE,GAAOhI,IAAIid,IAAIpJ,YAE9D7L,EAAMvJ,OAAOmF,KAAKoE,GAAOhI,IAAIke,OAC7BhG,EAAI9K,aAAa,aAAcpF,EAAMvJ,OAAOmF,KAAKoE,GAAOhI,IAAIke,MAAMrK,YAElE7L,EAAMvJ,OAAOmF,KAAKoE,GAAOhI,IAAIme,OAC7BjG,EAAI9K,aAAa,aAAcpF,EAAMvJ,OAAOmF,KAAKoE,GAAOhI,IAAIme,MAAMtK,YAElE7L,EAAMvJ,OAAOmF,KAAKoE,GAAOhI,IAAI8hB,UAC7B5J,EAAI9K,aAAa,gBAAiBpF,EAAMvJ,OAAOmF,KAAKoE,GAAOhI,IAAI8hB,SAASjO,YAExE7L,EAAMvJ,OAAOmF,KAAKoE,GAAOhI,IAAI+hB,UAC7B7J,EAAI9K,aAAa,gBAAiBpF,EAAMvJ,OAAOmF,KAAKoE,GAAOhI,IAAI+hB,SAASlO,YAExE7L,EAAMvJ,OAAOmF,KAAKoE,GAAOhI,IAAIgiB,UAC7B9J,EAAI9K,aAAa,gBAAiBpF,EAAMvJ,OAAOmF,KAAKoE,GAAOhI,IAAIgiB,SAASnO,YAExE7L,EAAMvJ,OAAOmF,KAAKoE,GAAOhI,IAAIiiB,UAC7B/J,EAAI9K,aAAa,gBAAiBpF,EAAMvJ,OAAOmF,KAAKoE,GAAOhI,IAAIiiB,SAASpO,cAWxFsH,EAAgBjc,UAAUs0B,YAAc,SAAU9a,EAAIwF,EAAOC,GACzD,IAAIiT,EAAgBpyB,KAAK4kB,gBAAgBlL,GACzC1Z,KAAKuc,cAAe,EACpBvc,KAAKge,oBAAoBoU,GAAiBlT,MAAOA,EAAOC,MAAOA,IAC/Dnf,KAAK4f,gBAAgBwS,GACrBpyB,KAAKspB,kBAAkB8I,GACvB,IAAIlZ,EAAMzQ,SAASiZ,eAAehI,GAClC1Z,KAAKsgB,YAAcpH,EACnBlZ,KAAKif,eAAgBjW,OAASkW,MAAOkT,EAAclT,MAAMrK,WAAYsK,MAAOiT,EAAcjT,MAAMtK,aAAgBqE,GAChHlZ,KAAKqf,kBAAkBnG,EAAKkZ,GAC5BpyB,KAAKugB,kBAAkBrH,EAAKkZ,GAC5BpyB,KAAK+gB,eACL/gB,KAAKsf,kBACLtf,KAAKuc,cAAe,GAMxBJ,EAAgBjc,UAAUoa,QAAU,WAChC9S,eAAaxH,KAAKqD,UAAW,oBAAqB,QAAS,eAAgB,cAC3ErD,KAAKqD,QAAQoxB,gBAAgB,SAC7B,IAAK,IAAIzzB,EAAI,EAAGA,EAAIhB,KAAKud,eAAe5c,OAAQK,IAC5ChB,KAAKud,eAAevc,GAAGsZ,UAE3Bta,KAAKq0B,iBACDr0B,KAAK2e,OACL3e,KAAK2e,MAAM7V,SAEf/F,EAAO7C,UAAUoa,QAAQ/W,KAAKvD,OAElCmc,EAAgBjc,UAAUm0B,eAAiB,WACvCr0B,KAAKgd,gBAAgBjT,QAAQ,SAAUkY,GACnCA,EAAKnZ,YAGbqT,EAAgBjc,UAAUihB,aAAe,WACrCnhB,KAAK8F,UAAY2B,YAAUzH,KAAKqD,SAAU,SAAWmE,eAAaxH,KAAKqD,SAAU,UAErF8Y,EAAgBjc,UAAUw0B,gBAAkB,SAAUhb,GAGlD,IAAK,IAFDib,EACAzb,EAAMzQ,SAASiZ,eAAehI,GACzB1Y,EAAI,EAAGA,EAAIhB,KAAKud,eAAe5c,OAAQK,IAE5C,GADA2zB,EAAoB30B,KAAKud,eAAevc,GAAGqC,UAAY6V,EAAMlZ,KAAKud,eAAevc,GAAK,KAElF,OAAO2zB,EAGf,OAAOA,GAOXxY,EAAgBjc,UAAU00B,yBAA2B,WACjD50B,KAAKkhB,wBACLlhB,KAAK+oB,iBACL/oB,KAAK8oB,eACL,IAAK,IAAI9nB,EAAI,EAAGA,EAAIhB,KAAKqD,QAAQ4M,iBAAiB,YAAYtP,OAAQK,IAAK,CACvE,IAAIkY,EAAMlZ,KAAKqD,QAAQ4M,iBAAiB,YAAYjP,GAChDohB,EAAapiB,KAAK4kB,gBAAgB1L,EAAIQ,IAC1C1Z,KAAKqf,kBAAkBnG,EAAKkJ,GAC5BpiB,KAAKof,iBAAiBlG,EAAKkJ,EAAWnE,IAAKmE,EAAWlE,OAG9D/B,EAAgBjc,UAAU20B,wBAA0B,SAAU9W,GAC1D/d,KAAKo0B,YACLp0B,KAAKqK,eAAgB0T,OAAQA,IAAU,GACvC/d,KAAK6d,eACD7d,KAAK2e,OACL3e,KAAK2e,MAAM7V,SAEf9I,KAAKqe,aACDre,KAAKue,eACLve,KAAKye,iBAGbtC,EAAgBjc,UAAU40B,iBAAmB,SAAU/W,GACnD,IAAIza,EAAQtD,KACPuG,oBAAkBwX,KACnB/d,KAAKqc,QAAU,EACf0B,EAAOhU,QAAQ,SAAU4e,GAChBA,EAAMjP,KACPpW,EAAM0a,oBAAoB2K,GAASjP,GAAI,UAAYpW,EAAM+Y,QAAQxH,aACjEvR,EAAM+Y,QAAU/Y,EAAM+Y,QAAU,OAUhDF,EAAgBjc,UAAUmE,kBAAoB,SAAUC,EAASC,GAC7D,IAAIjB,EAAQtD,KACRsE,EAAQyZ,QACR/d,KAAK80B,iBAAiBxwB,EAAQyZ,QAElC,IAAK,IAAIrZ,EAAK,EAAGC,EAAKlF,OAAOmF,KAAKN,GAAUI,EAAKC,EAAGhE,OAAQ+D,IAAM,CAE9D,OADWC,EAAGD,IAEV,IAAK,YACD1E,KAAKqK,eAAgBvE,UAAWxB,EAAQwB,YAAa,GACrD9F,KAAKmhB,eACL,MACJ,IAAK,aACDnhB,KAAKqK,eAAgB8V,WAAY7b,EAAQ6b,aAAc,GACnDngB,KAAKwe,mBACLxe,KAAKygB,wBAET,MACJ,IAAK,gBACDzgB,KAAKqK,eAAgBsW,cAAerc,EAAQqc,gBAAiB,GAC7D3gB,KAAKqoB,cAAcroB,KAAKud,gBACxB,MACJ,IAAK,gBAED,GADAvd,KAAKqK,eAAgBiZ,cAAehf,EAAQgf,gBAAiB,GACzDtjB,KAAKsjB,cACLtjB,KAAKwgB,WAAWxgB,KAAKgd,iBACrBhd,KAAKqjB,mBAEJ,CACD,IAAK,IAAIriB,EAAI,EAAGA,EAAIyH,SAASwH,iBAAiB,aAAatP,OAAQK,IAAK,CACpE,IAAIuN,EAAmC,SAAtB5G,UAAQC,KAAKC,KAAmB,wBAA0B,YACvExE,EAAUoF,SAASwH,iBAAiB,aAAajP,GACrDwH,eAAaM,OAAOzF,EAASkL,EAAWvO,KAAKujB,mBACnB,SAAtB5b,UAAQC,KAAKC,MACbW,eAAaM,OAAOzF,EAAS,aAAcrD,KAAKwjB,wBAGxDxjB,KAAKooB,oBAAoBpoB,KAAKgd,iBAElC,MACJ,IAAK,cACDhd,KAAKqK,eAAgBkX,YAAajd,EAAQid,cAAe,GACzDvhB,KAAK40B,2BACL50B,KAAK0nB,kBACL,MACJ,IAAK,kBACD1nB,KAAKqK,eAAgBumB,gBAAiBtsB,EAAQssB,kBAAmB,GACjE,IAAS5vB,EAAI,EAAGA,EAAIhB,KAAKqD,QAAQ4M,iBAAiB,YAAYtP,OAAQK,IAAK,CACvE,IAAIkY,EAAMlZ,KAAKqD,QAAQ4M,iBAAiB,YAAYjP,GAC5BhB,KAAK00B,gBAAgBxb,EAAIQ,IAC/BmY,OAAS7xB,KAAK4wB,gBAEpC,MACJ,IAAK,gBACD5wB,KAAKqK,eAAgBoc,cAAeniB,EAAQmiB,gBAAiB,GAC7DzmB,KAAK0mB,mBACL,MACJ,IAAK,gBACG1mB,KAAKue,eACLve,KAAKqK,eAAgBkU,cAAeja,EAAQia,gBAAiB,GAC7Dve,KAAKye,iBAGDze,KAAK2e,OACL1U,SAAOjK,KAAK2e,OAGpB,MACJ,IAAK,eACD3e,KAAKqK,eAAgB2c,aAAc1iB,EAAQ0iB,eAAgB,GAC3D,MACJ,IAAK,SACI1iB,EAAQya,UACT/e,KAAKse,kBAAmB,EACxBte,KAAK60B,wBAAwBvwB,EAAQyZ,QACrC/d,KAAKse,kBAAmB,GAE5B,MACJ,IAAK,UACDte,KAAKse,kBAAmB,EACpBha,EAAQyZ,QACR/d,KAAK60B,wBAAwBvwB,EAAQyZ,QAEzC/d,KAAKqK,eAAgB0U,QAASza,EAAQya,UAAW,GACjD/e,KAAKgd,mBACLhd,KAAK6f,eAAiB7f,KAAK+e,QAC3B/e,KAAK8d,oBACL9d,KAAK+d,OAAOhU,QAAQ,SAAU4e,GAE1B,GADArlB,EAAMsc,gBAAgB+I,GAClBrlB,EAAMuc,eAAiB8I,EAAMzK,KAAO5a,EAAMuc,eAAkB8I,EAAMzK,IAAMyK,EAAMzJ,MAAQ,CACtF,IAAIY,EAAWxc,EAAMuc,eAAiB8I,EAAMzJ,MAC5C5b,EAAM0a,oBAAoB2K,GAASzK,IAAK4B,EAAW,EAAI,EAAIA,IAC3Dxc,EAAMyc,gBAAgBtX,SAASiZ,eAAeiH,EAAMjP,IAAKiP,GAE7DrlB,EAAM+b,kBAAkB5W,SAASiZ,eAAeiH,EAAMjP,IAAKiP,GAC3DrlB,EAAM0Z,gBAAgBlS,KAAKrC,SAASiZ,eAAeiH,EAAMjP,KACzDpW,EAAM8b,iBAAiB3W,SAASiZ,eAAeiH,EAAMjP,IAAKiP,EAAM1K,IAAK0K,EAAMzK,KAC3E5a,EAAMgd,YAAc7X,SAASiZ,eAAeiH,EAAMjP,IAClDpW,EAAMid,kBAAkB9X,SAASiZ,eAAeiH,EAAMjP,IAAKiP,GAC3DrlB,EAAMgd,YAAc,OAExBtgB,KAAK+gB,eACL/gB,KAAKghB,yBACLhhB,KAAKse,kBAAmB,EACxBte,KAAK0nB,qBASrBvL,EAAgBjc,UAAU6H,eAAiB,WAEvC,OAAO/H,KAAKgI,cADK,YAQrBmU,EAAgBjc,UAAU+H,cAAgB,WACtC,MAAO,mBAEX7H,GACI6C,YAAS,IACVkZ,EAAgBjc,UAAW,qBAAiB,GAC/CE,GACI6C,YAAS,IACVkZ,EAAgBjc,UAAW,qBAAiB,GAC/CE,GACI6C,YAAS,IACVkZ,EAAgBjc,UAAW,oBAAgB,GAC9CE,GACI6C,YAAS,IACVkZ,EAAgBjc,UAAW,qBAAiB,GAC/CE,GACI6C,WAAS,IACVkZ,EAAgBjc,UAAW,uBAAmB,GACjDE,GACI6C,YAAU,EAAG,KACdkZ,EAAgBjc,UAAW,mBAAe,GAC7CE,GACI6C,WAAS,IACVkZ,EAAgBjc,UAAW,eAAW,GACzCE,GACI6C,YAAS,IACVkZ,EAAgBjc,UAAW,qBAAiB,GAC/CE,GACI6C,WAAS,OACVkZ,EAAgBjc,UAAW,uBAAmB,GACjDE,GACI6C,WAAS,UACVkZ,EAAgBjc,UAAW,cAAU,GACxCE,GACI6C,WAAS,qBACVkZ,EAAgBjc,UAAW,kBAAc,GAC5CE,GACIob,gBAAeU,IAChBC,EAAgBjc,UAAW,cAAU,GACxCE,GACI6C,YAAU,kBACXkZ,EAAgBjc,UAAW,wBAAoB,GAClDE,GACIqb,WACDU,EAAgBjc,UAAW,cAAU,GACxCE,GACIqb,WACDU,EAAgBjc,UAAW,iBAAa,GAC3CE,GACIqb,WACDU,EAAgBjc,UAAW,YAAQ,GACtCE,GACIqb,WACDU,EAAgBjc,UAAW,gBAAY,GAC1CE,GACIqb,WACDU,EAAgBjc,UAAW,mBAAe,GAC7CE,GACIqb,WACDU,EAAgBjc,UAAW,cAAU,GACxCE,GACIqb,WACDU,EAAgBjc,UAAW,kBAAc,GAC5CE,GACIqb,WACDU,EAAgBjc,UAAW,eAAW,GACzCE,GACIqb,WACDU,EAAgBjc,UAAW,iBAAa,GAC3Cic,EAAkB/b,GACdsb,yBACDS,IAELR"}