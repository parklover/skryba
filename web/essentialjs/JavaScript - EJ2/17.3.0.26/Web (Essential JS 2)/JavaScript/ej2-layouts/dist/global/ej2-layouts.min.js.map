{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains('e-pane')) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                this.updateResizablePanes(i);\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.nextPane.style.flexGrow = '0';\n                if (_this.previousPane.classList.contains('e-collapsed') && _this.previousPane.style.flexGrow === '0') {\n                    _this.previousPane.style.flexGrow = '0';\n                }\n                else {\n                    _this.previousPane.style.flexGrow = '1';\n                }\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.previousElementSibling.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.splitInstance.prevPaneCollapsed && this.splitInstance.nextPaneExpanded) {\n            addClass([e.target], HIDE_ICON);\n            this.showCurrentBarIcon();\n            this.resizableModel(this.currentBarIndex, false);\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n                // first pane collapsible false\n                this.showTargetBarIcon(this.prevBar, this.leftArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            this.showCurrentBarIcon();\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                if (!this.paneSettings[this.currentBarIndex].collapsible && this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            this.showCurrentBarIcon();\n            removeClass([e.target], HIDE_ICON);\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n                else {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            this.showCurrentBarIcon();\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n                // only when middle pane collapsible to true\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                if (_this.previousPane.style.flexBasis.indexOf('%') > 0 || _this.nextPane.style.flexBasis.indexOf('%') > 0) {\n                    var previousFlexBasis = _this.updatePaneFlexBasis(_this.previousPane);\n                    var nextFlexBasis = _this.updatePaneFlexBasis(_this.nextPane);\n                    _this.totalPercent = previousFlexBasis + nextFlexBasis;\n                    _this.totalWidth = _this.convertPercentageToPixel(_this.totalPercent + '%');\n                }\n                else {\n                    _this.totalWidth = (_this.orientation === 'Horizontal') ? _this.previousPane.offsetWidth + _this.nextPane.offsetWidth :\n                        _this.previousPane.offsetHeight + _this.nextPane.offsetHeight;\n                }\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            val = (val).trim();\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            detach(this.element);\n            this.element = this.wrapper;\n            this.wrapperParent.appendChild(this.wrapper);\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel .e-panel-container .e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(document.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        if (this.table) {\n            this.table.remove();\n        }\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        this.panelCollection.forEach(function (item) {\n            item.remove();\n        });\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.initialize();\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","targetEle","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","setAttribute","toLowerCase","wireClickEvents","eventName","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","querySelectorAll","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","beforeExpandArgs","cancel","flexGrow","currentBarIndex","previousElementSibling","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","splitInstance","prevPaneCollapsed","nextPaneExpanded","showCurrentBarIcon","prevBar","nextPaneNextEle","nextBar","nextPaneIndex","beforeCollapseArgs","collapseEventArgs","isBlazor","event","prevPaneIndex","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","nextElementSibling","prevPanePreEle","currentIndex","getSeparatorIndex","getPrevBar","getNextBar","updateBars","preventDefault","resizeStartArgs","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","addPaneClass","removePaneOrders","paneClass","panes","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","item","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","attributes","upTarget","undefined","allowFloating","moveItemsUpwards","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","removePanel","movePanel","resizePanel","removeAttribute","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","keyEntity"],"mappings":"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"}